[
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "As urban infrastructures become increasingly digitized, data from sources like buses, taxis, and public utilities offer valuable insights into movement patterns over time and space. The widespread use of technologies like GPS and RFID in vehicles has generated massive datasets, including route and ridership data. Analyzing these datasets can reveal important patterns and characteristics of human movement in a city, benefiting urban management and transport service providers.\nThis study aims to leverage Exploratory Spatial Data Analysis (ESDA), specifically Local Indicators of Spatial Association (LISA) and Emerging Hot Spot Analysis (EHSA), to uncover spatial and spatio-temporal mobility patterns among public bus passengers in Singapore.\n\n\nThe R packages used for the analysis are as follows:\n\nsf: Analyzes and models spatial dependencies in data.\ntmap: Creates thematic maps for visualizing geospatial data.\ntidyverse: A collection of R packages with a unified approach for data manipulation and visualization.\nplotly: Enables interactive and dynamic data visualizations.\nzoo: Handles and analyzes time series data.\nKendall: Computes Kendall’s tau rank correlation coefficient for assessing rank-based associations.\nkableExtra: Enhances ‘knitr’ package’s ‘kable()’ function for styling HTML and LaTeX tables in R Markdown. It offers advanced formatting options like row/column customization, conditional styling, and captioning, elevating tables to publication quality.\nggrain: R-package that allows you to create Raincloud plots - following the ‘Grammar of Graphics’ (i.e., ggplot2)\nDT: Create interactive html tables\nggplot2: R package for creating complex and aesthetically pleasing data visualizations using a grammar of graphics.\ngridExtra: R package that provides functions for arranging multiple grid-based plots on a page, enhancing layout flexibility.\n\n\n\nCode\npacman::p_load(sf, sfdep, tmap, tidyverse, plotly, zoo, Kendall, kableExtra, ggrain, DT, ggplot2, gridExtra)\n\n\n\n\n\n\n\n\n\n\n\n\n\nImport BusOD\n\n\n\n\n\n\n\nCode\n# Load each csv file into R separately\nbus08 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\nbus09 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\nbus10 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n# Combine all rows into single dataframe\norigind &lt;- rbind(bus08, bus09, bus10)\n\nstr(origind)\n\n\nspc_tbl_ [17,118,005 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YEAR_MONTH         : chr [1:17118005] \"2023-08\" \"2023-08\" \"2023-08\" \"2023-08\" ...\n $ DAY_TYPE           : chr [1:17118005] \"WEEKDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKDAY\" ...\n $ TIME_PER_HOUR      : num [1:17118005] 16 16 14 14 17 17 17 17 7 17 ...\n $ PT_TYPE            : chr [1:17118005] \"BUS\" \"BUS\" \"BUS\" \"BUS\" ...\n $ ORIGIN_PT_CODE     : chr [1:17118005] \"04168\" \"04168\" \"80119\" \"80119\" ...\n $ DESTINATION_PT_CODE: chr [1:17118005] \"10051\" \"10051\" \"90079\" \"90079\" ...\n $ TOTAL_TRIPS        : num [1:17118005] 7 2 3 10 5 4 3 22 3 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YEAR_MONTH = col_character(),\n  ..   DAY_TYPE = col_character(),\n  ..   TIME_PER_HOUR = col_double(),\n  ..   PT_TYPE = col_character(),\n  ..   ORIGIN_PT_CODE = col_character(),\n  ..   DESTINATION_PT_CODE = col_character(),\n  ..   TOTAL_TRIPS = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n\n\n\n\n\n\n\nVariables\n\n\n\n\n\n\n\nCode\nhead(origind,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nYEAR_MONTH\nDAY_TYPE\nTIME_PER_HOUR\nPT_TYPE\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTOTAL_TRIPS\n\n\n\n\n2023-08\nWEEKDAY\n16\nBUS\n04168\n10051\n7\n\n\n2023-08\nWEEKENDS/HOLIDAY\n16\nBUS\n04168\n10051\n2\n\n\n2023-08\nWEEKENDS/HOLIDAY\n14\nBUS\n80119\n90079\n3\n\n\n2023-08\nWEEKDAY\n14\nBUS\n80119\n90079\n10\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n44069\n17229\n5\n\n\n2023-08\nWEEKDAY\n17\nBUS\n44069\n17229\n4\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n20281\n20141\n3\n\n\n2023-08\nWEEKDAY\n17\nBUS\n20281\n20141\n22\n\n\n2023-08\nWEEKDAY\n7\nBUS\n19051\n10017\n3\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n11169\n04219\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariables Description\n\n\n\n\n\n\nYEAR_MONTH: Data collection month in the format of YYYY-MM.\nDAY_TYPE: Weekday or Weekends/Holiday.\nTIME_PER_HOUR: Hour of the day in 24 hour format.\nPT_TYPE: Type of public transportation.\nORIGIN_PT_CODE: Identifier for the bus stop where the trip originated.\nDESTINATION_PT_CODE: Identifier for the bus stop where the trip ended.\nTOTAL_TRIPS: Total number of trips recorded for each origin-destination pair.\n\n\n\n\n\n\n\n\n\n\nSummary Statistics and EDA\n\n\n\n\n\n\n\nCode\nsummary(origind)\n\n\n  YEAR_MONTH          DAY_TYPE         TIME_PER_HOUR     PT_TYPE         \n Length:17118005    Length:17118005    Min.   : 0.00   Length:17118005   \n Class :character   Class :character   1st Qu.:10.00   Class :character  \n Mode  :character   Mode  :character   Median :14.00   Mode  :character  \n                                       Mean   :14.06                     \n                                       3rd Qu.:18.00                     \n                                       Max.   :23.00                     \n ORIGIN_PT_CODE     DESTINATION_PT_CODE  TOTAL_TRIPS      \n Length:17118005    Length:17118005     Min.   :    1.00  \n Class :character   Class :character    1st Qu.:    2.00  \n Mode  :character   Mode  :character    Median :    4.00  \n                                        Mean   :   20.46  \n                                        3rd Qu.:   12.00  \n                                        Max.   :36668.00  \n\n\n\n\nCode\n# Count unique values in ORIGIN_PT_CODE\nunique_origin_count &lt;- n_distinct(origind$ORIGIN_PT_CODE)\n\n# Count unique values in DESTINATION_PT_CODE\nunique_destination_count &lt;- n_distinct(origind$DESTINATION_PT_CODE)\n\n# Print the counts\nprint(paste(\"Unique origins:\", unique_origin_count))\n\n\n[1] \"Unique origins: 5075\"\n\n\nCode\nprint(paste(\"Unique destinations:\", unique_destination_count))\n\n\n[1] \"Unique destinations: 5079\"\n\n\n\n\nCode\n# Calculate the mean of TOTAL_TRIPS\nmean_total_trips &lt;- median(origind$TOTAL_TRIPS)\n\n# Count the number of rows where TOTAL_TRIPS is above the mean\nrows_above_mean &lt;- sum(origind$TOTAL_TRIPS &gt; mean_total_trips)\n\n# Print the count\nprint(rows_above_mean)\n\n\n[1] 7977626\n\n\n\n\nMost of the data types have a Class and Mode of “character”\nOver a three-month period, a total of 17,118,005 combinations of bus trips were recorded.\nThere are 5075 unique origin bus stops, and 5079 unique destination bus stops\nOn average, there are 20.46 trips for each bus route, but the highest recorded number of trips for a single route is an exceptional 36,668. This significant discrepancy suggests there might be outliers or anomalies in the data, warranting additional investigation.\nIn a dataset of 17 million trips, the low median of 4, high mean of 20.5, and a maximum of 38,000, along with over 7.9 million trips exceeding the median, indicate a right-skewed distribution. This suggests a concentration of lower-value trips with numerous higher-value outliers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImport BusStop\n\n\n\n\n\n\n\nCode\nbusstop &lt;- st_read(\n    dsn = \"data/geospatial\",\n    layer = \"BusStop\"\n  ) %&gt;%\n  mutate(\n    BUS_STOP_N = as.factor(BUS_STOP_N),\n    BUS_ROOF_N = as.factor(BUS_ROOF_N),\n    LOC_DESC = as.factor(LOC_DESC)\n  )\n\n\nReading layer `BusStop' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\nglimpse(busstop)\n\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;fct&gt; 22069, 32071, 44331, 96081, 11561, 66191, 23389, 54411, 285…\n$ BUS_ROOF_N &lt;fct&gt; B06, B23, B01, B05, B05, B03, B02A, B02, B09, B01, B16, B02…\n$ LOC_DESC   &lt;fct&gt; OPP CEVA LOGISTICS, AFT TRACK 13, BLK 239, GRACE INDEPENDEN…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\n\n\n\n\n\n\n\n\nCoordinate reference system\n\n\n\n\n\n\n\nCode\nst_crs(busstop)\n\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nThe EPSG.io database indicates that the coordinate system for Singapore is SVY21, associated with the EPSG code 3414. However, the ‘busstop’ dataset is currently projected using SVY21 with an EPSG code of 9001, highlighting a need to change to correct it to the EPSG code of 3414.\n\n\nCode\n# Setting the CRS for the busstop data to EPSG 3414\nbusstop &lt;- st_set_crs(busstop, 3414) %&gt;%\n  # Changing the column name for easier integration with main dataframe\n  mutate(\n    ORIGIN_PT_CODE = as.factor(BUS_STOP_N)\n  ) %&gt;%\n  # Keeping only necessary columns for further analysis\n  select(\n    ORIGIN_PT_CODE, \n    LOC_DESC,\n    geometry\n  )\n\n# Verifying the CRS assignment for busstop\nst_crs(busstop)\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#overview",
    "href": "Take-home_Ex1/Take-home_Ex1.html#overview",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "As urban infrastructures become increasingly digitized, data from sources like buses, taxis, and public utilities offer valuable insights into movement patterns over time and space. The widespread use of technologies like GPS and RFID in vehicles has generated massive datasets, including route and ridership data. Analyzing these datasets can reveal important patterns and characteristics of human movement in a city, benefiting urban management and transport service providers.\nThis study aims to leverage Exploratory Spatial Data Analysis (ESDA), specifically Local Indicators of Spatial Association (LISA) and Emerging Hot Spot Analysis (EHSA), to uncover spatial and spatio-temporal mobility patterns among public bus passengers in Singapore.\n\n\nThe R packages used for the analysis are as follows:\n\nsf: Analyzes and models spatial dependencies in data.\ntmap: Creates thematic maps for visualizing geospatial data.\ntidyverse: A collection of R packages with a unified approach for data manipulation and visualization.\nplotly: Enables interactive and dynamic data visualizations.\nzoo: Handles and analyzes time series data.\nKendall: Computes Kendall’s tau rank correlation coefficient for assessing rank-based associations.\nkableExtra: Enhances ‘knitr’ package’s ‘kable()’ function for styling HTML and LaTeX tables in R Markdown. It offers advanced formatting options like row/column customization, conditional styling, and captioning, elevating tables to publication quality.\nggrain: R-package that allows you to create Raincloud plots - following the ‘Grammar of Graphics’ (i.e., ggplot2)\nDT: Create interactive html tables\nggplot2: R package for creating complex and aesthetically pleasing data visualizations using a grammar of graphics.\ngridExtra: R package that provides functions for arranging multiple grid-based plots on a page, enhancing layout flexibility.\n\n\n\nCode\npacman::p_load(sf, sfdep, tmap, tidyverse, plotly, zoo, Kendall, kableExtra, ggrain, DT, ggplot2, gridExtra)\n\n\n\n\n\n\n\n\n\n\n\n\n\nImport BusOD\n\n\n\n\n\n\n\nCode\n# Load each csv file into R separately\nbus08 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\nbus09 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\nbus10 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n# Combine all rows into single dataframe\norigind &lt;- rbind(bus08, bus09, bus10)\n\nstr(origind)\n\n\nspc_tbl_ [17,118,005 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YEAR_MONTH         : chr [1:17118005] \"2023-08\" \"2023-08\" \"2023-08\" \"2023-08\" ...\n $ DAY_TYPE           : chr [1:17118005] \"WEEKDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKDAY\" ...\n $ TIME_PER_HOUR      : num [1:17118005] 16 16 14 14 17 17 17 17 7 17 ...\n $ PT_TYPE            : chr [1:17118005] \"BUS\" \"BUS\" \"BUS\" \"BUS\" ...\n $ ORIGIN_PT_CODE     : chr [1:17118005] \"04168\" \"04168\" \"80119\" \"80119\" ...\n $ DESTINATION_PT_CODE: chr [1:17118005] \"10051\" \"10051\" \"90079\" \"90079\" ...\n $ TOTAL_TRIPS        : num [1:17118005] 7 2 3 10 5 4 3 22 3 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YEAR_MONTH = col_character(),\n  ..   DAY_TYPE = col_character(),\n  ..   TIME_PER_HOUR = col_double(),\n  ..   PT_TYPE = col_character(),\n  ..   ORIGIN_PT_CODE = col_character(),\n  ..   DESTINATION_PT_CODE = col_character(),\n  ..   TOTAL_TRIPS = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n\n\n\n\n\n\n\nVariables\n\n\n\n\n\n\n\nCode\nhead(origind,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nYEAR_MONTH\nDAY_TYPE\nTIME_PER_HOUR\nPT_TYPE\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTOTAL_TRIPS\n\n\n\n\n2023-08\nWEEKDAY\n16\nBUS\n04168\n10051\n7\n\n\n2023-08\nWEEKENDS/HOLIDAY\n16\nBUS\n04168\n10051\n2\n\n\n2023-08\nWEEKENDS/HOLIDAY\n14\nBUS\n80119\n90079\n3\n\n\n2023-08\nWEEKDAY\n14\nBUS\n80119\n90079\n10\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n44069\n17229\n5\n\n\n2023-08\nWEEKDAY\n17\nBUS\n44069\n17229\n4\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n20281\n20141\n3\n\n\n2023-08\nWEEKDAY\n17\nBUS\n20281\n20141\n22\n\n\n2023-08\nWEEKDAY\n7\nBUS\n19051\n10017\n3\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n11169\n04219\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariables Description\n\n\n\n\n\n\nYEAR_MONTH: Data collection month in the format of YYYY-MM.\nDAY_TYPE: Weekday or Weekends/Holiday.\nTIME_PER_HOUR: Hour of the day in 24 hour format.\nPT_TYPE: Type of public transportation.\nORIGIN_PT_CODE: Identifier for the bus stop where the trip originated.\nDESTINATION_PT_CODE: Identifier for the bus stop where the trip ended.\nTOTAL_TRIPS: Total number of trips recorded for each origin-destination pair.\n\n\n\n\n\n\n\n\n\n\nSummary Statistics and EDA\n\n\n\n\n\n\n\nCode\nsummary(origind)\n\n\n  YEAR_MONTH          DAY_TYPE         TIME_PER_HOUR     PT_TYPE         \n Length:17118005    Length:17118005    Min.   : 0.00   Length:17118005   \n Class :character   Class :character   1st Qu.:10.00   Class :character  \n Mode  :character   Mode  :character   Median :14.00   Mode  :character  \n                                       Mean   :14.06                     \n                                       3rd Qu.:18.00                     \n                                       Max.   :23.00                     \n ORIGIN_PT_CODE     DESTINATION_PT_CODE  TOTAL_TRIPS      \n Length:17118005    Length:17118005     Min.   :    1.00  \n Class :character   Class :character    1st Qu.:    2.00  \n Mode  :character   Mode  :character    Median :    4.00  \n                                        Mean   :   20.46  \n                                        3rd Qu.:   12.00  \n                                        Max.   :36668.00  \n\n\n\n\nCode\n# Count unique values in ORIGIN_PT_CODE\nunique_origin_count &lt;- n_distinct(origind$ORIGIN_PT_CODE)\n\n# Count unique values in DESTINATION_PT_CODE\nunique_destination_count &lt;- n_distinct(origind$DESTINATION_PT_CODE)\n\n# Print the counts\nprint(paste(\"Unique origins:\", unique_origin_count))\n\n\n[1] \"Unique origins: 5075\"\n\n\nCode\nprint(paste(\"Unique destinations:\", unique_destination_count))\n\n\n[1] \"Unique destinations: 5079\"\n\n\n\n\nCode\n# Calculate the mean of TOTAL_TRIPS\nmean_total_trips &lt;- median(origind$TOTAL_TRIPS)\n\n# Count the number of rows where TOTAL_TRIPS is above the mean\nrows_above_mean &lt;- sum(origind$TOTAL_TRIPS &gt; mean_total_trips)\n\n# Print the count\nprint(rows_above_mean)\n\n\n[1] 7977626\n\n\n\n\nMost of the data types have a Class and Mode of “character”\nOver a three-month period, a total of 17,118,005 combinations of bus trips were recorded.\nThere are 5075 unique origin bus stops, and 5079 unique destination bus stops\nOn average, there are 20.46 trips for each bus route, but the highest recorded number of trips for a single route is an exceptional 36,668. This significant discrepancy suggests there might be outliers or anomalies in the data, warranting additional investigation.\nIn a dataset of 17 million trips, the low median of 4, high mean of 20.5, and a maximum of 38,000, along with over 7.9 million trips exceeding the median, indicate a right-skewed distribution. This suggests a concentration of lower-value trips with numerous higher-value outliers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImport BusStop\n\n\n\n\n\n\n\nCode\nbusstop &lt;- st_read(\n    dsn = \"data/geospatial\",\n    layer = \"BusStop\"\n  ) %&gt;%\n  mutate(\n    BUS_STOP_N = as.factor(BUS_STOP_N),\n    BUS_ROOF_N = as.factor(BUS_ROOF_N),\n    LOC_DESC = as.factor(LOC_DESC)\n  )\n\n\nReading layer `BusStop' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\nglimpse(busstop)\n\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;fct&gt; 22069, 32071, 44331, 96081, 11561, 66191, 23389, 54411, 285…\n$ BUS_ROOF_N &lt;fct&gt; B06, B23, B01, B05, B05, B03, B02A, B02, B09, B01, B16, B02…\n$ LOC_DESC   &lt;fct&gt; OPP CEVA LOGISTICS, AFT TRACK 13, BLK 239, GRACE INDEPENDEN…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\n\n\n\n\n\n\n\n\nCoordinate reference system\n\n\n\n\n\n\n\nCode\nst_crs(busstop)\n\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nThe EPSG.io database indicates that the coordinate system for Singapore is SVY21, associated with the EPSG code 3414. However, the ‘busstop’ dataset is currently projected using SVY21 with an EPSG code of 9001, highlighting a need to change to correct it to the EPSG code of 3414.\n\n\nCode\n# Setting the CRS for the busstop data to EPSG 3414\nbusstop &lt;- st_set_crs(busstop, 3414) %&gt;%\n  # Changing the column name for easier integration with main dataframe\n  mutate(\n    ORIGIN_PT_CODE = as.factor(BUS_STOP_N)\n  ) %&gt;%\n  # Keeping only necessary columns for further analysis\n  select(\n    ORIGIN_PT_CODE, \n    LOC_DESC,\n    geometry\n  )\n\n# Verifying the CRS assignment for busstop\nst_crs(busstop)\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#data-preparation",
    "href": "Take-home_Ex1/Take-home_Ex1.html#data-preparation",
    "title": "Take-home_Ex1",
    "section": "2 Data Preparation",
    "text": "2 Data Preparation\n\n2.1 Aspatial Data\nThe task specified in this particular project requires the computation of passenger trips at the following specific timeframes.\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\n\n2.1.1 Data Type Edit2.1.2 Categorizing DataPreview\n\n\n\n\nCode\norigind &lt;- origind %&gt;%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n\n\nAs mentioned before, ORIGIN_PT_CODE and DESTINATION_PT_CODE’s data type are in character format. Because they represent busstop locations, they should be transformed into factors (categorical data type) for further analysis\n\n\n\n\n\nCode\norigind_agg &lt;- origind %&gt;%\n  # Classify trips into specific time periods based on day type and hour\n  mutate(period = ifelse(DAY_TYPE == \"WEEKDAY\" & \n                         TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9, \n                         \"Weekday morning peak\",\n                    ifelse(DAY_TYPE == \"WEEKDAY\" & \n                           TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20,\n                           \"Weekday evening peak\",\n                      ifelse(DAY_TYPE == \"WEEKENDS/HOLIDAY\" &\n                             TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14,\n                              \"Weekend/PH morning peak\",\n                        ifelse(DAY_TYPE == \"WEEKENDS/HOLIDAY\" & \n                              TIME_PER_HOUR &gt;= 16 & TIME_PER_HOUR &lt;= 19,\n                               \"Weekend/PH evening peak\",\n                    \"Others\"))))\n  ) %&gt;%\n  # Exclude data outside the specified periods for focused analysis\n  filter(\n    period != \"Others\"\n  ) %&gt;%\n  # Aggregate the total number of trips by origin bus stop and month for each classified period\n  group_by(\n    YEAR_MONTH,\n    period,\n    ORIGIN_PT_CODE\n  ) %&gt;%\n  summarise(\n    num_trips = sum(TOTAL_TRIPS)\n  ) %&gt;%\n  ungroup()\n\n\n\nWe categorize and preprocess the data into the time frames as shown above\n\n\n\n\n\nCode\nlist(origind_agg)\n\n\n[[1]]\n# A tibble: 60,168 × 4\n   YEAR_MONTH period               ORIGIN_PT_CODE num_trips\n   &lt;chr&gt;      &lt;chr&gt;                &lt;fct&gt;              &lt;dbl&gt;\n 1 2023-08    Weekday evening peak 01012               8448\n 2 2023-08    Weekday evening peak 01013               7328\n 3 2023-08    Weekday evening peak 01019               3608\n 4 2023-08    Weekday evening peak 01029               9317\n 5 2023-08    Weekday evening peak 01039              12937\n 6 2023-08    Weekday evening peak 01059               2133\n 7 2023-08    Weekday evening peak 01109                322\n 8 2023-08    Weekday evening peak 01112              45010\n 9 2023-08    Weekday evening peak 01113              27233\n10 2023-08    Weekday evening peak 01119               9323\n# ℹ 60,158 more rows\n\n\n\n\n\n\n\n2.2 Data Checks and wrangling\n\n2.2.1 Aspatial Check for duplicates2.2.2 Aspatial Check for Null\n\n\n\n\nCode\n# Count of dupes\ncount_duplicate_rows &lt;- function(df, df_name) {\n  df %&gt;%\n    group_by_all() %&gt;%\n    filter(n() &gt; 1) %&gt;%\n    ungroup() %&gt;%\n    summarise(df_name = df_name, row_count = n())\n}\n\nduplicate1 &lt;- count_duplicate_rows(bus08, \"bus08\")\nduplicate2 &lt;- count_duplicate_rows(bus09, \"bus09\")\nduplicate3 &lt;- count_duplicate_rows(bus10, \"bus10\")\n\nall_duplicates &lt;- bind_rows(duplicate1, duplicate2, duplicate3)\n\n# Output the combined counts\nprint(all_duplicates)\n\n\n# A tibble: 3 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 bus08           0\n2 bus09           0\n3 bus10           0\n\n\n\nThere no duplicates which could adversely impact any join functions in the latter part of the project\n\n\n\n\n\nCode\n# Function to count the number of rows containing null values\ncount_null_rows &lt;- function(df, df_name) {\n  df %&gt;%\n    filter(if_any(everything(), is.na)) %&gt;%\n    summarise(df_name = df_name, row_count = n())\n}\n\n# Apply the function to each dataframe to count rows with nulls\nnulls1 &lt;- count_null_rows(bus08, \"bus08\")\nnulls2 &lt;- count_null_rows(bus09, \"bus09\")\nnulls3 &lt;- count_null_rows(bus10, \"bus10\")\n\n# Combine the results\nall_nulls &lt;- bind_rows(nulls1, nulls2, nulls3)\n\n# Print the counts of rows with nulls\nprint(all_nulls)\n\n\n# A tibble: 3 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 bus08           0\n2 bus09           0\n3 bus10           0\n\n\n\nThere no nulls which could adversely impact any join functions in the latter part of the project"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#data-exploration",
    "href": "Take-home_Ex1/Take-home_Ex1.html#data-exploration",
    "title": "Take-home_Ex1",
    "section": "3 Data Exploration",
    "text": "3 Data Exploration\nUnderstanding daily passenger trip distribution is crucial for urban traffic management and congestion relief, with geospatial analysis providing insights into areas of dense commuter traffic and patterns.\nAs a start, we will look at the distribution of passenger trips for different periods in September 2023\n\n\nCode\n# Generate scatter plots for September 2023 bus passenger data\nbus09_scatter &lt;- origind_agg %&gt;%\n  filter(YEAR_MONTH == \"2023-09\") %&gt;%  # Focus on September 2023\n  ggplot(aes(x = num_trips, y = period, fill = period, color = period)) +  # Set plot aesthetics\n  geom_point(size = 3, alpha = 0.7) +  # Create scatter plot\n  scale_x_continuous(  # Configure x-axis scale\n    labels = scales::number_format(accuracy = 1), \n    breaks = scales::pretty_breaks(n = 5)) +\n  scale_fill_brewer(palette = \"Set2\") +  # Use a Brewer color palette\n  labs(\n    title = \"September 2023: Peak Passenger Volumes in Weekday Mornings\",\n    subtitle = \"Variability during weekdays suggests potential congestion\") + \n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_blank()  # Remove x-axis labels for clarity\n  )  # Adjust plot theme for a clean appearance\n\n# Display the plot\nbus09_scatter\n\n\n\n\n\n\nPassenger counts are notably higher during peak weekday hours as opposed to weekend or public holiday peaks.\nEach peak hour time frame exhibits a distribution skewed toward higher values (right), indicating sporadic instances of unusually high passenger numbers.\nSuch patterns may point to congestion at the Central Business District (CBD), bus stops near the highways, where passengers frequent to change buses, or Bus interchanges.\nSubsequent investigation could ascertain if these occurrences are geographically clustered, helping to identify probable congestion focal points.\n\nNext we explore if the distribution changes across different months (i.e. August to October 2023)\n\n\nCode\n# Generate scatter plots for bus passenger data\norigind_scatter &lt;- origind_agg %&gt;%\n  ggplot(aes(x = period, y = num_trips, fill = period, color = period)) +\n  geom_violin(position = position_nudge(x = 0, y = .2), alpha = 0.5) +  # Create violin plots\n  geom_point(aes(y = num_trips, color = period), \n             position = position_jitter(height = .15), size = .5, alpha = 0.8) +  # Add jittered points\n  facet_wrap(~YEAR_MONTH, nrow = 1) +  # Facet by YEAR_MONTH for comparison\n  scale_y_continuous(labels = scales::number_format(accuracy = 1), \n                     breaks = scales::pretty_breaks(n = 3)) +  # Adjust y-axis scale\n  labs(title = \"Passenger Volume Distribution: Aug - Oct 2023\") +  # Add a descriptive title\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_blank(),\n    axis.text.x = element_blank()  # Remove x-axis labels for clarity\n  )  \n\n# Display the plot\norigind_scatter\n\n\n\n\n\nThe scatter plots indicate a consistent trip distribution across three months, suggesting the presence of bus stops with high passenger volumes, particularly during weekday evenings. This consistency hints at potential congestion hot spots, particularly if these stops are clustered. Consequently, focused Geospatial analysis on September 2023 data will be used to identify these areas."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#spatial-polygon-preparation",
    "href": "Take-home_Ex1/Take-home_Ex1.html#spatial-polygon-preparation",
    "title": "Take-home_Ex1",
    "section": "4 Spatial Polygon preparation",
    "text": "4 Spatial Polygon preparation\n\n4.1 Month- Data Extraction\nextract September 2023 data\n\n\nCode\n# Isolate September 2023 data for focused analysis\norigind09 &lt;- origind_agg %&gt;%\n  filter(YEAR_MONTH == \"2023-09\") %&gt;%  # Targeting September 2023\n  pivot_wider(  # Transform data to wide format for easier analysis\n    names_from = period,\n    values_from = num_trips\n  ) %&gt;%\n  select(-YEAR_MONTH)  # Exclude YEAR_MONTH column from the final output\n\n# Create a datatable visualization for the transformed data\nDT::datatable(origind09,\n              options = list(pageLength = 5, autoWidth = TRUE),\n              rownames = FALSE)  # Configure table display options\n\n\n\n\n\n\n\n\n\n4.2 Left Join to create dataframe\n\n\nCode\norigind09_sf &lt;- left_join(busstop, origind09, by = \"ORIGIN_PT_CODE\")\n\norigind09_sf\n\n\nSimple feature collection with 5161 features and 6 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   ORIGIN_PT_CODE             LOC_DESC Weekday evening peak\n1           22069   OPP CEVA LOGISTICS                   44\n2           32071         AFT TRACK 13                   NA\n3           44331              BLK 239                 1524\n4           96081 GRACE INDEPENDENT CH                  274\n5           11561              BLK 166                  134\n6           66191         AFT CORFE PL                  325\n7           23389              PEC LTD                  388\n8           54411              BLK 527                 1204\n9           28531              BLK 536                 3529\n10          96139              BLK 148                 1152\n   Weekday morning peak Weekend/PH evening peak Weekend/PH morning peak\n1                    13                       2                      20\n2                    NA                       1                      NA\n3                  1701                     630                     707\n4                   286                      99                     114\n5                   152                      79                      77\n6                   386                     193                     234\n7                    49                      81                      18\n8                  2764                     649                    1612\n9                  8000                    2222                    2373\n10                 4406                     735                     997\n                    geometry\n1  POINT (13576.31 32883.65)\n2  POINT (13228.59 44206.38)\n3   POINT (21045.1 40242.08)\n4  POINT (41603.76 35413.11)\n5  POINT (24568.74 30391.85)\n6  POINT (30951.58 38079.61)\n7    POINT (12476.9 32211.6)\n8  POINT (30329.45 39373.92)\n9  POINT (14993.31 36905.61)\n10  POINT (41642.81 36513.9)\n\n\n\n\n4.3 Creating Hexagon Spatial Grid\norigind09_sf , being a dataframe containing spatial points, isn’t ideal for spatial autocorrelation studies that necessitate ‘areas’ to be depicted as polygons. The code that follows will reorganize these bus stop points into a hexagonal lattice for better spatial analysis.\n\n\nCode\norigind09_hx &lt;- st_make_grid(\n    origind09_sf,\n    cellsize = 500,\n    square = FALSE\n  ) %&gt;%\n  st_sf() %&gt;%\n  rowid_to_column(\"hex_id\")\n\n\nThe code above does the following:\n\nThe cellsize parameter is measured in the same units as the origind09_sf dataframe’s coordinate system. Since origind09_sf uses EPSG:3414 projection, which has units in meters, this cellsize defines the hexagon’s width, here chosen to be 500 meters.\nEach hexagon is given a unique hex_id as the primary key.\n\n\n\n4.4 Generate Attribute Dataframe using Hexagon Identifiers\nThe hexagonal grid is designed to contain multiple bus stops, with each hexagon’s hex_id acting as the key for compiling data. The following steps detail the process for structuring attributes based on hex_id:\n\nApply st_join() with the st_within join condition to match bus stop points to their respective hexagons.\nUse st_set_geometry(NULL) to remove the spatial aspect, shifting the focus to attribute consolidation.\nImplement group_by() to consolidate data under a distinct hex_id.\nDeploy summarise() to tally the number of bus stops and to sum up trips for each peak period by hexagon.\nConvert any NA entries to 0 with replace(is.na(.), 0) to clean the dataset. #This is just a precaution although we already did the checks prior\n\n\n\nCode\n# Joining bus stops with hexagonal areas and summarizing data\norigind09_stops &lt;- origind09_sf %&gt;%\n  st_join(origind09_hx, join = st_within) %&gt;%  # Associate bus stops with hexagons\n  group_by(hex_id) %&gt;%  # Group by hexagon ID\n  summarise(\n    total_busstops = n(),  # Count bus stops per hexagon\n    busstop_ids = str_c(ORIGIN_PT_CODE, collapse = \", \"),  # Combine bus stop codes\n        loc_descriptions = str_c(LOC_DESC, collapse = \"; \"),  # Combine location descriptions\n    peak_weekday_morning = sum(`Weekday morning peak`),  # Sum for weekday morning peak\n    peak_weekday_evening = sum(`Weekday evening peak`),  # Sum for weekday evening peak\n    peak_weekend_morning = sum(`Weekend/PH morning peak`),  # Sum for weekend morning peak\n    peak_weekend_evening = sum(`Weekend/PH evening peak`)   # Sum for weekend evening peak\n  ) %&gt;%\n  st_set_geometry(NULL) %&gt;%  # Remove spatial component\n  replace_na(list(peak_weekday_morning = 0, peak_weekday_evening = 0,  # Replace NA with 0\n                  peak_weekend_morning = 0, peak_weekend_evening = 0)) %&gt;%\n  ungroup()  # Remove grouping\n\n# Display the processed data\norigind09_stops\n\n\n# A tibble: 1,524 × 8\n   hex_id total_busstops busstop_ids  loc_descriptions      peak_weekday_morning\n    &lt;int&gt;          &lt;int&gt; &lt;chr&gt;        &lt;chr&gt;                                &lt;dbl&gt;\n 1     34              1 25059        AFT TUAS STH BLVD                       91\n 2     65              1 25751        BEF TUAS STH AVE 14                     41\n 3     99              1 26379        YONG NAM                                50\n 4    127              1 25761        OPP REC S'PORE                         129\n 5    129              2 25719, 26389 THE INDEX; BEF TUAS …                 1104\n 6    130              1 26369        SEE HUP SENG                            34\n 7    131              1 26299        BEF TUAS STH AVE 6                      41\n 8    159              1 25741        HALLIBURTON                             66\n 9    160              1 25711        OPP THE INDEX                          204\n10    161              2 25701, 25709 GLAXOSMITHKLINE; EDG…                  842\n# ℹ 1,514 more rows\n# ℹ 3 more variables: peak_weekday_evening &lt;dbl&gt;, peak_weekend_morning &lt;dbl&gt;,\n#   peak_weekend_evening &lt;dbl&gt;\n\n\n\n\n4.5 Create Spatial Polygon dataframe\n\n\nCode\norigind09_hx &lt;- origind09_hx %&gt;%\n  left_join(origind09_stops,\n            by = \"hex_id\"\n  ) %&gt;%\n  replace(is.na(.), 0)\n\nbus_traffic_09 &lt;- filter(origind09_hx,\n                       total_busstops &gt; 0)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#visualization-and-sense-making",
    "href": "Take-home_Ex1/Take-home_Ex1.html#visualization-and-sense-making",
    "title": "Take-home_Ex1",
    "section": "5 5.0 Visualization and Sense Making",
    "text": "5 5.0 Visualization and Sense Making\nThis sections aims to conduct visualization and sense making of the current data before embarking on more complex methodologies such as Local Indicators of Spatial Association (LISA)\n\n\nCode\n# Switch to tmap interactive viewing mode\ntmap_mode(\"plot\")\n\n# Creating an interactive map of bus traffic\nbus_traffic_09_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +  # Connecting tm_shape directly to tm_fill\n  tm_fill(\n    col = \"total_busstops\",  # Color based on the number of bus stops\n    palette = \"YlGnBu\",  # Using the YlGnBu color palette\n    style = \"cont\",  # Continuous color style\n    id = \"loc_descriptions\",  # Identify hexagons by hex_id\n    popup.vars = c(\"Bus Stops Count\" = \"total_busstops\",\n                   \"Stop Codes\" = \"busstop_ids\"),  # Popup information\n    title = \"Number of Bus Stops\"  # Title for the color legend\n  ) +\n  tm_layout(\n    legend.show = TRUE)  \n\n# Display the interactive map\nbus_traffic_09_map\n\n\n\n\n\nThe map indicates that the central area, which likely includes the Business Districts, the likes of the Central Business districts or One North Business parks, as well as highly populated residential zones areas like Seng Kang, have a higher concentration of bus stops. These areas are known for their high human traffic which necessitates the need for a more conducive and extensive public transportation network to facilitate the daily travel needs of its patrons.\n\nIn contrast, the more unvisited areas of the island, such as Lim Chu Kang, an area marked for more agricultural activities, are marked by lighter shades, highlighting a sparser presence of bus stops.\nThese regions, which are less urbanized or more industrialized typically see lower human traffic.\n\nThe distribution of bus stops in Singapore as seen in the map emulates Singapore’s Land Transport Authority (LTA)’s strategic approach to provide an efficient bus serivice, focusing on providing efficient access and use of resources, as well as connectivity, especially in areas with high human traffic where public transport demand is higher.\n\n\n5.1 Peak Period Analysis\n\n\nCode\nsummary(origind09_sf)\n\n\n ORIGIN_PT_CODE                LOC_DESC    Weekday evening peak\n 11009  :   2   BLK 1              :   6   Min.   :     1      \n 22501  :   2   BLK 25             :   6   1st Qu.:   639      \n 43709  :   2   AFT YIO CHU KANG RD:   5   Median :  1797      \n 47201  :   2   BLK 101            :   5   Mean   :  4464      \n 51071  :   2   BLK 109            :   5   3rd Qu.:  4080      \n 52059  :   2   (Other)            :5126   Max.   :481495      \n (Other):5149   NA's               :   8   NA's   :170         \n Weekday morning peak Weekend/PH evening peak Weekend/PH morning peak\n Min.   :     1       Min.   :     1.0        Min.   :     1         \n 1st Qu.:   414       1st Qu.:   228.5        1st Qu.:   207         \n Median :  1946       Median :   715.0        Median :   742         \n Mean   :  4560       Mean   :  1707.7        Mean   :  1689         \n 3rd Qu.:  5430       3rd Qu.:  1666.0        3rd Qu.:  1889         \n Max.   :328545       Max.   :158693.0        Max.   :112330         \n NA's   :176          NA's   :202             NA's   :180            \n          geometry   \n POINT        :5161  \n epsg:3414    :   0  \n +proj=tmer...:   0  \n                     \n                     \n                     \n                     \n\n\nReinforcing the statements above, the summary has concluded that the data is indeed right skewed, as such the breaks for the following maps will be adjusted to better illustrate the comparisons between peak hour time frames\n\n\nCode\npeak_weekday_morning_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +\n  tm_fill(\n    col = \"peak_weekday_morning\",\n    palette = \"YlGnBu\",\n    title = \"Peak Weekday Morning Traffic\",\n    id = \"loc_descriptions\",\n    showNA = FALSE,\n    alpha = 0.6,\n    breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n  ) +\n  tm_borders() +\n  tm_layout(\n    legend.show = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    legend.width = 0.2,\n    legend.height = 0.5\n  )\n\npeak_weekday_morning_map\n\n\n\n\n\n\n\nCode\npeak_weekday_evening_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +\n  tm_fill(\n    col = \"peak_weekday_evening\",\n    palette = \"YlOrRd\",\n    title = \"Peak Weekday Evening Traffic\",\n    id = \"loc_descriptions\",\n    showNA = FALSE,\n    alpha = 0.6,\n    breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n  ) +\n  tm_borders() +\n  tm_layout(\n    legend.show = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    legend.width = 0.2,\n    legend.height = 0.5\n  )\n\npeak_weekday_evening_map\n\n\n\n\n\n\n\nCode\npeak_weekend_evening_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +  # Added '+' here\n  tm_fill(\n    col = \"peak_weekend_evening\",\n    palette = \"RdPu\",\n    title = \"Peak Weekend Evening Traffic\",\n    id = \"loc_descriptions\",\n    showNA = FALSE,\n    alpha = 0.6,\n    breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n  ) +\n  tm_borders() +\n  tm_layout(\n    legend.show = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    legend.width = 0.2,\n    legend.height = 0.5\n  )\n\npeak_weekend_evening_map\n\n\n\n\n\n\n\nCode\n# Creating a static map of peak weekend evening bus traffic\npeak_weekend_evening_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +\n  tm_fill(\n    col = \"peak_weekend_evening\",\n    palette = \"Blues\",\n    title = \"Peak Weekend Evening Traffic\",\n    id = \"loc_descriptions\",\n    showNA = FALSE,\n    alpha = 0.6,\n    breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n  ) +\n  tm_borders() +\n  tm_layout(legend.show = TRUE)\n\n# Display the map\npeak_weekend_evening_map\n\n\n\n\n\nUnsurprisingly, the weekdays’ trip volumes surpass that of the weekends/holidays, most plausibly due to the working crowd. Nonetheless, the areas regardless of the peak hour time frames, the areas which see higher human traffic remains unchanged, highlighting the efficacy of the Singapore bus network in serving the needs of the commuters.\n\n\n\nCode\n# Function to create a scatter plot\ncreate_scatter_plot &lt;- function(data, y_column_name, title, color = \"blue\") {\n  ggplot(data, aes_string(x = \"total_busstops\", y = y_column_name)) +\n    geom_point(alpha = 0.7, color = color) +\n    ylim(0, 500000) +\n    scale_y_continuous(breaks = scales::pretty_breaks(n = 6)) +\n    labs(title = title, x = \"Number of Bus Stops\", y = \"\") +\n    theme(panel.grid = element_blank())  # Removed axis.text.y = element_blank()\n}\n\n# Creating individual scatter plots\nmorning_peak_weekday &lt;- create_scatter_plot(bus_traffic_09, \"peak_weekday_morning\", \"Weekday Morning Peak\", \"blue\")\nevening_peak_weekday &lt;- create_scatter_plot(bus_traffic_09, \"peak_weekday_evening\", \"Weekday Evening Peak\", \"blue\")\nmorning_peak_weekend &lt;- create_scatter_plot(bus_traffic_09, \"peak_weekend_morning\", \"Weekend/PH Morning Peak\", \"green\")\nevening_peak_weekend &lt;- create_scatter_plot(bus_traffic_09, \"peak_weekend_evening\", \"Weekend/PH Evening Peak\", \"green\")\n\n# Combining the plots using grid.arrange\ncombined_plot &lt;- grid.arrange(morning_peak_weekday, evening_peak_weekday, morning_peak_weekend, evening_peak_weekend, ncol = 2, nrow = 2)\n\n\n\n\n\nThe volume of passenger trips appears to be greatest in regions having 4 to 8 bus stops. Contrarily, areas with the most bus stops, ranging from 9 to 11, did not experience the highest levels of passenger traffic during any peak times.\n\nThis indicates the possibility of an ideal number of bus stops within each 500m-wide area that could help in alleviating congestion, measures taken could be to look into replanning bus stops placements so as to not have diminishing returns."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#local-indicators-of-spatial-association",
    "href": "Take-home_Ex1/Take-home_Ex1.html#local-indicators-of-spatial-association",
    "title": "Take-home_Ex1",
    "section": "6 Local Indicators of Spatial Association",
    "text": "6 Local Indicators of Spatial Association\nIn preparing for spatial autocorrelation analysis, we first establish a spatial weights matrix to map the interconnections between hexagonal spatial units by their distance. Key to this setup is ensuring that each unit has at least one, but not all, other units as neighbors to reflect diverse spatial relationships accurately.\nGiven our dataset’s skewed distribution, we’ve chosen to assign 10 neighbors per feature, exceeding the suggested minimum of eight. This approach enhances the robustness of our spatial connectivity analysis.\nOur study area, marked by unevenly distributed bus stops and zones with low residential or business density, leads us to prefer distance-based methods over contiguity-based ones. This choice aligns better with our data’s spatial characteristics.\nWe adopt the Adaptive Distance-Based method, with a fixed number of neighbors, to accommodate our dataset’s right-skewed distribution. This method ensures each hexagon connects with exactly 10 neighbors. We employ the st_knn function to identify neighbors and st_weights to create row-standardized spatial weights, setting a solid foundation for our spatial autocorrelation analysis.\n\n6.1 Global Spatial Association Globally with Global Moran’s I\n\n\nCode\n# Adjusting bus_traffic_09 data with spatial weights\nweightmat_all &lt;- bus_traffic_09 %&gt;%\n  mutate(\n    knn = st_knn(geometry, k = 10),  # Calculating 10 nearest neighbors\n    weight_type = st_weights(knn, style = 'W'),  # Generating weights\n    .before = 1  # Placing the new columns at the beginning\n  )\n\n\n# check the output\nkable(head(weightmat_all))\n\n\n\n\n\nknn\nweight_type\nhex_id\ntotal_busstops\nbusstop_ids\nloc_descriptions\npeak_weekday_morning\npeak_weekday_evening\npeak_weekend_morning\npeak_weekend_evening\ngeometry\n\n\n\n\n2, 4, 5, 8, 9, 12, 16, 22, 23, 38\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n34\n1\n25059\nAFT TUAS STH BLVD\n91\n348\n0\n96\nPOLYGON ((3970.122 27925.48...\n\n\n1, 4, 5, 8, 9, 12, 16, 22, 23, 38\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n65\n1\n25751\nBEF TUAS STH AVE 14\n41\n131\n38\n40\nPOLYGON ((4220.122 28358.49...\n\n\n5, 6, 9, 10, 13, 14, 16, 17, 24, 25\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n99\n1\n26379\nYONG NAM\n50\n278\n78\n84\nPOLYGON ((4470.122 30523.55...\n\n\n1, 2, 8, 9, 12, 16, 22, 23, 38, 39\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n127\n1\n25761\nOPP REC S'PORE\n129\n1689\n246\n454\nPOLYGON ((4720.122 28358.49...\n\n\n3, 6, 9, 10, 12, 13, 14, 16, 17, 24\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n129\n2\n25719, 26389\nTHE INDEX; BEF TUAS STH AVE 5\n1104\n2608\n503\n646\nPOLYGON ((4720.122 30090.54...\n\n\n3, 5, 7, 9, 10, 13, 14, 17, 18, 25\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n130\n1\n26369\nSEE HUP SENG\n34\n185\n117\n27\nPOLYGON ((4720.122 30956.57...\n\n\n\n\n\n\n\n\n\nCode\n# Ensure consistent results\nset.seed(5555)\n\n# Assuming 'bus_traffic_09' is a spatial dataset with a 'geometry' column\n# List of columns for peak traffic analysis\nbus_traffic_columns &lt;- c(\"peak_weekday_morning\", \"peak_weekday_evening\", \"peak_weekend_morning\", \"peak_weekend_evening\")\n\n# Function to calculate global Moran's I\ncalculate_moran_i &lt;- function(dataset, column_name, neighbors) {\n  # Validate that the dataset is properly structured as a spatial data frame\n  if (!(\"geometry\" %in% names(dataset))) {\n    stop(\"The dataset does not have a geometry column.\")\n  }\n\n  # Validate that the column_name exists in the dataset\n  if (!(column_name %in% names(dataset))) {\n    stop(paste(\"Column\", column_name, \"not found in the dataset.\"))\n  }\n\n  # Establishing spatial relationships\n  neighbors_list &lt;- st_knn(dataset$geometry, k = neighbors)\n  weights &lt;- st_weights(neighbors_list, style = 'W')\n\n  # Executing Moran's I calculation\n  moran_test_result &lt;- global_moran_perm(dataset[[column_name]], neighbors_list, weights, nsim = 99)\n  \n  # Organizing the output\n  output &lt;- list(\n    column = column_name,\n    moran_i = moran_test_result\n  )\n  \n  return(output)\n}\n\n# Running the Moran's I calculation for each traffic time slot\nmoran_i_results &lt;- lapply(bus_traffic_columns, function(column) calculate_moran_i(bus_traffic_09, column, 10))\n\n# Displaying the calculated results\nprint(moran_i_results)\n\n\n[[1]]\n[[1]]$column\n[1] \"peak_weekday_morning\"\n\n[[1]]$moran_i\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.21341, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[2]]\n[[2]]$column\n[1] \"peak_weekday_evening\"\n\n[[2]]$moran_i\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.061867, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[3]]\n[[3]]$column\n[1] \"peak_weekend_morning\"\n\n[[3]]$moran_i\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15841, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[4]]\n[[4]]$column\n[1] \"peak_weekend_evening\"\n\n[[4]]$moran_i\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.11109, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nFor each of the four time slots, the p-values associated with the Global Moran’s I test are less than 0.05, indicating a rejection of the null hypothesis, which suggests randomness in spatial patterns.\n\nAdditionally, the positive values of the Moran’s I statistics imply a tendency towards clustering in the spatial distribution across all time intervals.\n\n\n6.2 LISA assessment\nInvestigating spatial patterns at a detailed level, we utilize the Local Moran’s I analysis to identify specific areas with strong or weak spatial associations. The methodology categorizes regions based on clustering types like high-high or low-low, revealing areas of similar or contrasting characteristics. We apply the local_moran function from the sfdep package for examining passenger trips at a hexagonal level, which calculates neighbors and weights automatically and uses simulated data for precision.\n\n\nCode\n# Create a function to perform local Moran's I analysis\nget_lisa &lt;- function(weightmat_all, bus_traffic_column, k) {\n  # Check if the bus_traffic_column is valid\n  if (nchar(bus_traffic_column) == 0) {\n    stop(\"The column name provided is empty.\")\n  }\n\n  # Compute spatial weights\n  nb &lt;- st_knn(weightmat_all$geometry, k = k)\n  wt &lt;- st_weights(nb, style = 'W')\n\n  # Perform local Moran's I analysis and create a new data frame\n  result &lt;- weightmat_all %&gt;% \n    mutate(\n      local_moran = local_moran(.data[[bus_traffic_column]], nb, wt, nsim = 99),\n      .before = 1\n    ) %&gt;%\n    unnest(local_moran)\n  \n  return(result)\n}\n\n# Assuming bus_traffic_columns is a vector of column names\nbus_traffic_columns &lt;- c(\"peak_weekday_morning\", \"peak_weekday_evening\", \"peak_weekend_morning\", \"peak_weekend_evening\")\n\n# Initialize a list to store results for each bus_traffic_column\nlisa_results &lt;- list()\n\n# Apply the function for each bus traffic time interval and store results in the list\nfor (btc in bus_traffic_columns) {\n  lisa_results[[btc]] &lt;- get_lisa(weightmat_all, btc, k = 10)\n  \n  # Remove columns that don't belong to the specific time interval\n  unwanted_columns &lt;- setdiff(bus_traffic_columns, btc)\n  lisa_results[[btc]] &lt;- lisa_results[[btc]][, !(names(lisa_results[[btc]]) %in% unwanted_columns)]\n}\n\n# Show sample output in an interactive table\ndatatable(lisa_results[[\"peak_weekday_morning\"]], \n          class = 'cell-border stripe', \n          options = list(pageLength = 5))\n\n\n\n\n\n\n\nWe now utilize the tmap package to generate choropleth maps that display Local Moran’s I values and corresponding p-values for four time intervals. The maps will highlight only significant Local Moran’s I values at a 5% significance level. The existing code is specifically used to extract these key Local Moran’s I values for map creation.\n\n\nCode\nget_sig_lmi_map &lt;- function(lisa_table, title) {\n  \n  sig_lisa_table &lt;- lisa_table %&gt;%\n    filter(p_ii_sim &lt; 0.05)\n  \n  result &lt;- tm_shape(lisa_table) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(sig_lisa_table) +\n    tm_fill(\"ii\", palette = \"Reds\") + \n    tm_borders(alpha = 0.4) +\n    tm_layout(\n      main.title = title,\n      main.title.size = 1.3\n    )\n  \n  return(result)\n  \n}\n# Applying the function to create maps for different peak intervals\n\nsig_lmi_1 &lt;- get_sig_lmi_map(lisa_results[[\"peak_weekday_morning\"]], \"Weekday Morning\" )\nsig_lmi_2 &lt;- get_sig_lmi_map(lisa_results[[\"peak_weekday_evening\"]], \"Weekday Afternoon\" )\nsig_lmi_3 &lt;- get_sig_lmi_map(lisa_results[[\"peak_weekend_morning\"]], \"Weekend Morning\" )\nsig_lmi_4 &lt;- get_sig_lmi_map(lisa_results[[\"peak_weekend_evening\"]], \"Weekend Afternoon\" )\n\ntmap_mode('plot')\n\ntmap_arrange(\n  sig_lmi_1,\n  sig_lmi_2,\n  sig_lmi_3,\n  sig_lmi_4,\n  asp = 2,\n  nrow = 2,\n  ncol = 2\n)\n\n\n\n\n\nNow we zoom into an analysis of which α = 5% for Local Indicators of Spatial Association (LISA)\n\n\nCode\n# Function for constructing thematic maps based on significant Local Moran's I data\ngenerate_thematic_lisa_maps &lt;- function(lisa_data_set, chart_title) {\n  \n  # Filtering for significant Local Moran's I values\n  significant_lisa_data &lt;- lisa_data_set %&gt;%\n    filter(p_ii_sim  &lt; 0.05)\n  \n  # Building the map visualization\n  thematic_map_output &lt;- tm_shape(lisa_data_set) +\n        tm_polygons(alpha = 0.5) +\n        tm_borders(alpha = 0.5) +\n        tm_shape(significant_lisa_data) +\n        tm_fill(\"median\",  \n                id = \"loc_desc\",  \n                palette = c(\"deepskyblue\", \"salmon\", \"green\", \"darkred\"),\n                alpha = 0.7) +\n        tm_borders(alpha = 0.4) +\n        tm_layout(\n            main.title = chart_title,\n            main.title.size = 1.5,\n            legend.position = c(\"left\", \"top\")\n        )\n\n    return(thematic_map_output)\n}\n\n# Creating maps for different time intervals\nlisa_map_morning_peak &lt;- generate_thematic_lisa_maps(lisa_results[[\"peak_weekday_morning\"]], \"Significant LISA - Weekday Morning\")\nlisa_map_evening_peak &lt;- generate_thematic_lisa_maps(lisa_results[[\"peak_weekday_evening\"]], \"Significant LISA - Weekday Evening\")\nlisa_map_weekend_morning &lt;- generate_thematic_lisa_maps(lisa_results[[\"peak_weekend_morning\"]], \"Significant LISA - Weekend Morning\")\nlisa_map_weekend_evening &lt;- generate_thematic_lisa_maps(lisa_results[[\"peak_weekend_evening\"]], \"Significant LISA - Weekend Evening\")\n\n\n\n\nCode\ntmap_mode('plot')\nlisa_map_morning_peak\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nlisa_map_evening_peak\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nlisa_map_weekend_morning\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nlisa_map_weekend_evening\n\n\n\n\n\n\nDeep Sky Blue Areas (Low-Low Clusters): These zones are characterized by fewer trips at bus stops, which are also surrounded by other areas with low trip frequencies, forming a cluster of less busy locations.\nGreen Areas (Low-High Outliers): These areas show unique patterns where bus stops have fewer trips in contrast to neighboring areas, indicating isolated spots of lower activity amidst busier surroundings.\nSalmon Areas (High-Low Outliers): These regions are marked by bus stops with notably higher trip counts than their neighboring areas, highlighting them as exceptional spots of increased activity within less active zones.\nDark Red Areas (High-High Clusters): Here, bus stops see a higher volume of trips, and are in proximity to areas with similarly high activity, suggesting a concentration of busy locations.\n\n\n\n6.3 Findings\n\nHigh-High\n\nWeekday morning vs evening, generally see the high-high clusters in the same areas (Business Districts/ Residential areas, however it is noticed that the clusters generally shrink in size when compared from morning to evening. which could be due to the following reasons:\n\nMorning Peak: Bus use spikes in the morning due to simultaneous commutes to work and schools, creating distinct high-usage clusters.\nEvening Spread: Evening could be seeing a staggered exodus from business hubs to varied locations, diffusing the earlier high-usage patterns.\nShift in Activities: Daytime high traffic in business and industrial zones transitions to residential and leisure areas at night, altering usage patterns.1.\nVaried Destinations: Evening trips are more dispersed as people head to homes, dining, or leisure spots, reducing reliance on main transit hubs.\nDiverse Evening Travel: With more unpredictable routes and choices for non-commuting travel in the evening, the uniform high-usage clusters dissipate.\n\nWeekend mornings see concentrated bus travel to areas busy with shopping and leisure, forming high-high clusters. By evening, these clusters diminish as daytime activities cease and the commuters might have returned home in a staggered fashion outside of the peak hours\n\n\n\nLow-Low\n\nBus trips are less frequent in the industrial western sectors of Singapore, indicating lower public transport usage, possibly due to a sparse population or alternative transport options. These patterns showcase the area’s distinct travel dynamics.\nComparing the maps for weekday mornings and evenings or weekend mornings and evenings, one may notice changes in the size and distribution of low-low clusters. These changes can provide insights into how public transportation demand varies throughout the day and week.\nNotably, you can see some areas such as Woodlands Waterfront Park and West Coast park see their Low-Low cluster shrinking during the weekday evening\nSimilar to the weekday, the low low clusters for the weekend are typically in the industrial areas in the west for both morning and evening"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html",
    "href": "In-class_Ex5/In-class_Ex5.html",
    "title": "In-class_Ex5",
    "section": "",
    "text": "We opt to install the git version directly from GitHub instead of using the one available on (CRAN).\n\n\nCode\ndevtools::install_github(\"LukeCe/spflow\")\n\n\nWe proceed to load spflow along with other necessary R packages into the R environment for use.\n\n\nCode\npacman::p_load(tmap, sf, spdep, sp, Matrix, spflow, reshape2, knitr, tidyverse)\n\n\nTo calibrate Spatial Econometric Interaction Models using the spflow package, we need three datasets: spatial weights, a tibble data frame , destinations, flows, and distances, and a data frame of explanatory variables.\nShapefile will be imported into R environment as a sf tibble data.frame called mpsz\n\n\nCode\nmpsz &lt;- st_read(dsn = \"./data/geospatial\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs=3414)  %&gt;%\n  mutate(\n    SUBZONE_N = as.factor(SUBZONE_N),\n    SUBZONE_C = as.factor(SUBZONE_C),\n    PLN_AREA_N = as.factor(PLN_AREA_N),\n    PLN_AREA_C = as.factor(PLN_AREA_C),\n    REGION_N = as.factor(REGION_N),\n    REGION_C = as.factor(REGION_C),\n  )\n\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Zackkoh94\\ISSS624\\In-class_Ex5\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\n# check the output\nglimpse(mpsz)\n\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;fct&gt; MARINA EAST, INSTITUTION HILL, ROBERTSON QUAY, JURONG ISLAN…\n$ SUBZONE_C  &lt;fct&gt; MESZ01, RVSZ05, SRSZ01, WISZ01, MUSZ02, MPSZ05, WISZ03, WIS…\n$ PLN_AREA_N &lt;fct&gt; MARINA EAST, RIVER VALLEY, SINGAPORE RIVER, WESTERN ISLANDS…\n$ PLN_AREA_C &lt;fct&gt; ME, RV, SR, WI, MU, MP, WI, WI, SI, SI, BM, DT, SV, BM, BM,…\n$ REGION_N   &lt;fct&gt; CENTRAL REGION, CENTRAL REGION, CENTRAL REGION, WEST REGION…\n$ REGION_C   &lt;fct&gt; CR, CR, CR, WR, CR, CR, WR, WR, CR, CR, CR, CR, CR, CR, CR,…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29..., MULTIPOLYGON (…\n\n\n\n\nCode\nbusstop &lt;- st_read(dsn = \"./data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `BusStop' from data source \n  `C:\\Zackkoh94\\ISSS624\\In-class_Ex5\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48280.78 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\n# check the data\nglimpse(busstop)\n\n\nRows: 5,159\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\nIn this study our analysis will be focused on planning subzone with bus stop. In view of this, the code chunk below will be used to perform Point-in-Polygon count analysis.\n\n\nCode\ncentroids &lt;- suppressWarnings({\nst_point_on_surface(st_geometry(mpsz_busstop))\n})\n\nmpsz_nb &lt;- list(\n  \"by_contiguity\" = poly2nb(mpsz_busstop),\n  \"by_distance\" = dnearneigh(centroids, d1 = 0, d2 = 5000),\n  \"by_knn\" = knn2nb(knearneigh(centroids,3))\n  )\n\n\n\n\nCode\nmpsz_nb\n\n\n\n\n\n\nCode\nschools &lt;- read_rds(\"./data/rds/schools.rds\")\n\n\n\n\nCode\nmpsz_nb &lt;- read_rds(\"./data/rds/mpsz_nb.rds\")\nmpsz_flow &lt;- read_rds(\"./data/rds/mpsz_flow.rds\")\nmpsz_var &lt;- read_rds(\"./data/rds/mpsz_var.rds\")\n\n\n\n\nCode\nglimpse(mpsz_nb)\n\n\nList of 3\n $ by_contiguity:List of 313\n  ..$ : int [1:4] 2 3 66 69\n  ..$ : int [1:7] 1 3 32 37 38 69 80\n  ..$ : int [1:7] 1 2 38 65 66 67 71\n  ..$ : int [1:4] 47 75 87 281\n  ..$ : int [1:2] 6 9\n  ..$ : int [1:8] 5 7 8 9 10 12 16 19\n  ..$ : int [1:5] 6 11 12 19 23\n  ..$ : int [1:4] 6 19 28 31\n  ..$ : int [1:7] 5 6 10 13 17 18 70\n  ..$ : int [1:5] 6 9 12 13 16\n  ..$ : int [1:5] 7 14 15 19 23\n  ..$ : int [1:6] 6 7 10 16 20 23\n  ..$ : int [1:6] 9 10 16 17 21 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:5] 11 14 19 23 25\n  ..$ : int [1:9] 6 10 12 13 20 22 27 29 34\n  ..$ : int [1:5] 9 13 18 21 41\n  ..$ : int [1:5] 9 17 39 41 70\n  ..$ : int [1:9] 6 7 8 11 15 25 28 30 31\n  ..$ : int [1:6] 12 16 23 27 32 280\n  ..$ : int [1:6] 13 17 22 36 40 41\n  ..$ : int [1:7] 13 16 21 29 34 35 36\n  ..$ : int [1:10] 7 11 12 14 15 20 25 26 32 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:8] 15 19 23 24 26 30 33 67\n  ..$ : int [1:6] 23 24 25 32 33 38\n  ..$ : int [1:5] 16 20 29 32 37\n  ..$ : int [1:5] 8 19 30 31 64\n  ..$ : int [1:5] 16 22 27 34 37\n  ..$ : int [1:5] 19 25 28 64 67\n  ..$ : int [1:4] 8 19 28 64\n  ..$ : int [1:9] 2 20 23 26 27 33 37 38 280\n  ..$ : int [1:6] 24 25 26 32 38 67\n  ..$ : int [1:6] 16 22 29 35 37 42\n  ..$ : int [1:5] 22 34 36 42 85\n  ..$ : int [1:8] 21 22 35 40 41 42 68 85\n  ..$ : int [1:7] 2 27 29 32 34 42 80\n  ..$ : int [1:6] 2 3 26 32 33 67\n  ..$ : int [1:6] 18 41 51 54 70 76\n  ..$ : int [1:6] 21 36 41 43 46 68\n  ..$ : int [1:8] 17 18 21 36 39 40 46 76\n  ..$ : int [1:6] 34 35 36 37 80 85\n  ..$ : int [1:6] 40 46 48 68 85 278\n  ..$ : int [1:4] 61 82 110 121\n  ..$ : int [1:5] 62 73 79 83 116\n  ..$ : int [1:8] 40 41 43 49 68 76 115 278\n  ..$ : int [1:5] 4 58 84 281 282\n  ..$ : int [1:5] 43 68 85 136 278\n  ..$ : int [1:5] 46 54 76 115 119\n  ..$ : int [1:7] 80 85 86 125 126 131 136\n  ..$ : int [1:6] 39 54 70 118 120 127\n  ..$ : int [1:5] 61 78 111 121 132\n  ..$ : int [1:4] 75 87 128 134\n  ..$ : int [1:7] 39 49 51 76 119 120 135\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:4] 112 118 138 139\n  ..$ : int [1:3] 60 117 126\n  ..$ : int [1:7] 47 84 116 122 123 266 282\n  ..$ : int [1:4] 87 134 137 281\n  ..$ : int [1:8] 57 69 74 77 78 86 117 126\n  ..$ : int [1:5] 44 52 71 78 121\n  ..$ : int [1:6] 45 73 79 82 110 116\n  ..$ : int [1:4] 55 114 129 130\n  ..$ : int [1:5] 28 30 31 67 84\n  ..$ : int [1:5] 3 67 71 73 79\n  ..$ : int [1:5] 1 3 69 71 78\n  ..$ : int [1:11] 3 25 30 33 38 64 65 72 73 81 ...\n  ..$ : int [1:6] 36 40 43 46 48 85\n  ..$ : int [1:8] 1 2 60 66 74 77 78 80\n  ..$ : int [1:5] 9 18 39 51 118\n  ..$ : int [1:7] 3 61 65 66 78 79 82\n  ..$ : int [1:5] 67 73 81 83 84\n  ..$ : int [1:7] 45 62 65 67 72 79 83\n  ..$ : int [1:5] 60 69 77 78 80\n  ..$ : int [1:4] 4 53 87 281\n  ..$ : int [1:5] 39 41 46 49 54\n  ..$ : int [1:5] 60 69 74 80 86\n  ..$ : int [1:7] 52 60 61 66 69 71 74\n  ..$ : int [1:7] 45 62 65 71 73 82 110\n  ..$ : int [1:9] 2 37 42 50 69 74 77 85 86\n  ..$ : int [1:5] 67 72 83 84 266\n  ..$ : int [1:5] 44 62 71 79 110\n  ..$ : int [1:6] 45 72 73 81 116 266\n  ..$ : int [1:7] 47 58 64 67 72 81 266\n  ..$ : int [1:9] 35 36 42 43 48 50 68 80 136\n  ..$ : int [1:5] 50 60 77 80 126\n  ..$ : int [1:6] 4 53 59 75 134 281\n  ..$ : int [1:9] 91 105 108 109 129 130 133 203 287\n  ..$ : int [1:6] 96 103 122 140 178 282\n  ..$ : int [1:7] 100 127 138 141 175 181 271\n  ..$ : int [1:7] 88 108 129 133 139 179 185\n  ..$ : int [1:6] 101 125 131 136 177 194\n  ..$ : int [1:6] 98 102 134 137 188 192\n  ..$ : int [1:5] 126 131 142 176 177\n  ..$ : int [1:7] 101 119 124 135 175 190 193\n  ..$ : int [1:7] 89 102 103 137 178 202 282\n  ..$ : int [1:6] 99 104 106 107 144 145\n  ..$ : int [1:7] 93 134 143 149 188 192 196\n  ..$ : int [1:7] 97 107 142 145 176 182 187\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language poly2nb(pl = mpsz_busstop)\n  ..- attr(*, \"type\")= chr \"queen\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_distance  :List of 313\n  ..$ : int [1:91] 2 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:91] 1 2 4 6 7 8 9 10 11 12 ...\n  ..$ : int [1:56] 3 6 7 8 11 14 15 19 23 24 ...\n  ..$ : int [1:34] 1 2 6 7 8 9 10 11 12 13 ...\n  ..$ : int [1:62] 1 2 3 4 5 7 8 9 10 11 ...\n  ..$ : int [1:74] 1 2 3 4 5 6 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 4 5 6 7 10 11 12 ...\n  ..$ : int [1:53] 1 2 3 5 6 7 10 11 12 13 ...\n  ..$ : int [1:74] 1 2 3 5 6 7 8 9 11 12 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:44] 2 9 10 12 13 16 17 20 21 22 ...\n  ..$ : int [1:73] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:80] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:72] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:82] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:79] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:82] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:78] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:67] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:87] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:75] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:89] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:41] 9 10 13 17 18 21 22 29 34 35 ...\n  ..$ : int [1:59] 1 2 9 10 12 13 16 17 18 20 ...\n  ..$ : int [1:49] 2 9 10 13 16 17 18 20 21 22 ...\n  ..$ : int [1:89] 1 2 3 6 7 9 10 11 12 13 ...\n  ..$ : int [1:63] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:97] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:54] 9 10 13 16 17 18 21 22 29 34 ...\n  ..$ : int [1:71] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:65] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:43] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:87] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:38] 18 39 40 41 43 46 48 49 54 56 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 10 11 12 13 ...\n  ..$ : int [1:16] 59 75 87 93 98 102 128 134 137 143 ...\n  ..$ : int [1:41] 18 36 39 40 41 43 46 48 49 50 ...\n  ..$ : int [1:12] 63 88 105 109 113 114 129 130 146 203 ...\n  ..$ : int [1:30] 49 51 54 70 76 90 91 95 100 112 ...\n  ..$ : int [1:96] 1 2 3 7 10 11 12 13 14 15 ...\n  ..$ : int [1:84] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:35] 4 31 47 53 58 64 75 81 83 84 ...\n  ..$ : int [1:101] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:13] 55 88 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:66] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:24] 17 18 39 40 41 43 46 48 49 51 ...\n  ..$ : int [1:96] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:89] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:100] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:21] 4 47 53 58 59 87 89 93 96 98 ...\n  ..$ : int [1:39] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:88] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:74] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:93] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:27] 4 47 53 58 59 75 84 89 93 96 ...\n  ..$ : int [1:21] 55 63 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:68] 3 4 44 45 47 52 58 59 61 62 ...\n  ..$ : int [1:45] 49 51 54 56 76 91 95 100 101 112 ...\n  ..$ : int [1:32] 56 63 88 90 100 108 109 112 113 114 ...\n  ..$ : int [1:51] 35 36 39 40 41 42 43 46 48 49 ...\n  ..$ : int [1:27] 53 59 75 87 89 96 98 102 103 128 ...\n  ..$ : int [1:71] 1 2 3 22 27 29 34 35 36 37 ...\n  ..$ : int [1:47] 39 43 46 48 49 51 54 56 76 85 ...\n  ..$ : int [1:59] 4 44 45 47 58 59 62 64 72 73 ...\n  ..$ : int [1:82] 1 3 33 38 44 45 47 52 57 58 ...\n  ..$ : int [1:23] 53 59 75 87 93 102 128 134 137 143 ...\n  ..$ : int [1:79] 1 2 3 38 44 45 50 52 57 58 ...\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language dnearneigh(x = centroids, d1 = 0, d2 = 5000)\n  ..- attr(*, \"dnn\")= num [1:2] 0 5000\n  ..- attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n  ..- attr(*, \"nbtype\")= chr \"distance\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_knn       :List of 313\n  ..$ : int [1:3] 2 66 69\n  ..$ : int [1:3] 1 37 69\n  ..$ : int [1:3] 38 65 71\n  ..$ : int [1:3] 31 47 281\n  ..$ : int [1:3] 6 7 12\n  ..$ : int [1:3] 7 8 19\n  ..$ : int [1:3] 11 14 23\n  ..$ : int [1:3] 19 28 31\n  ..$ : int [1:3] 10 13 17\n  ..$ : int [1:3] 13 16 22\n  ..$ : int [1:3] 7 14 15\n  ..$ : int [1:3] 7 20 23\n  ..$ : int [1:3] 10 16 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:3] 11 14 25\n  ..$ : int [1:3] 10 13 29\n  ..$ : int [1:3] 9 21 36\n  ..$ : int [1:3] 17 40 41\n  ..$ : int [1:3] 8 11 15\n  ..$ : int [1:3] 12 27 280\n  ..$ : int [1:3] 17 35 36\n  ..$ : int [1:3] 13 34 35\n  ..$ : int [1:3] 11 14 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:3] 24 26 30\n  ..$ : int [1:3] 24 25 33\n  ..$ : int [1:3] 20 29 37\n  ..$ : int [1:3] 25 30 31\n  ..$ : int [1:3] 16 27 34\n  ..$ : int [1:3] 24 25 28\n  ..$ : int [1:3] 8 28 30\n  ..$ : int [1:3] 23 38 280\n  ..$ : int [1:3] 24 26 38\n  ..$ : int [1:3] 22 29 35\n  ..$ : int [1:3] 22 34 42\n  ..$ : int [1:3] 21 35 68\n  ..$ : int [1:3] 2 27 29\n  ..$ : int [1:3] 3 26 33\n  ..$ : int [1:3] 41 46 76\n  ..$ : int [1:3] 36 41 68\n  ..$ : int [1:3] 18 39 40\n  ..$ : int [1:3] 34 35 80\n  ..$ : int [1:3] 46 48 85\n  ..$ : int [1:3] 61 82 110\n  ..$ : int [1:3] 62 81 83\n  ..$ : int [1:3] 43 48 278\n  ..$ : int [1:3] 4 58 266\n  ..$ : int [1:3] 43 85 278\n  ..$ : int [1:3] 54 76 119\n  ..$ : int [1:3] 80 85 131\n  ..$ : int [1:3] 54 118 120\n  ..$ : int [1:3] 61 78 111\n  ..$ : int [1:3] 75 93 134\n  ..$ : int [1:3] 51 76 120\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:3] 112 138 139\n  ..$ : int [1:3] 60 86 117\n  ..$ : int [1:3] 122 123 266\n  ..$ : int [1:3] 75 87 137\n  ..$ : int [1:3] 57 74 86\n  ..$ : int [1:3] 44 52 82\n  ..$ : int [1:3] 45 83 110\n  ..$ : int [1:3] 55 114 130\n  ..$ : int [1:3] 67 72 84\n  ..$ : int [1:3] 3 67 73\n  ..$ : int [1:3] 1 71 78\n  ..$ : int [1:3] 33 65 73\n  ..$ : int [1:3] 40 43 85\n  ..$ : int [1:3] 1 74 78\n  ..$ : int [1:3] 39 51 76\n  ..$ : int [1:3] 3 66 82\n  ..$ : int [1:3] 73 81 83\n  ..$ : int [1:3] 72 79 82\n  ..$ : int [1:3] 60 69 77\n  ..$ : int [1:3] 59 87 281\n  ..$ : int [1:3] 39 49 54\n  ..$ : int [1:3] 74 80 86\n  ..$ : int [1:3] 52 66 69\n  ..$ : int [1:3] 44 73 82\n  ..$ : int [1:3] 42 77 86\n  ..$ : int [1:3] 72 83 266\n  ..$ : int [1:3] 44 73 79\n  ..$ : int [1:3] 45 62 81\n  ..$ : int [1:3] 72 81 266\n  ..$ : int [1:3] 43 48 68\n  ..$ : int [1:3] 60 74 77\n  ..$ : int [1:3] 59 75 281\n  ..$ : int [1:3] 109 129 130\n  ..$ : int [1:3] 96 103 140\n  ..$ : int [1:3] 100 141 181\n  ..$ : int [1:3] 108 133 179\n  ..$ : int [1:3] 125 136 177\n  ..$ : int [1:3] 134 188 192\n  ..$ : int [1:3] 126 142 176\n  ..$ : int [1:3] 135 141 193\n  ..$ : int [1:3] 89 102 178\n  ..$ : int [1:3] 104 106 107\n  ..$ : int [1:3] 143 149 192\n  ..$ : int [1:3] 107 182 187\n  .. [list output truncated]\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language knearneigh(x = centroids, k = 3)\n  ..- attr(*, \"sym\")= logi FALSE\n  ..- attr(*, \"type\")= chr \"knn\"\n  ..- attr(*, \"knn-k\")= num 3\n  ..- attr(*, \"class\")= chr \"nb\"\n\n\n\n\nCode\nglimpse(mpsz_flow)\n\n\nRows: 97,969\nColumns: 4\n$ ORIGIN_SZ &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ17\", …\n$ DESTIN_SZ &lt;chr&gt; \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", …\n$ DISTANCE  &lt;dbl&gt; 0.0000, 305.7370, 951.8314, 5254.0664, 4975.0021, 3176.1592,…\n$ TRIPS     &lt;dbl&gt; 67, 549, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, …\n\n\n\n\nCode\nglimpse(mpsz_var)\n\n\nRows: 313\nColumns: 14\n$ SZ_NAME        &lt;chr&gt; \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"FORT CANNING\", \"…\n$ SZ_CODE        &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ…\n$ BUSSTOP_COUNT  &lt;int&gt; 2, 10, 6, 2, 1, 10, 5, 4, 21, 11, 2, 9, 6, 1, 4, 7, 24,…\n$ AGE7_12        &lt;dbl&gt; 330, 320, 0, 0, 200, 0, 0, 0, 350, 470, 0, 300, 390, 0,…\n$ AGE13_24       &lt;dbl&gt; 360, 350, 10, 0, 260, 0, 0, 0, 460, 1160, 0, 760, 890, …\n$ AGE25_64       &lt;dbl&gt; 2260, 2200, 30, 0, 1440, 0, 0, 0, 2600, 6260, 630, 4350…\n$ geometry       &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((28481.45 30..., MULTIPOLYG…\n$ SCHOOL_COUNT   &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 0…\n$ BUSINESS_COUNT &lt;int&gt; 6, 4, 7, 0, 1, 11, 15, 1, 10, 1, 17, 6, 0, 0, 51, 2, 3,…\n$ RETAILS_COUNT  &lt;int&gt; 26, 207, 17, 0, 84, 14, 52, 0, 460, 34, 263, 55, 37, 1,…\n$ FINSERV_COUNT  &lt;int&gt; 3, 18, 0, 0, 29, 4, 6, 0, 34, 4, 26, 4, 3, 6, 59, 3, 8,…\n$ ENTERTN_COUNT  &lt;int&gt; 0, 6, 3, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0…\n$ FB_COUNT       &lt;int&gt; 4, 38, 4, 0, 38, 15, 5, 0, 20, 0, 9, 25, 0, 0, 9, 1, 3,…\n$ LR_COUNT       &lt;int&gt; 3, 11, 7, 0, 20, 0, 0, 0, 19, 2, 4, 4, 1, 1, 13, 0, 17,…"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex5/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/FinServ.html",
    "href": "In-class_Ex5/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/entertn.html",
    "href": "In-class_Ex5/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "",
    "text": "In this hands-on exercise, the class learnt how to import and wrangle Geospatial data using the appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#overview",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#overview",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "",
    "text": "In this hands-on exercise, the class learnt how to import and wrangle Geospatial data using the appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#learning-outcomes",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#learning-outcomes",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "Learning Outcomes:",
    "text": "Learning Outcomes:\n\nInstall and load the sf and tidyverse packages in R.\nImport geospatial and non-geospatial data using appropriate functions.\nExplore and manipulate data frames using Base R and sf functions.\nAssign or transform coordinate systems using sf functions.\nConvert data into an sf data frame using the sf package.\nPerform geospatial operations using sf functions.\nConduct data wrangling tasks using the dplyr package.\nPerform Exploratory Data Analysis (EDA) using ggplot2 functions.”"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#getting-started",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#getting-started",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "Getting started",
    "text": "Getting started\nThe code chunk below install and load sf and tidyverse packages into R environment\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#importing-geospatial-data",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#importing-geospatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "Importing Geospatial Data:",
    "text": "Importing Geospatial Data:\n\nThe data used for the exercise are as follow:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\n\n\nImporting feature data\nA utility known as st_read is used in the data import procedure. This function reads many map formats and extensions, including.shp,.dbf,.prj, and.shx. The following parameters are used by the function:\n\nThe dsn Parameter, specifies the location of which where we map our files.\nThe layer parameter in this section emphasizes specific map feature\nLastly, we note that extensions such as .shp, .dbf, .prj and .shx are not necessary.\n\n\nImporting polygon feature dataImporting Polylines feature dataImporting GIS feature data\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\",layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Zackkoh94\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nShapefiles are a common format for storing geospatial vector data, representing various geographic features like points, lines, and polygons. The “MP14_SUBZONE_WEB_PL” refers to a specific layer within a shapefile which contains polygon features. These polygons may represent subzones within a geographic region, such as those outlined in the Master Plan 2014 Subzone Boundary (Web) data.\nThe dataset serves as a forward-looking plan for Singapore’s development over the next 10 to 15 years, known as the Development Master Plan 2014. Subzones typically revolve around key focal points, like neighborhood centers or activity nodes, and a Planning Area can consist of more than 10 subzones. The data is sourced from the Singapore Government.\n\n\n\n\ncyclingpath &lt;- st_read(dsn = \"/Zackkoh94/ISSS624/Hands-on_Ex1/data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Zackkoh94\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\nThis code imports data representing polylines from a shapefile. Polylines are used to depict linear features like roads, rivers, or cycling paths, consisting of connected straight lines. In this instance, the data represents a cycling path within Singapore, excluding park connectors. The source of this data is the Land Transport Authority.\n\n\n\n\npreschool &lt;- st_read(dsn = \"/Zackkoh94/ISSS624/Hands-on_Ex1/data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Zackkoh94\\ISSS624\\Hands-on_Ex1\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nThis code imports geospatial data in KML format, which is commonly used for annotating and visualizing geographic information on maps and Earth browsers. Specifically, it imports data about the locations of pre-schools in Singapore from a KML file. The source of this data is the Singapore Government."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "Checking the Content of A Simple Feature Data Frame",
    "text": "Checking the Content of A Simple Feature Data Frame\nThe following codes are for retrieve information related to the content of a simple feature data frame:\n\nWorking with st_geometry()\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303..."
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Business.html",
    "href": "In-class_Ex5/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/F&B.html",
    "href": "In-class_Ex5/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Liesure&Recreation.html",
    "href": "In-class_Ex5/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Retails.html",
    "href": "In-class_Ex5/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Geospatial Analytics (ISSS624)",
    "section": "",
    "text": "Salutations,\nWelcome to ISSS624: Geospatial Analytics Applications. I am delighted to provide an insightful overview of my five-week educational journey in the realm of Geospatial Analytics, masterfully instructed by Professor Kam Tin Seong at Singapore Management University. For those seeking additional information regarding ISSS624, please peruse the dedicated journal section on this website.\nSincerely,\nZack"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#preparing-the-spatial-weight",
    "href": "In-class_Ex5/In-class_Ex5.html#preparing-the-spatial-weight",
    "title": "In-class_Ex5",
    "section": "",
    "text": "Code\nschools &lt;- read_rds(\"./data/rds/schools.rds\")\n\n\n\n\nCode\nmpsz_nb &lt;- read_rds(\"./data/rds/mpsz_nb.rds\")\nmpsz_flow &lt;- read_rds(\"./data/rds/mpsz_flow.rds\")\nmpsz_var &lt;- read_rds(\"./data/rds/mpsz_var.rds\")\n\n\n\n\nCode\nglimpse(mpsz_nb)\n\n\nList of 3\n $ by_contiguity:List of 313\n  ..$ : int [1:4] 2 3 66 69\n  ..$ : int [1:7] 1 3 32 37 38 69 80\n  ..$ : int [1:7] 1 2 38 65 66 67 71\n  ..$ : int [1:4] 47 75 87 281\n  ..$ : int [1:2] 6 9\n  ..$ : int [1:8] 5 7 8 9 10 12 16 19\n  ..$ : int [1:5] 6 11 12 19 23\n  ..$ : int [1:4] 6 19 28 31\n  ..$ : int [1:7] 5 6 10 13 17 18 70\n  ..$ : int [1:5] 6 9 12 13 16\n  ..$ : int [1:5] 7 14 15 19 23\n  ..$ : int [1:6] 6 7 10 16 20 23\n  ..$ : int [1:6] 9 10 16 17 21 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:5] 11 14 19 23 25\n  ..$ : int [1:9] 6 10 12 13 20 22 27 29 34\n  ..$ : int [1:5] 9 13 18 21 41\n  ..$ : int [1:5] 9 17 39 41 70\n  ..$ : int [1:9] 6 7 8 11 15 25 28 30 31\n  ..$ : int [1:6] 12 16 23 27 32 280\n  ..$ : int [1:6] 13 17 22 36 40 41\n  ..$ : int [1:7] 13 16 21 29 34 35 36\n  ..$ : int [1:10] 7 11 12 14 15 20 25 26 32 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:8] 15 19 23 24 26 30 33 67\n  ..$ : int [1:6] 23 24 25 32 33 38\n  ..$ : int [1:5] 16 20 29 32 37\n  ..$ : int [1:5] 8 19 30 31 64\n  ..$ : int [1:5] 16 22 27 34 37\n  ..$ : int [1:5] 19 25 28 64 67\n  ..$ : int [1:4] 8 19 28 64\n  ..$ : int [1:9] 2 20 23 26 27 33 37 38 280\n  ..$ : int [1:6] 24 25 26 32 38 67\n  ..$ : int [1:6] 16 22 29 35 37 42\n  ..$ : int [1:5] 22 34 36 42 85\n  ..$ : int [1:8] 21 22 35 40 41 42 68 85\n  ..$ : int [1:7] 2 27 29 32 34 42 80\n  ..$ : int [1:6] 2 3 26 32 33 67\n  ..$ : int [1:6] 18 41 51 54 70 76\n  ..$ : int [1:6] 21 36 41 43 46 68\n  ..$ : int [1:8] 17 18 21 36 39 40 46 76\n  ..$ : int [1:6] 34 35 36 37 80 85\n  ..$ : int [1:6] 40 46 48 68 85 278\n  ..$ : int [1:4] 61 82 110 121\n  ..$ : int [1:5] 62 73 79 83 116\n  ..$ : int [1:8] 40 41 43 49 68 76 115 278\n  ..$ : int [1:5] 4 58 84 281 282\n  ..$ : int [1:5] 43 68 85 136 278\n  ..$ : int [1:5] 46 54 76 115 119\n  ..$ : int [1:7] 80 85 86 125 126 131 136\n  ..$ : int [1:6] 39 54 70 118 120 127\n  ..$ : int [1:5] 61 78 111 121 132\n  ..$ : int [1:4] 75 87 128 134\n  ..$ : int [1:7] 39 49 51 76 119 120 135\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:4] 112 118 138 139\n  ..$ : int [1:3] 60 117 126\n  ..$ : int [1:7] 47 84 116 122 123 266 282\n  ..$ : int [1:4] 87 134 137 281\n  ..$ : int [1:8] 57 69 74 77 78 86 117 126\n  ..$ : int [1:5] 44 52 71 78 121\n  ..$ : int [1:6] 45 73 79 82 110 116\n  ..$ : int [1:4] 55 114 129 130\n  ..$ : int [1:5] 28 30 31 67 84\n  ..$ : int [1:5] 3 67 71 73 79\n  ..$ : int [1:5] 1 3 69 71 78\n  ..$ : int [1:11] 3 25 30 33 38 64 65 72 73 81 ...\n  ..$ : int [1:6] 36 40 43 46 48 85\n  ..$ : int [1:8] 1 2 60 66 74 77 78 80\n  ..$ : int [1:5] 9 18 39 51 118\n  ..$ : int [1:7] 3 61 65 66 78 79 82\n  ..$ : int [1:5] 67 73 81 83 84\n  ..$ : int [1:7] 45 62 65 67 72 79 83\n  ..$ : int [1:5] 60 69 77 78 80\n  ..$ : int [1:4] 4 53 87 281\n  ..$ : int [1:5] 39 41 46 49 54\n  ..$ : int [1:5] 60 69 74 80 86\n  ..$ : int [1:7] 52 60 61 66 69 71 74\n  ..$ : int [1:7] 45 62 65 71 73 82 110\n  ..$ : int [1:9] 2 37 42 50 69 74 77 85 86\n  ..$ : int [1:5] 67 72 83 84 266\n  ..$ : int [1:5] 44 62 71 79 110\n  ..$ : int [1:6] 45 72 73 81 116 266\n  ..$ : int [1:7] 47 58 64 67 72 81 266\n  ..$ : int [1:9] 35 36 42 43 48 50 68 80 136\n  ..$ : int [1:5] 50 60 77 80 126\n  ..$ : int [1:6] 4 53 59 75 134 281\n  ..$ : int [1:9] 91 105 108 109 129 130 133 203 287\n  ..$ : int [1:6] 96 103 122 140 178 282\n  ..$ : int [1:7] 100 127 138 141 175 181 271\n  ..$ : int [1:7] 88 108 129 133 139 179 185\n  ..$ : int [1:6] 101 125 131 136 177 194\n  ..$ : int [1:6] 98 102 134 137 188 192\n  ..$ : int [1:5] 126 131 142 176 177\n  ..$ : int [1:7] 101 119 124 135 175 190 193\n  ..$ : int [1:7] 89 102 103 137 178 202 282\n  ..$ : int [1:6] 99 104 106 107 144 145\n  ..$ : int [1:7] 93 134 143 149 188 192 196\n  ..$ : int [1:7] 97 107 142 145 176 182 187\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language poly2nb(pl = mpsz_busstop)\n  ..- attr(*, \"type\")= chr \"queen\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_distance  :List of 313\n  ..$ : int [1:91] 2 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:91] 1 2 4 6 7 8 9 10 11 12 ...\n  ..$ : int [1:56] 3 6 7 8 11 14 15 19 23 24 ...\n  ..$ : int [1:34] 1 2 6 7 8 9 10 11 12 13 ...\n  ..$ : int [1:62] 1 2 3 4 5 7 8 9 10 11 ...\n  ..$ : int [1:74] 1 2 3 4 5 6 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 4 5 6 7 10 11 12 ...\n  ..$ : int [1:53] 1 2 3 5 6 7 10 11 12 13 ...\n  ..$ : int [1:74] 1 2 3 5 6 7 8 9 11 12 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:44] 2 9 10 12 13 16 17 20 21 22 ...\n  ..$ : int [1:73] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:80] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:72] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:82] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:79] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:82] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:78] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:67] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:87] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:75] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:89] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:41] 9 10 13 17 18 21 22 29 34 35 ...\n  ..$ : int [1:59] 1 2 9 10 12 13 16 17 18 20 ...\n  ..$ : int [1:49] 2 9 10 13 16 17 18 20 21 22 ...\n  ..$ : int [1:89] 1 2 3 6 7 9 10 11 12 13 ...\n  ..$ : int [1:63] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:97] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:54] 9 10 13 16 17 18 21 22 29 34 ...\n  ..$ : int [1:71] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:65] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:43] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:87] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:38] 18 39 40 41 43 46 48 49 54 56 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 10 11 12 13 ...\n  ..$ : int [1:16] 59 75 87 93 98 102 128 134 137 143 ...\n  ..$ : int [1:41] 18 36 39 40 41 43 46 48 49 50 ...\n  ..$ : int [1:12] 63 88 105 109 113 114 129 130 146 203 ...\n  ..$ : int [1:30] 49 51 54 70 76 90 91 95 100 112 ...\n  ..$ : int [1:96] 1 2 3 7 10 11 12 13 14 15 ...\n  ..$ : int [1:84] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:35] 4 31 47 53 58 64 75 81 83 84 ...\n  ..$ : int [1:101] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:13] 55 88 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:66] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:24] 17 18 39 40 41 43 46 48 49 51 ...\n  ..$ : int [1:96] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:89] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:100] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:21] 4 47 53 58 59 87 89 93 96 98 ...\n  ..$ : int [1:39] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:88] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:74] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:93] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:27] 4 47 53 58 59 75 84 89 93 96 ...\n  ..$ : int [1:21] 55 63 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:68] 3 4 44 45 47 52 58 59 61 62 ...\n  ..$ : int [1:45] 49 51 54 56 76 91 95 100 101 112 ...\n  ..$ : int [1:32] 56 63 88 90 100 108 109 112 113 114 ...\n  ..$ : int [1:51] 35 36 39 40 41 42 43 46 48 49 ...\n  ..$ : int [1:27] 53 59 75 87 89 96 98 102 103 128 ...\n  ..$ : int [1:71] 1 2 3 22 27 29 34 35 36 37 ...\n  ..$ : int [1:47] 39 43 46 48 49 51 54 56 76 85 ...\n  ..$ : int [1:59] 4 44 45 47 58 59 62 64 72 73 ...\n  ..$ : int [1:82] 1 3 33 38 44 45 47 52 57 58 ...\n  ..$ : int [1:23] 53 59 75 87 93 102 128 134 137 143 ...\n  ..$ : int [1:79] 1 2 3 38 44 45 50 52 57 58 ...\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language dnearneigh(x = centroids, d1 = 0, d2 = 5000)\n  ..- attr(*, \"dnn\")= num [1:2] 0 5000\n  ..- attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n  ..- attr(*, \"nbtype\")= chr \"distance\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_knn       :List of 313\n  ..$ : int [1:3] 2 66 69\n  ..$ : int [1:3] 1 37 69\n  ..$ : int [1:3] 38 65 71\n  ..$ : int [1:3] 31 47 281\n  ..$ : int [1:3] 6 7 12\n  ..$ : int [1:3] 7 8 19\n  ..$ : int [1:3] 11 14 23\n  ..$ : int [1:3] 19 28 31\n  ..$ : int [1:3] 10 13 17\n  ..$ : int [1:3] 13 16 22\n  ..$ : int [1:3] 7 14 15\n  ..$ : int [1:3] 7 20 23\n  ..$ : int [1:3] 10 16 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:3] 11 14 25\n  ..$ : int [1:3] 10 13 29\n  ..$ : int [1:3] 9 21 36\n  ..$ : int [1:3] 17 40 41\n  ..$ : int [1:3] 8 11 15\n  ..$ : int [1:3] 12 27 280\n  ..$ : int [1:3] 17 35 36\n  ..$ : int [1:3] 13 34 35\n  ..$ : int [1:3] 11 14 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:3] 24 26 30\n  ..$ : int [1:3] 24 25 33\n  ..$ : int [1:3] 20 29 37\n  ..$ : int [1:3] 25 30 31\n  ..$ : int [1:3] 16 27 34\n  ..$ : int [1:3] 24 25 28\n  ..$ : int [1:3] 8 28 30\n  ..$ : int [1:3] 23 38 280\n  ..$ : int [1:3] 24 26 38\n  ..$ : int [1:3] 22 29 35\n  ..$ : int [1:3] 22 34 42\n  ..$ : int [1:3] 21 35 68\n  ..$ : int [1:3] 2 27 29\n  ..$ : int [1:3] 3 26 33\n  ..$ : int [1:3] 41 46 76\n  ..$ : int [1:3] 36 41 68\n  ..$ : int [1:3] 18 39 40\n  ..$ : int [1:3] 34 35 80\n  ..$ : int [1:3] 46 48 85\n  ..$ : int [1:3] 61 82 110\n  ..$ : int [1:3] 62 81 83\n  ..$ : int [1:3] 43 48 278\n  ..$ : int [1:3] 4 58 266\n  ..$ : int [1:3] 43 85 278\n  ..$ : int [1:3] 54 76 119\n  ..$ : int [1:3] 80 85 131\n  ..$ : int [1:3] 54 118 120\n  ..$ : int [1:3] 61 78 111\n  ..$ : int [1:3] 75 93 134\n  ..$ : int [1:3] 51 76 120\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:3] 112 138 139\n  ..$ : int [1:3] 60 86 117\n  ..$ : int [1:3] 122 123 266\n  ..$ : int [1:3] 75 87 137\n  ..$ : int [1:3] 57 74 86\n  ..$ : int [1:3] 44 52 82\n  ..$ : int [1:3] 45 83 110\n  ..$ : int [1:3] 55 114 130\n  ..$ : int [1:3] 67 72 84\n  ..$ : int [1:3] 3 67 73\n  ..$ : int [1:3] 1 71 78\n  ..$ : int [1:3] 33 65 73\n  ..$ : int [1:3] 40 43 85\n  ..$ : int [1:3] 1 74 78\n  ..$ : int [1:3] 39 51 76\n  ..$ : int [1:3] 3 66 82\n  ..$ : int [1:3] 73 81 83\n  ..$ : int [1:3] 72 79 82\n  ..$ : int [1:3] 60 69 77\n  ..$ : int [1:3] 59 87 281\n  ..$ : int [1:3] 39 49 54\n  ..$ : int [1:3] 74 80 86\n  ..$ : int [1:3] 52 66 69\n  ..$ : int [1:3] 44 73 82\n  ..$ : int [1:3] 42 77 86\n  ..$ : int [1:3] 72 83 266\n  ..$ : int [1:3] 44 73 79\n  ..$ : int [1:3] 45 62 81\n  ..$ : int [1:3] 72 81 266\n  ..$ : int [1:3] 43 48 68\n  ..$ : int [1:3] 60 74 77\n  ..$ : int [1:3] 59 75 281\n  ..$ : int [1:3] 109 129 130\n  ..$ : int [1:3] 96 103 140\n  ..$ : int [1:3] 100 141 181\n  ..$ : int [1:3] 108 133 179\n  ..$ : int [1:3] 125 136 177\n  ..$ : int [1:3] 134 188 192\n  ..$ : int [1:3] 126 142 176\n  ..$ : int [1:3] 135 141 193\n  ..$ : int [1:3] 89 102 178\n  ..$ : int [1:3] 104 106 107\n  ..$ : int [1:3] 143 149 192\n  ..$ : int [1:3] 107 182 187\n  .. [list output truncated]\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language knearneigh(x = centroids, k = 3)\n  ..- attr(*, \"sym\")= logi FALSE\n  ..- attr(*, \"type\")= chr \"knn\"\n  ..- attr(*, \"knn-k\")= num 3\n  ..- attr(*, \"class\")= chr \"nb\"\n\n\n\n\nCode\nglimpse(mpsz_flow)\n\n\nRows: 97,969\nColumns: 4\n$ ORIGIN_SZ &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ17\", …\n$ DESTIN_SZ &lt;chr&gt; \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", …\n$ DISTANCE  &lt;dbl&gt; 0.0000, 305.7370, 951.8314, 5254.0664, 4975.0021, 3176.1592,…\n$ TRIPS     &lt;dbl&gt; 67, 549, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, …\n\n\n\n\nCode\nglimpse(mpsz_var)\n\n\nRows: 313\nColumns: 14\n$ SZ_NAME        &lt;chr&gt; \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"FORT CANNING\", \"…\n$ SZ_CODE        &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ…\n$ BUSSTOP_COUNT  &lt;int&gt; 2, 10, 6, 2, 1, 10, 5, 4, 21, 11, 2, 9, 6, 1, 4, 7, 24,…\n$ AGE7_12        &lt;dbl&gt; 330, 320, 0, 0, 200, 0, 0, 0, 350, 470, 0, 300, 390, 0,…\n$ AGE13_24       &lt;dbl&gt; 360, 350, 10, 0, 260, 0, 0, 0, 460, 1160, 0, 760, 890, …\n$ AGE25_64       &lt;dbl&gt; 2260, 2200, 30, 0, 1440, 0, 0, 0, 2600, 6260, 630, 4350…\n$ geometry       &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((28481.45 30..., MULTIPOLYG…\n$ SCHOOL_COUNT   &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 0…\n$ BUSINESS_COUNT &lt;int&gt; 6, 4, 7, 0, 1, 11, 15, 1, 10, 1, 17, 6, 0, 0, 51, 2, 3,…\n$ RETAILS_COUNT  &lt;int&gt; 26, 207, 17, 0, 84, 14, 52, 0, 460, 34, 263, 55, 37, 1,…\n$ FINSERV_COUNT  &lt;int&gt; 3, 18, 0, 0, 29, 4, 6, 0, 34, 4, 26, 4, 3, 6, 59, 3, 8,…\n$ ENTERTN_COUNT  &lt;int&gt; 0, 6, 3, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0…\n$ FB_COUNT       &lt;int&gt; 4, 38, 4, 0, 38, 15, 5, 0, 20, 0, 9, 25, 0, 0, 9, 1, 3,…\n$ LR_COUNT       &lt;int&gt; 3, 11, 7, 0, 20, 0, 0, 0, 19, 2, 4, 4, 1, 1, 13, 0, 17,…"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#the-base-model",
    "href": "In-class_Ex5/In-class_Ex5.html#the-base-model",
    "title": "In-class_Ex5",
    "section": "3.1 The Base Model",
    "text": "3.1 The Base Model\n\n\nCode\nbase_model &lt;- spflow(\n  spflow_formula = log(1 + TRIPS) ~\n    O_(BUSSTOP_COUNT +\n         AGE25_64) +\n    D_(SCHOOL_COUNT +\n         BUSINESS_COUNT +\n         RETAILS_COUNT +\n         FINSERV_COUNT) +\n         P_(log(DISTANCE + 1)),\n       spflow_networks = mpsz_multi_net)\n  \nbase_model\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: MLE  \nSpatial correlation structure: SDM (model_9)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd   t.stat  p.val\nrho_d                   0.680  0.004  192.554  0.000\nrho_o                   0.678  0.004  187.732  0.000\nrho_w                  -0.396  0.006  -65.591  0.000\n(Intercept)             0.410  0.065    6.266  0.000\n(Intra)                 1.313  0.081   16.263  0.000\nD_SCHOOL_COUNT          0.017  0.002    7.885  0.000\nD_SCHOOL_COUNT.lag1     0.002  0.004    0.551  0.581\nD_BUSINESS_COUNT        0.000  0.000    3.015  0.003\nD_BUSINESS_COUNT.lag1   0.000  0.000   -0.249  0.804\nD_RETAILS_COUNT         0.000  0.000   -0.306  0.759\nD_RETAILS_COUNT.lag1    0.000  0.000    0.152  0.880\nD_FINSERV_COUNT         0.002  0.000    6.787  0.000\nD_FINSERV_COUNT.lag1   -0.002  0.001   -3.767  0.000\nO_BUSSTOP_COUNT         0.002  0.000    6.806  0.000\nO_BUSSTOP_COUNT.lag1   -0.001  0.000   -2.364  0.018\nO_AGE25_64              0.000  0.000    7.336  0.000\nO_AGE25_64.lag1         0.000  0.000   -2.797  0.005\nP_log(DISTANCE + 1)    -0.050  0.007   -6.793  0.000\n\n--------------------------------------------------\nR2_corr: 0.6942945  \nObservations: 97969  \nModel coherence: Validated\n\n\n\nnote that many of the lag1 are statistically significant. this signifies that neighboring area can actually affect the number of trips as well.\n\n\n\nCode\nold_par &lt;- par(mfrow = c(1, 3),\n               mar = c(2,2,2,2))\nspflow_moran_plots(base_model)\n\n\n\n\n\nCode\npar(old_par)\n\n\n\n\nCode\ncorr_residual &lt;- pair_cor(base_model)\ncolnames(corr_residual) &lt;- substr(colnames(corr_residual), 1,3)\ncor_image(corr_residual)"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#working-with-model-control",
    "href": "In-class_Ex5/In-class_Ex5.html#working-with-model-control",
    "title": "In-class_Ex5",
    "section": "3.2 Working with model control",
    "text": "3.2 Working with model control\noriginal code for model_8\n\n\nCode\nspflow_formula &lt;- log(1 + TRIPS) ~\n  O_(BUSSTOP_COUNT +\n         AGE25_64) +\n  D_(SCHOOL_COUNT +\n       BUSINESS_COUNT +\n       RETAILS_COUNT +\n       FINSERV_COUNT) +\n  P_(log(DISTANCE + 1))\n\nmodel_control &lt;- spflow_control(\n  estimation_method = \"mle\",\n  model = \"model_8\")\n  \nmle_model8 &lt;- spflow(\n  spflow_formula,\n  spflow_networks = mpsz_multi_net,\n  estimation_control = model_control)\n\nmle_model8\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: MLE  \nSpatial correlation structure: SDM (model_8)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd    t.stat  p.val\nrho_d                   0.689  0.003   196.832  0.000\nrho_o                   0.687  0.004   192.214  0.000\nrho_w                  -0.473  0.003  -142.469  0.000\n(Intercept)             1.086  0.049    22.275  0.000\n(Intra)                 0.840  0.075    11.255  0.000\nD_SCHOOL_COUNT          0.019  0.002     8.896  0.000\nD_SCHOOL_COUNT.lag1     0.019  0.004     5.130  0.000\nD_BUSINESS_COUNT        0.000  0.000     3.328  0.001\nD_BUSINESS_COUNT.lag1   0.000  0.000     1.664  0.096\nD_RETAILS_COUNT         0.000  0.000    -0.414  0.679\nD_RETAILS_COUNT.lag1    0.000  0.000    -0.171  0.864\nD_FINSERV_COUNT         0.002  0.000     6.150  0.000\nD_FINSERV_COUNT.lag1   -0.003  0.001    -4.601  0.000\nO_BUSSTOP_COUNT         0.003  0.000     7.676  0.000\nO_BUSSTOP_COUNT.lag1    0.000  0.000     0.552  0.581\nO_AGE25_64              0.000  0.000     6.870  0.000\nO_AGE25_64.lag1         0.000  0.000    -0.462  0.644\nP_log(DISTANCE + 1)    -0.125  0.005   -22.865  0.000\n\n--------------------------------------------------\nR2_corr: 0.6965974  \nObservations: 97969  \nModel coherence: Validated\n\n\nmodel_1\n\n\nCode\nspflow_formula &lt;- log(1 + TRIPS) ~\n  O_(BUSSTOP_COUNT +\n         AGE25_64) +\n  D_(SCHOOL_COUNT +\n       BUSINESS_COUNT +\n       RETAILS_COUNT +\n       FINSERV_COUNT) +\n  P_(log(DISTANCE + 1))\n\nmodel_control &lt;- spflow_control(\n  estimation_method = \"mle\",\n  model = \"model_1\")\n  \nmle_model1 &lt;- spflow(\n  spflow_formula,\n  spflow_networks = mpsz_multi_net,\n  estimation_control = model_control)\n\nmle_model1\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: OLS  \nSpatial correlation structure: SLX (model_1)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd    t.stat  p.val\n(Intercept)            11.384  0.069   164.255  0.000\n(Intra)                -6.006  0.112   -53.393  0.000\nD_SCHOOL_COUNT          0.093  0.003    28.599  0.000\nD_SCHOOL_COUNT.lag1     0.255  0.006    44.905  0.000\nD_BUSINESS_COUNT        0.001  0.000    10.036  0.000\nD_BUSINESS_COUNT.lag1   0.003  0.000    18.274  0.000\nD_RETAILS_COUNT         0.000  0.000    -1.940  0.052\nD_RETAILS_COUNT.lag1    0.000  0.000    -2.581  0.010\nD_FINSERV_COUNT         0.005  0.000    10.979  0.000\nD_FINSERV_COUNT.lag1   -0.016  0.001   -17.134  0.000\nO_BUSSTOP_COUNT         0.014  0.001    25.865  0.000\nO_BUSSTOP_COUNT.lag1    0.015  0.001    21.728  0.000\nO_AGE25_64              0.000  0.000    14.479  0.000\nO_AGE25_64.lag1         0.000  0.000    14.452  0.000\nP_log(DISTANCE + 1)    -1.281  0.008  -165.327  0.000\n\n--------------------------------------------------\nR2_corr: 0.2831458  \nObservations: 97969  \nModel coherence: Validated"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html",
    "href": "Take-home_Ex2/Take-home_Ex2.html",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "Transport operators and urban managers face challenges in addressing urban mobility questions. Traditionally, commuter surveys have been employed, but they are expensive, time-consuming, and labor-intensive. Often, by the time these surveys are processed, the data is outdated.\nWith the digitization of urban infrastructure, including public buses, mass transit, and other utilities, a wealth of real-time data is now available. Technologies like GPS in vehicles and smart cards for commuters contribute to this data pool, allowing for the tracking of movement patterns in space and time.\nHowever, the rapid accumulation of geospatial data has exceeded planners’ capacity to effectively process and convert it into actionable insights, negatively affecting the return on investment in data collection and management."
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/MPSZ-2019.html",
    "href": "Take-home_Ex2/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/FinServ.html",
    "href": "Take-home_Ex2/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/entertn.html",
    "href": "Take-home_Ex2/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Business.html",
    "href": "Take-home_Ex2/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/F&B.html",
    "href": "Take-home_Ex2/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Liesure&Recreation.html",
    "href": "Take-home_Ex2/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Retails.html",
    "href": "Take-home_Ex2/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#aspatial-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#aspatial-data",
    "title": "Take-home_Ex2",
    "section": "6.1 Aspatial Data",
    "text": "6.1 Aspatial Data\nLoad the dataset ‘Passenger Volume by Origin Destination Bus Stops’ obtained from LTA Datamall into your environment using the read_csv() function from the readr package.\n\n\nCode\nbus09 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\n\n\nhead(bus09,10) %&gt;%\nkbl() %&gt;%\nkable_styling(\nfull_width = F,\nbootstrap_options = c(“condensed”, “responsive”))\n\n\nCode\nhead(bus09,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nYEAR_MONTH\nDAY_TYPE\nTIME_PER_HOUR\nPT_TYPE\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTOTAL_TRIPS\n\n\n\n\n2023-09\nWEEKENDS/HOLIDAY\n17\nBUS\n24499\n22221\n1\n\n\n2023-09\nWEEKENDS/HOLIDAY\n10\nBUS\n65239\n65159\n9\n\n\n2023-09\nWEEKDAY\n10\nBUS\n65239\n65159\n2\n\n\n2023-09\nWEEKDAY\n7\nBUS\n23519\n23311\n6\n\n\n2023-09\nWEEKENDS/HOLIDAY\n7\nBUS\n23519\n23311\n1\n\n\n2023-09\nWEEKENDS/HOLIDAY\n11\nBUS\n52509\n42041\n2\n\n\n2023-09\nWEEKDAY\n16\nBUS\n03151\n11161\n18\n\n\n2023-09\nWEEKDAY\n16\nBUS\n54349\n53241\n3\n\n\n2023-09\nWEEKENDS/HOLIDAY\n16\nBUS\n54349\n53241\n2\n\n\n2023-09\nWEEKENDS/HOLIDAY\n20\nBUS\n43371\n14139\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariables Description\n\n\n\n\n\n\nYEAR_MONTH: Data collection month in the format of YYYY-MM.\nDAY_TYPE: Weekday or Weekends/Holiday.\nTIME_PER_HOUR: Hour of the day in 24 hour format.\nPT_TYPE: Type of public transportation.\nORIGIN_PT_CODE: Identifier for the bus stop where the trip originated.\n\n\n\nDESTINATION_PT_CODE: Identifier for the bus stop where the trip ended.\nTOTAL_TRIPS: Total number of trips recorded for each origin-destination pair.\n\n\n\n\n\n\nCode\nglimpse(bus09)\n\n\nRows: 5,714,196\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-09\", \"2023-09\", \"2023-09\", \"2023-09\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 17, 10, 10, 7, 7, 11, 16, 16, 16, 20, 7, 11, 11, 1…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"24499\", \"65239\", \"65239\", \"23519\", \"23519\", \"5250…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"22221\", \"65159\", \"65159\", \"23311\", \"23311\", \"4204…\n$ TOTAL_TRIPS         &lt;dbl&gt; 1, 9, 2, 6, 1, 2, 18, 3, 2, 1, 2, 5, 3, 5, 5, 19, …\n\n\n\nData preparation\n\n\nCode\nbus09 &lt;- bus09 %&gt;%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n\nAs mentioned before, ORIGIN_PT_CODE and DESTINATION_PT_CODE’s data type are in character format. Because they represent bus stop locations, they should be transformed into factors (categorical data type) for further analysis.\n\n\nData Hygiene\n\n\nCode\ncount_duplicate_rows &lt;- function(df, df_name) {\n  df %&gt;%     \n    group_by_all() %&gt;%     \n    filter(n() &gt; 1) %&gt;%     \n    ungroup() %&gt;%     \n    summarise(df_name = df_name, row_count = n()) }  \nbus09_dupes  &lt;- count_duplicate_rows(bus09, \"bus09\")\nprint(bus09_dupes)\n\n\n# A tibble: 1 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 bus09           0\n\n\n\n\nCode\ncount_null_rows &lt;- function(df, df_name) {\n  df %&gt;%\n    filter(if_any(everything(), is.na)) %&gt;%\n    summarise(df_name = df_name, row_count = n())\n}\n\nbus09_nulls &lt;- count_null_rows(bus09, \"bus09\")\n\nprint(bus09_nulls)\n\n\n# A tibble: 1 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 bus09           0\n\n\nThere are no nulls or duplicates in the data, it shows good hygiene\n\n\nData Filtration\nFollowing the findings from Take-home_Ex1 as well, we concur that the Weekday Morning peak period (6am-9am) is the peak period that sees the most High-High following the LISA analysis, hence will be made the target for the purpose of our task. This is done in the code block below.\n\n\nCode\nget_origin_dest &lt;- function(data, daytype, timeinterval) {\n  result &lt;- data %&gt;%\n    filter(DAY_TYPE == daytype) %&gt;%\n    filter(TIME_PER_HOUR &gt;= timeinterval[1] & TIME_PER_HOUR &lt;= timeinterval[2]) %&gt;%\n    group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n    summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n    ungroup() # Ungroup for further operations if needed\n\n  return(result)\n}\n\n# Get the data for 'WEEKDAY' between 6am and 8am\nwd_morning &lt;- get_origin_dest(bus09, 'WEEKDAY', c(6, 9))\n\n\n\n\nCode\nhead(wd_morning,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTRIPS\n\n\n\n\n01012\n01112\n208\n\n\n01012\n01113\n112\n\n\n01012\n01121\n63\n\n\n01012\n01211\n118\n\n\n01012\n01311\n195\n\n\n01012\n01621\n3\n\n\n01012\n01639\n1\n\n\n01012\n07371\n10\n\n\n01012\n60011\n30\n\n\n01012\n60021\n18\n\n\n\n\n\n\n\n\n\n\nCode\nwd_morning_num_rows &lt;- nrow(wd_morning)\nprint(wd_morning_num_rows)\n\n\n[1] 238511"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#geospatial-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#geospatial-data",
    "title": "Take-home_Ex2",
    "section": "6.2 Geospatial Data",
    "text": "6.2 Geospatial Data\nLike in Take-home_Ex1, we’ll be loading the Bus Stop Location shapefiles into R, resulting in an sf point object that contains 5161 points and 3 fields. Initially in the WSG84 geographical coordinate system, this data will be transformed to the EPSG 3414 projected coordinate system, which is specific to Singapore.\n\n\n\nCode\nbusstop &lt;- st_read(dsn=\"data/geospatial\", layer = \"BusStop\") %&gt;% \n  st_transform(crs = 3414)\n\n\nReading layer `BusStop' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\n\nCode\nbusstop_num_rows &lt;- nrow(busstop)\nprint(busstop_num_rows)\n\n\n[1] 5161\n\n\n\nData Hygiene\n\n\nCode\ncount_null_rows &lt;- function(df, df_name, columns) {\n  # Temporarily drop the geometry column\n  df_no_geom &lt;- df %&gt;% \n    st_set_geometry(NULL) %&gt;%\n    select(all_of(columns))\n\n  # Counting null rows\n  null_counts &lt;- df_no_geom %&gt;%\n    filter(if_any(everything(), is.na)) %&gt;%\n    summarise(df_name = df_name, row_count = n())\n\n  return(null_counts)\n}\n\n# Apply function to 'busstop' dataframe for 'BUS_STOP_N' column\nbusstop_nulls &lt;- count_null_rows(busstop, \"busstop\", c(\"BUS_STOP_N\"))\n\nprint(busstop_nulls)\n\n\n  df_name row_count\n1 busstop         0\n\n\n\n\nCode\nbusstop %&gt;% \n  st_drop_geometry() %&gt;% \n  group_by(BUS_STOP_N) %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup() %&gt;% \n  arrange(BUS_STOP_N)\n\n\n# A tibble: 32 × 3\n   BUS_STOP_N BUS_ROOF_N LOC_DESC            \n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;               \n 1 11009      B04        Ghim Moh Ter        \n 2 11009      B04-TMNL   GHIM MOH TER        \n 3 22501      B02        Blk 662A            \n 4 22501      B02        BLK 662A            \n 5 43709      B06        BLK 644             \n 6 43709      B06        BLK 644             \n 7 47201      UNK        &lt;NA&gt;                \n 8 47201      NIL        W'LANDS NTH STN     \n 9 51071      B21        MACRITCHIE RESERVOIR\n10 51071      B21        MACRITCHIE RESERVOIR\n# ℹ 22 more rows\n\n\nThere are no nulls in the BUS_STOP_N column, indicating that the primary key of the data at the very least is sound.\n\nNext we look at duplicates, it can be seen that there are indeed duplicates in the Geospatial data set. Upon investigation we can see for each corresponding BUS_STOP_N, the LOC_DESC column is mostly duplicated, which could be a result of temporary bus stops or bus stop reconstruction which results in a shift to a location in the vicinity of the original bus stop.\nThis however is not the case for BUS_STOP_N 47201 which sees the LOC_DESC possessing a NA value, as well as 52059, 77329 which sees that the LOC_DESC indicating a different bus stop for their duplicated BUS_STOP_N.\nWe then look to Transitlink’s website to verify the information of the identified BUS_STOP_N and will process the duplicates in the code blocks below\n\n\nCode\n# Overwrite the busstop dataframe with the filtered results\nbusstop &lt;- busstop %&gt;%\n  filter(\n    !(BUS_STOP_N == '47201' & is.na(LOC_DESC)) & \n    !(BUS_STOP_N == '52059' & LOC_DESC == 'OPP BLK 65') & \n    !(BUS_STOP_N == '77329' & LOC_DESC == 'Pasir Ris Central')\n  )\n\n\n\n\nCode\nbusstop &lt;- busstop %&gt;%\n  filter(!duplicated(BUS_STOP_N))\n\n\n\n\nCode\nbusstop %&gt;% \n  st_drop_geometry() %&gt;% \n  group_by(BUS_STOP_N) %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup() %&gt;% \n  arrange(BUS_STOP_N)\n\n\n# A tibble: 0 × 3\n# ℹ 3 variables: BUS_STOP_N &lt;chr&gt;, BUS_ROOF_N &lt;chr&gt;, LOC_DESC &lt;chr&gt;\n\n\nWe have processed the anomalies and dropped the duplicated as per the code output above."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#multipolygon",
    "href": "Take-home_Ex2/Take-home_Ex2.html#multipolygon",
    "title": "Take-home_Ex2",
    "section": "6.3 Multipolygon ",
    "text": "6.3 Multipolygon \n\n\nCode\nmpsz19 &lt;- st_read(dsn='data/geospatial/',\n                layer='MPSZ-2019') %&gt;% \n  st_transform(crs=3414)\n\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\nCode\nhead(mpsz19,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nSUBZONE_N\nSUBZONE_C\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\ngeometry\n\n\n\n\nMARINA EAST\nMESZ01\nMARINA EAST\nME\nCENTRAL REGION\nCR\nMULTIPOLYGON (((33222.98 29...\n\n\nINSTITUTION HILL\nRVSZ05\nRIVER VALLEY\nRV\nCENTRAL REGION\nCR\nMULTIPOLYGON (((28481.45 30...\n\n\nROBERTSON QUAY\nSRSZ01\nSINGAPORE RIVER\nSR\nCENTRAL REGION\nCR\nMULTIPOLYGON (((28087.34 30...\n\n\nJURONG ISLAND AND BUKOM\nWISZ01\nWESTERN ISLANDS\nWI\nWEST REGION\nWR\nMULTIPOLYGON (((14557.7 304...\n\n\nFORT CANNING\nMUSZ02\nMUSEUM\nMU\nCENTRAL REGION\nCR\nMULTIPOLYGON (((29542.53 31...\n\n\nMARINA EAST (MP)\nMPSZ05\nMARINE PARADE\nMP\nCENTRAL REGION\nCR\nMULTIPOLYGON (((35279.55 30...\n\n\nSUDONG\nWISZ03\nWESTERN ISLANDS\nWI\nWEST REGION\nWR\nMULTIPOLYGON (((15772.59 21...\n\n\nSEMAKAU\nWISZ02\nWESTERN ISLANDS\nWI\nWEST REGION\nWR\nMULTIPOLYGON (((19843.41 21...\n\n\nSOUTHERN GROUP\nSISZ02\nSOUTHERN ISLANDS\nSI\nCENTRAL REGION\nCR\nMULTIPOLYGON (((30870.53 22...\n\n\nSENTOSA\nSISZ01\nSOUTHERN ISLANDS\nSI\nCENTRAL REGION\nCR\nMULTIPOLYGON (((26879.04 26..."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#hexagon-layer",
    "href": "Take-home_Ex2/Take-home_Ex2.html#hexagon-layer",
    "title": "Take-home_Ex2",
    "section": "6.4 Hexagon Layer",
    "text": "6.4 Hexagon Layer\n\n\nCode\nhx_grid = st_make_grid(busstop, cellsize = 750, what = \"polygons\", square = FALSE)\n\nhx_grid_sf = st_sf(hx_grid) %&gt;%\n  rowid_to_column(\"hex_id\")\n\nhx_grid_sf$count_busstop = lengths(st_intersects(hx_grid_sf, busstop))\n\ncount_busstop = filter(hx_grid_sf, count_busstop &gt; 0)\n\ncount_busstop\n\n\nSimple feature collection with 834 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3595.122 ymin: 26049.09 xmax: 48595.12 ymax: 53545.39\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   hex_id                        hx_grid count_busstop\n1      23 POLYGON ((3970.122 27348.13...             1\n2      44 POLYGON ((4345.122 27997.65...             1\n3      46 POLYGON ((4345.122 30595.72...             2\n4      66 POLYGON ((4720.122 28647.16...             1\n5      67 POLYGON ((4720.122 29946.2,...             4\n6      68 POLYGON ((4720.122 31245.24...             1\n7      86 POLYGON ((5095.122 27997.65...             1\n8      87 POLYGON ((5095.122 29296.68...             1\n9      88 POLYGON ((5095.122 30595.72...             4\n10     89 POLYGON ((5095.122 31894.76...             2\n\n\n\nData Hygiene\n\n\nCode\nbusstop_hx &lt;- st_intersection(busstop, count_busstop) %&gt;% \n  select(BUS_STOP_N, LOC_DESC,hex_id, count_busstop)\n\nbusstop_hx\n\n\nSimple feature collection with 5145 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     BUS_STOP_N            LOC_DESC hex_id count_busstop\n3259      25059   AFT TUAS STH BLVD     23             1\n2564      25751 BEF TUAS STH AVE 14     44             1\n254       26379            YONG NAM     46             2\n2397      26369        SEE HUP SENG     46             2\n2822      25741         HALLIBURTON     66             1\n1713      26399  AFT TUAS VIEW CRES     67             4\n2820      25719           THE INDEX     67             4\n2821      25711       OPP THE INDEX     67             4\n4188      26389  BEF TUAS STH AVE 5     67             4\n1563      26299  BEF TUAS STH AVE 6     68             1\n                      geometry\n3259 POINT (3970.122 28063.28)\n2564 POINT (4427.939 28758.67)\n254  POINT (4473.292 30681.57)\n2397 POINT (4604.363 31212.96)\n2822  POINT (5060.733 29212.4)\n1713  POINT (5079.51 30214.42)\n2820 POINT (4799.476 30158.46)\n2821 POINT (4831.438 30132.43)\n4188 POINT (4776.694 30324.88)\n1563 POINT (4879.489 31948.93)\n\n\n\n\nCode\nbusstop_hx_test &lt;- busstop_hx\nbusstop_hx &lt;- busstop_hx  %&gt;% \n  st_drop_geometry()\n\ndatatable(busstop_hx, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\nThe outcomes indicated above reveal that each bus stop is positioned within at least one of the hexagonal grids."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#pivot-to-table",
    "href": "Take-home_Ex2/Take-home_Ex2.html#pivot-to-table",
    "title": "Take-home_Ex2",
    "section": "7.2 Pivot to Table",
    "text": "7.2 Pivot to Table\n\nNext, we pviot the distance matrix (wide) to form a table (long).\nFor this task, the melt() function from the reshape2 package will be employed. To do so, the function creates a dataframe where each row corresponds to a unique combination of row and column indices from the matrix, along with their respective values.\n\n\nCode\ndist_pairs &lt;- reshape2::melt(dist) %&gt;%\n  rename(dist = value)\nhead(dist_pairs, 10)\n\n\n   Var1 Var2     dist\n1    23   23    0.000\n2    44   23  750.000\n3    46   23 3269.174\n4    66   23 1500.000\n5    67   23 2704.163\n6    68   23 3968.627\n7    86   23 1299.038\n8    87   23 2250.000\n9    88   23 3436.932\n10   89   23 4683.748\n\n\n\n\nCode\nhead(dist_pairs,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nVar1\nVar2\ndist\n\n\n\n\n23\n23\n0.000\n\n\n44\n23\n750.000\n\n\n46\n23\n3269.174\n\n\n66\n23\n1500.000\n\n\n67\n23\n2704.163\n\n\n68\n23\n3968.627\n\n\n86\n23\n1299.038\n\n\n87\n23\n2250.000\n\n\n88\n23\n3436.932\n\n\n89\n23\n4683.748\n\n\n\n\n\n\n\n\n\n\nCode\ndist_pairs_num_rows &lt;- nrow(dist_pairs)\nprint(dist_pairs_num_rows)\n\n\n[1] 695556\n\n\nFootnote: 695,556 is derived from the original 834 rows squared, which is the max number of permutations.\n\n\nCode\n# Check if there are any rows where dist equals 0 and count them\nany_zero_distances &lt;- any(dist_pairs $dist == 0)\ncount_zero_distances &lt;- sum(dist_pairs $dist == 0)\n\n# Print the results\nprint(paste(\"Any zero distances:\", any_zero_distances))\n\n\n[1] \"Any zero distances: TRUE\"\n\n\nCode\nprint(paste(\"Count of zero distances:\", count_zero_distances))\n\n\n[1] \"Count of zero distances: 834\"\n\n\nWe will filter out data where dist_pairs = 0, as those values will not reap any meaningful insights at all.\n\n\nCode\ndist_pairs %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n\n      Var1           Var2           dist      \n Min.   :  23   Min.   :  23   Min.   :  750  \n 1st Qu.: 871   1st Qu.: 871   1st Qu.: 8352  \n Median :1324   Median :1324   Median :13332  \n Mean   :1269   Mean   :1269   Mean   :14162  \n 3rd Qu.:1688   3rd Qu.:1688   3rd Qu.:18929  \n Max.   :2505   Max.   :2505   Max.   :44680  \n\n\n\n\nCode\ndist_pairs$dist &lt;- ifelse(dist_pairs$dist == 0,\n                        325, dist_pairs$dist)\n\ndist_pairs &lt;- dist_pairs %&gt;%\n  rename(O_HEX_ID = Var1,\n         D_HEX_ID = Var2)\n\nhead(dist_pairs,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nO_HEX_ID\nD_HEX_ID\ndist\n\n\n\n\n23\n23\n325.000\n\n\n44\n23\n750.000\n\n\n46\n23\n3269.174\n\n\n66\n23\n1500.000\n\n\n67\n23\n2704.163\n\n\n68\n23\n3968.627\n\n\n86\n23\n1299.038\n\n\n87\n23\n2250.000\n\n\n88\n23\n3436.932\n\n\n89\n23\n4683.748\n\n\n\n\n\n\n\n\nFootnote: We set the intra-zonal distance to be apothem of 325 apothem\n\n\nCode\nglimpse(dist_pairs)\n\n\nRows: 695,556\nColumns: 3\n$ O_HEX_ID &lt;int&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, 109, 110, 111, 11…\n$ D_HEX_ID &lt;int&gt; 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 2…\n$ dist     &lt;dbl&gt; 325.000, 750.000, 3269.174, 1500.000, 2704.163, 3968.627, 129…"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#distance-matrix",
    "href": "Take-home_Ex2/Take-home_Ex2.html#distance-matrix",
    "title": "Take-home_Ex2",
    "section": "7.1 Distance Matrix",
    "text": "7.1 Distance Matrix\nThe as.Spatial() function is first employed to transform the count_busstop dataframe, which is currently a sf (simple features) tibble, into a SpatialPolygonsDataFrame (an object type from the sp package). This package is utilized because it is more efficient in computing the distance matrix than the sf package. Subsequently, the spDists() function from the sp package will be utilized to calculate the Euclidean distances between the center points of each hexagon. Lastly, we will\n\n\nCode\ncount_busstop_sp &lt;- as(count_busstop, \"Spatial\")\n\n\n\n\nCode\ndist &lt;- sp::spDists(count_busstop_sp, \n                longlat = FALSE)\nhead(dist, n=c(4, 4))\n\n\n         [,1]     [,2]     [,3]     [,4]\n[1,]    0.000  750.000 3269.174 1500.000\n[2,]  750.000    0.000 2598.076  750.000\n[3,] 3269.174 2598.076    0.000 1984.313\n[4,] 1500.000  750.000 1984.313    0.000\n\n\n\n\nCode\n#rename to attach hex_id for future steps\nhex_id_rename &lt;- count_busstop$hex_id\n\ncolnames(dist) &lt;- paste0(hex_id_rename)\nrownames(dist) &lt;- paste0(hex_id_rename)\ndist[1:4,1:4]\n\n\n         23       44       46       66\n23    0.000  750.000 3269.174 1500.000\n44  750.000    0.000 2598.076  750.000\n46 3269.174 2598.076    0.000 1984.313\n66 1500.000  750.000 1984.313    0.000"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#flow-data-preparation",
    "href": "Take-home_Ex2/Take-home_Ex2.html#flow-data-preparation",
    "title": "Take-home_Ex2",
    "section": "7.3 Flow Data Preparation",
    "text": "7.3 Flow Data Preparation\nIn this section, we aim to create a dataframe that includes the count of TRIPS and the corresponding distances for each pair of origin and destination grid IDs.\n\n\nCode\nflow_data &lt;- odmat %&gt;%\n  group_by(O_HEX_ID, D_HEX_ID) %&gt;% \n  summarize(TRIPS = sum(WD_MORNING)) \n\nhead(flow_data,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nO_HEX_ID\nD_HEX_ID\nTRIPS\n\n\n\n\n23\n67\n3\n\n\n23\n86\n1\n\n\n23\n88\n1\n\n\n23\n128\n15\n\n\n23\n132\n1\n\n\n23\n154\n3\n\n\n23\n155\n1\n\n\n23\n175\n65\n\n\n23\n176\n1\n\n\n44\n88\n6\n\n\n\n\n\n\n\n\n\n\nCode\nflow_data$NoIntra &lt;- ifelse(\n  flow_data$O_HEX_ID == flow_data$D_HEX_ID, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$O_HEX_ID == flow_data$D_HEX_ID, \n  0.000001, 1)\ninter_flow &lt;- flow_data %&gt;% \n  filter(NoIntra &gt;0)\nglimpse(inter_flow)\n\n\nRows: 64,128\nColumns: 5\nGroups: O_HEX_ID [816]\n$ O_HEX_ID &lt;int&gt; 23, 23, 23, 23, 23, 23, 23, 23, 23, 44, 44, 44, 44, 44, 46, 4…\n$ D_HEX_ID &lt;int&gt; 67, 86, 88, 128, 132, 154, 155, 175, 176, 88, 128, 154, 155, …\n$ TRIPS    &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54, …\n$ NoIntra  &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54, …\n$ offset   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n\n\nWe will filter out data where distance= 0, as those values will not reap any meaningful insights at all.\n\nLeft Join passenger volume data (inter-zone) with distance value\n\n\nCode\ninter_flow$O_HEX_ID  &lt;- as.factor(inter_flow$O_HEX_ID)\ninter_flow$D_HEX_ID  &lt;- as.factor(inter_flow$D_HEX_ID )\ndist_pairs$O_HEX_ID  &lt;- as.factor(dist_pairs$O_HEX_ID)\ndist_pairs$D_HEX_ID  &lt;- as.factor(dist_pairs$D_HEX_ID )\nFD1 &lt;- inter_flow %&gt;%\n  left_join (dist_pairs,\n             by = c(\"O_HEX_ID\" = \"O_HEX_ID\",\n                    \"D_HEX_ID\" = \"D_HEX_ID\"))\n\nglimpse(FD1)\n\n\nRows: 64,128\nColumns: 6\nGroups: O_HEX_ID [816]\n$ O_HEX_ID &lt;fct&gt; 23, 23, 23, 23, 23, 23, 23, 23, 23, 44, 44, 44, 44, 44, 46, 4…\n$ D_HEX_ID &lt;fct&gt; 67, 86, 88, 128, 132, 154, 155, 175, 176, 88, 128, 154, 155, …\n$ TRIPS    &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54, …\n$ NoIntra  &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54, …\n$ offset   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dist     &lt;dbl&gt; 2704.163, 1299.038, 3436.932, 1984.313, 6139.015, 6873.864, 8…\n\n\n\n\nCode\nhead(FD1,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nO_HEX_ID\nD_HEX_ID\nTRIPS\nNoIntra\noffset\ndist\n\n\n\n\n23\n67\n3\n3\n1\n2704.163\n\n\n23\n86\n1\n1\n1\n1299.038\n\n\n23\n88\n1\n1\n1\n3436.932\n\n\n23\n128\n15\n15\n1\n1984.313\n\n\n23\n132\n1\n1\n1\n6139.015\n\n\n23\n154\n3\n3\n1\n6873.864\n\n\n23\n155\n1\n1\n1\n8112.490\n\n\n23\n175\n65\n65\n1\n7611.669\n\n\n23\n176\n1\n1\n1\n8842.370\n\n\n44\n88\n6\n6\n1\n2704.163"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-o-d-flows",
    "href": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-o-d-flows",
    "title": "Take-home_Ex2",
    "section": "7.4 Visualising the O-D flows",
    "text": "7.4 Visualising the O-D flows\nEliminating intra-zonal flows as mentioned before as it bears no meaningful insights\n\n\nCode\nodm1 &lt;- odmat[odmat$O_HEX_ID!=odmat$D_HEX_ID    ,]\n\n\n\n\nCode\nflowLine &lt;- od2line(flow=FD1,\n                    zones= count_busstop,\n                    zone_code= 'hex_id')\n\n\n\n\nCode\nodm1$O_HEX_ID &lt;- as.factor(odm1$O_HEX_ID)\nodm1$D_HEX_ID &lt;- as.factor(odm1$D_HEX_ID)\n\nflowLine &lt;- left_join(flowLine, odm1,\n                      by = c('O_HEX_ID' = 'O_HEX_ID',\n                             'D_HEX_ID' = 'D_HEX_ID'))\n\n\n\n\nCode\nsummary(flowLine$TRIPS)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    1.0     7.0    34.0   334.4   157.0 87493.0 \n\n\n\n\nCode\nquantile(flowLine$TRIPS, probs = seq(0, 1, 0.01), na.rm = TRUE)\n\n\n      0%       1%       2%       3%       4%       5%       6%       7% \n    1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00 \n      8%       9%      10%      11%      12%      13%      14%      15% \n    1.00     2.00     2.00     2.00     2.00     2.00     3.00     3.00 \n     16%      17%      18%      19%      20%      21%      22%      23% \n    3.00     4.00     4.00     4.00     5.00     5.00     5.00     6.00 \n     24%      25%      26%      27%      28%      29%      30%      31% \n    6.00     7.00     7.00     8.00     9.00     9.00    10.00    11.00 \n     32%      33%      34%      35%      36%      37%      38%      39% \n   12.00    12.00    13.00    14.00    15.00    16.00    17.00    18.00 \n     40%      41%      42%      43%      44%      45%      46%      47% \n   19.00    20.00    22.00    23.00    24.00    26.00    27.00    29.00 \n     48%      49%      50%      51%      52%      53%      54%      55% \n   30.00    32.00    34.00    36.00    38.00    41.00    43.00    45.00 \n     56%      57%      58%      59%      60%      61%      62%      63% \n   48.00    51.00    54.00    58.00    61.00    65.00    68.00    73.00 \n     64%      65%      66%      67%      68%      69%      70%      71% \n   77.00    82.00    87.00    93.00    99.00   105.00   113.00   119.17 \n     72%      73%      74%      75%      76%      77%      78%      79% \n  128.00   137.00   146.00   157.00   169.00   181.00   195.00   211.00 \n     80%      81%      82%      83%      84%      85%      86%      87% \n  227.00   246.00   266.00   290.00   319.00   348.00   381.00   422.00 \n     88%      89%      90%      91%      92%      93%      94%      95% \n  469.00   522.00   589.00   665.00   757.84   877.00  1037.00  1249.65 \n     96%      97%      98%      99%     100% \n 1573.92  2062.38  2990.68  5446.92 87493.00 \n\n\nWe now attempt to visualize for the 3rd Quantile and up\n\n\nCode\ntmap_mode('plot')\n\nq3q4_flowLine &lt;- flowLine %&gt;%\n  filter(TRIPS &gt;= 157)\n\ncount_busstop_filtered &lt;- count_busstop %&gt;%\n  filter(hex_id %in% c(q3q4_flowLine$O_HEX_ID, q3q4_flowLine$D_HEX_ID))\n\ntm_shape(mpsz19) +\n  tm_polygons(alpha=0.3)+\n              #col='black') +\n#tm_shape(count_busstop_filtered) +\n  #tm_polygons(alpha=0.3) +\n  \n  q3q4_flowLine %&gt;%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.3,\n           col='red') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.position = \"center\",\n            main.title.size = 2.0,\n            main.title.fontface = 'bold') +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\nAs shown the map is illegible and it is hard to distinguish or intepret from the map. Hence we now attempt to scale this down by filtering from the 99th percentile: 5446.92\n\n\nCode\ntmap_mode('plot')\n\nq3q4_flowLine &lt;- flowLine %&gt;%\n  filter(TRIPS &gt;= 5446.92)\n\ncount_busstop_filtered &lt;- count_busstop %&gt;%\n  filter(hex_id %in% c(q3q4_flowLine$O_HEX_ID, q3q4_flowLine$D_HEX_ID))\n\ntm_shape(mpsz19) +\n  tm_polygons(alpha=0.3)+\n              #col='black') +\n#tm_shape(count_busstop_filtered) +\n  #tm_polygons(alpha=0.3) +\n  \n  q3q4_flowLine %&gt;%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.3,\n           col='red') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.position = \"center\",\n            main.title.size = 2.0,\n            main.title.fontface = 'bold') +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\nIn this map, we have excluded trips with fewer than 5446.92 trips for easier analysis as can be seen above, it is illegible when there are too many lines. Lines with greater thickness indicate a higher number of trips, while the line length signifies the distance of each trip between hexagons.\nIt was noted that certain bus routes transport a larger number of passengers. Prominent routes were observed in the Woodlands Checkpoint (plausibly due to Malaysians commuting to work from beyond the causeway) and Boon Lay regions (understandably as it is an area which relies heavily on feeder buses to get to the main transport facilities such as the bus interchange and MRT station). Additionally, several routes stretching from the North to the East of Singapore are notably longer.\n\n\nCode\ntmap_mode('plot')\n\nq3q4_flowLine &lt;- flowLine %&gt;%\n  filter(TRIPS &gt;= 10000)\n\ncount_busstop_filtered &lt;- count_busstop %&gt;%\n  filter(hex_id %in% c(q3q4_flowLine$O_HEX_ID, q3q4_flowLine$D_HEX_ID))\n\ntm_shape(mpsz19) +\n  tm_polygons(alpha=0.3)+\n              #col='black') +\n#tm_shape(count_busstop_filtered) +\n  #tm_polygons(alpha=0.3) +\n  \n  q3q4_flowLine %&gt;%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.3,\n           col='red') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.position = \"center\",\n            main.title.size = 2.0,\n            main.title.fontface = 'bold') +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\nIn this map, we have chosen to display only trips with 10,000 or more journeys, regardless of the distance traveled.\nKey Observations:\n\nThe most heavily trafficked flows were found in the vicinity of the Woodlands Check Point, a key point for commuter transport across the causeway.\nHigh traffic flows were frequently linked to bus or train stations as destinations, indicating that many passengers use buses to connect to further transit options. This observation suggests that the proximity of bus interchanges or train stations might play a significant role in explaining ‘TRIPS’ in our forthcoming Spatial Interaction Model."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#addtional-data-for-propulsiveness-and-attractiveness",
    "href": "Take-home_Ex2/Take-home_Ex2.html#addtional-data-for-propulsiveness-and-attractiveness",
    "title": "Take-home_Ex2",
    "section": "8.1 Addtional Data for Propulsiveness and Attractiveness",
    "text": "8.1 Addtional Data for Propulsiveness and Attractiveness\n\nPropulsive attributes are characteristics that motivate or instigate movement away from a particular place, linked to the starting point of travel. They symbolize the circumstances that exert a “push” effect on entities, prompting them to leave their current position.\nConversely, attractive attributes are elements that draw or lure entities to a certain place. They are connected with the journey’s end point and epitomize the qualities that render a destination desirable.\n\n\nAttractiveness\n\nResidential data (Attractive)\nThe Weekday morning peak is a time frame where most have to get up about to do their business, whether it is going to school or work. Hence, using residential HDB data as a proxy for human density, we attempt to look at the data’s Attractive capabilities\n\n\nCode\n# Load csv file\nhdb &lt;- read_csv(\"data/aspatial/hdb.csv\")\n\n# check the data\nglimpse(hdb)\n\n\nRows: 12,442\nColumns: 37\n$ ...1                  &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ blk_no                &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"…\n$ street                &lt;chr&gt; \"BEACH RD\", \"BEDOK STH AVE 1\", \"CANTONMENT RD\", …\n$ max_floor_lvl         &lt;dbl&gt; 16, 14, 2, 15, 4, 25, 12, 14, 12, 2, 15, 15, 13,…\n$ year_completed        &lt;dbl&gt; 1970, 1975, 2010, 1982, 1975, 1982, 1975, 1977, …\n$ residential           &lt;chr&gt; \"Y\", \"Y\", \"N\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"N\"…\n$ commercial            &lt;chr&gt; \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"Y\", \"Y\"…\n$ market_hawker         &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ miscellaneous         &lt;chr&gt; \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"Y\", \"N\", \"N\"…\n$ multistorey_carpark   &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ precinct_pavilion     &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ bldg_contract_town    &lt;chr&gt; \"KWN\", \"BD\", \"CT\", \"BD\", \"PRC\", \"BM\", \"QT\", \"GL\"…\n$ total_dwelling_units  &lt;dbl&gt; 142, 206, 0, 102, 55, 96, 125, 247, 95, 0, 220, …\n$ `1room_sold`          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `2room_sold`          &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `3room_sold`          &lt;dbl&gt; 138, 204, 0, 0, 54, 0, 118, 0, 62, 0, 216, 214, …\n$ `4room_sold`          &lt;dbl&gt; 1, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `5room_sold`          &lt;dbl&gt; 2, 2, 0, 92, 1, 96, 7, 0, 33, 0, 4, 5, 0, 4, 0, …\n$ exec_sold             &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ multigen_sold         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ studio_apartment_sold &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `1room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 319, 0, 0, 0…\n$ `2room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 56, …\n$ `3room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 1,…\n$ other_room_rental     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0,…\n$ lat                   &lt;dbl&gt; 1.295097, 1.320852, 1.275488, 1.327969, 1.388610…\n$ lng                   &lt;dbl&gt; 103.8541, 103.9337, 103.8414, 103.9227, 103.9881…\n$ building              &lt;chr&gt; \"RAFFLES HOTEL\", \"NIL\", \"PINNACLE @ DUXTON\", \"PI…\n$ addr                  &lt;chr&gt; \"1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673\", \"…\n$ postal                &lt;chr&gt; \"189673\", \"460001\", \"080001\", \"461001\", \"500001\"…\n$ SUBZONE_NO            &lt;dbl&gt; 2, 6, 3, 3, 1, 9, 10, 5, 3, 5, 1, 5, 2, 2, 1, 7,…\n$ SUBZONE_N             &lt;chr&gt; \"CITY HALL\", \"BEDOK SOUTH\", \"CHINATOWN\", \"KEMBAN…\n$ SUBZONE_C             &lt;chr&gt; \"DTSZ02\", \"BDSZ06\", \"OTSZ03\", \"BDSZ03\", \"CHSZ01\"…\n$ PLN_AREA_N            &lt;chr&gt; \"DOWNTOWN CORE\", \"BEDOK\", \"OUTRAM\", \"BEDOK\", \"CH…\n$ PLN_AREA_C            &lt;chr&gt; \"DT\", \"BD\", \"OT\", \"BD\", \"CH\", \"BM\", \"QT\", \"GL\", …\n$ REGION_N              &lt;chr&gt; \"CENTRAL REGION\", \"EAST REGION\", \"CENTRAL REGION…\n$ REGION_C              &lt;chr&gt; \"CR\", \"ER\", \"CR\", \"ER\", \"ER\", \"CR\", \"CR\", \"CR\", …\n\n\n\n\nCode\nglimpse(hdb)\n\n\nRows: 12,442\nColumns: 37\n$ ...1                  &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ blk_no                &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"…\n$ street                &lt;chr&gt; \"BEACH RD\", \"BEDOK STH AVE 1\", \"CANTONMENT RD\", …\n$ max_floor_lvl         &lt;dbl&gt; 16, 14, 2, 15, 4, 25, 12, 14, 12, 2, 15, 15, 13,…\n$ year_completed        &lt;dbl&gt; 1970, 1975, 2010, 1982, 1975, 1982, 1975, 1977, …\n$ residential           &lt;chr&gt; \"Y\", \"Y\", \"N\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"N\"…\n$ commercial            &lt;chr&gt; \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"Y\", \"Y\"…\n$ market_hawker         &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ miscellaneous         &lt;chr&gt; \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"Y\", \"N\", \"N\"…\n$ multistorey_carpark   &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ precinct_pavilion     &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ bldg_contract_town    &lt;chr&gt; \"KWN\", \"BD\", \"CT\", \"BD\", \"PRC\", \"BM\", \"QT\", \"GL\"…\n$ total_dwelling_units  &lt;dbl&gt; 142, 206, 0, 102, 55, 96, 125, 247, 95, 0, 220, …\n$ `1room_sold`          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `2room_sold`          &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `3room_sold`          &lt;dbl&gt; 138, 204, 0, 0, 54, 0, 118, 0, 62, 0, 216, 214, …\n$ `4room_sold`          &lt;dbl&gt; 1, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `5room_sold`          &lt;dbl&gt; 2, 2, 0, 92, 1, 96, 7, 0, 33, 0, 4, 5, 0, 4, 0, …\n$ exec_sold             &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ multigen_sold         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ studio_apartment_sold &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `1room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 319, 0, 0, 0…\n$ `2room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 56, …\n$ `3room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 1,…\n$ other_room_rental     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0,…\n$ lat                   &lt;dbl&gt; 1.295097, 1.320852, 1.275488, 1.327969, 1.388610…\n$ lng                   &lt;dbl&gt; 103.8541, 103.9337, 103.8414, 103.9227, 103.9881…\n$ building              &lt;chr&gt; \"RAFFLES HOTEL\", \"NIL\", \"PINNACLE @ DUXTON\", \"PI…\n$ addr                  &lt;chr&gt; \"1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673\", \"…\n$ postal                &lt;chr&gt; \"189673\", \"460001\", \"080001\", \"461001\", \"500001\"…\n$ SUBZONE_NO            &lt;dbl&gt; 2, 6, 3, 3, 1, 9, 10, 5, 3, 5, 1, 5, 2, 2, 1, 7,…\n$ SUBZONE_N             &lt;chr&gt; \"CITY HALL\", \"BEDOK SOUTH\", \"CHINATOWN\", \"KEMBAN…\n$ SUBZONE_C             &lt;chr&gt; \"DTSZ02\", \"BDSZ06\", \"OTSZ03\", \"BDSZ03\", \"CHSZ01\"…\n$ PLN_AREA_N            &lt;chr&gt; \"DOWNTOWN CORE\", \"BEDOK\", \"OUTRAM\", \"BEDOK\", \"CH…\n$ PLN_AREA_C            &lt;chr&gt; \"DT\", \"BD\", \"OT\", \"BD\", \"CH\", \"BM\", \"QT\", \"GL\", …\n$ REGION_N              &lt;chr&gt; \"CENTRAL REGION\", \"EAST REGION\", \"CENTRAL REGION…\n$ REGION_C              &lt;chr&gt; \"CR\", \"ER\", \"CR\", \"ER\", \"ER\", \"CR\", \"CR\", \"CR\", …\n\n\n\n\nCode\nhdb_sf &lt;- st_as_sf(hdb,\n                   coords = c(\"lng\", \"lat\"),\n                   crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\n# visualize the output\ntm_shape(mpsz19)+\n  tm_polygons(col = 'white', alpha = 0.01) +\n  tm_shape(hdb_sf) +\n  tm_dots(col = 'lightblue',\n          id = 'building') +\n  tm_layout(main.title = 'HDB Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\nCode\nsummary(hdb_sf)\n\n\n      ...1          blk_no             street          max_floor_lvl  \n Min.   :    0   Length:12442       Length:12442       Min.   : 1.00  \n 1st Qu.: 3110   Class :character   Class :character   1st Qu.: 6.00  \n Median : 6220   Mode  :character   Mode  :character   Median :12.00  \n Mean   : 6220                                         Mean   :12.03  \n 3rd Qu.: 9331                                         3rd Qu.:16.00  \n Max.   :12441                                         Max.   :50.00  \n                                                                      \n year_completed residential         commercial        market_hawker     \n Min.   :1937   Length:12442       Length:12442       Length:12442      \n 1st Qu.:1984   Class :character   Class :character   Class :character  \n Median :1993   Mode  :character   Mode  :character   Mode  :character  \n Mean   :1994                                                           \n 3rd Qu.:2001                                                           \n Max.   :2021                                                           \n                                                                        \n miscellaneous      multistorey_carpark precinct_pavilion  bldg_contract_town\n Length:12442       Length:12442        Length:12442       Length:12442      \n Class :character   Class :character    Class :character   Class :character  \n Mode  :character   Mode  :character    Mode  :character   Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n                                                                             \n total_dwelling_units   1room_sold         2room_sold        3room_sold    \n Min.   :  0.00       Min.   :  0.0000   Min.   :  0.000   Min.   :  0.00  \n 1st Qu.: 34.00       1st Qu.:  0.0000   1st Qu.:  0.000   1st Qu.:  0.00  \n Median : 90.00       Median :  0.0000   Median :  0.000   Median :  0.00  \n Mean   : 87.67       Mean   :  0.0205   Mean   :  2.415   Mean   : 19.66  \n 3rd Qu.:120.00       3rd Qu.:  0.0000   3rd Qu.:  0.000   3rd Qu.:  6.00  \n Max.   :584.00       Max.   :255.0000   Max.   :225.000   Max.   :528.00  \n                                                                           \n   4room_sold       5room_sold       exec_sold       multigen_sold    \n Min.   :  0.00   Min.   :  0.00   Min.   :  0.000   Min.   : 0.0000  \n 1st Qu.:  0.00   1st Qu.:  0.00   1st Qu.:  0.000   1st Qu.: 0.0000  \n Median : 22.00   Median :  0.00   Median :  0.000   Median : 0.0000  \n Mean   : 34.66   Mean   : 19.85   Mean   :  5.204   Mean   : 0.0295  \n 3rd Qu.: 58.00   3rd Qu.: 40.00   3rd Qu.:  0.000   3rd Qu.: 0.0000  \n Max.   :316.00   Max.   :164.00   Max.   :135.000   Max.   :66.0000  \n                                                                      \n studio_apartment_sold  1room_rental      2room_rental      3room_rental     \n Min.   :  0.0000      Min.   :  0.000   Min.   :  0.000   Min.   :  0.0000  \n 1st Qu.:  0.0000      1st Qu.:  0.000   1st Qu.:  0.000   1st Qu.:  0.0000  \n Median :  0.0000      Median :  0.000   Median :  0.000   Median :  0.0000  \n Mean   :  0.7066      Mean   :  2.476   Mean   :  2.504   Mean   :  0.1372  \n 3rd Qu.:  0.0000      3rd Qu.:  0.000   3rd Qu.:  0.000   3rd Qu.:  0.0000  \n Max.   :201.0000      Max.   :520.000   Max.   :452.000   Max.   :114.0000  \n                                                                             \n other_room_rental    building             addr              postal         \n Min.   : 0.00000   Length:12442       Length:12442       Length:12442      \n 1st Qu.: 0.00000   Class :character   Class :character   Class :character  \n Median : 0.00000   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 0.00981                                                           \n 3rd Qu.: 0.00000                                                           \n Max.   :32.00000                                                           \n                                                                            \n   SUBZONE_NO      SUBZONE_N          SUBZONE_C          PLN_AREA_N       \n Min.   : 1.000   Length:12442       Length:12442       Length:12442      \n 1st Qu.: 2.000   Class :character   Class :character   Class :character  \n Median : 4.000   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 4.218                                                           \n 3rd Qu.: 5.000                                                           \n Max.   :16.000                                                           \n NA's   :1                                                                \n  PLN_AREA_C          REGION_N           REGION_C                  geometry    \n Length:12442       Length:12442       Length:12442       POINT        :12442  \n Class :character   Class :character   Class :character   epsg:3414    :    0  \n Mode  :character   Mode  :character   Mode  :character   +proj=tmer...:    0  \n                                                                               \n                                                                               \n                                                                               \n                                                                               \n\n\n\n\nBusiness (Attractiveness)\nThe Weekday morning peak is a time frame where most have to get up to head to work. Hence using business geographic density, we attempt to look at the data’s Attractiveness capabilities\n\n\nCode\nbusiness &lt;- st_read(dsn = \"data/geospatial\",\n                    layer = \"Business\") %&gt;%\n          st_transform(crs = 3414)\n\n\nReading layer `Business' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\nCode\nhead(business,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nPOI_NAME\nPOI_ST_NUM\nPOI_ST_NAM\ngeometry\n\n\n\n\nJOHN CHEN\n6\nLITTLE RD\nPOINT (33818.36 35620.16)\n\n\nTROPICAL INDUSTRIAL BUILDING\n14\nLITTLE RD\nPOINT (33770.51 35610.2)\n\n\nLIAN CHEONG INDUSTRIAL BUILDING\n12\nLITTLE RD\nPOINT (33779.41 35612.41)\n\n\nMALAYSIA GARMENT MANUFACTURERS\nNA\nNA\nPOINT (33802.78 35598.04)\n\n\nUNIGOLD\n2\nLITTLE RD\nPOINT (33835.06 35623.47)\n\n\nNUS UNIVERSITY HALL\n21\nLOWER KENT RIDGE RD\nPOINT (21813.48 31063.37)\n\n\nSUITES AT BUKIT TIMAH\n68\nJALAN JURONG KECHIL\nPOINT (21375.11 35831.37)\n\n\nTIONG HUAT\n68\nKALLANG PUDDING RD\nPOINT (33088.33 34439.2)\n\n\nLEE CHOON GUAN TIMBER MERCHANT\nNA\nPENJURU RD\nPOINT (17103.73 33407.71)\n\n\nWEIGHT BRIDGE SERVICE\n14\nPENJURU RD\nPOINT (17178.3 33503.9)\n\n\n\n\n\n\n\n\n\n\nCode\n# visualize the output\n# visualize the output\ntm_shape(mpsz19)+\n  tm_polygons(alpha = 0.01)+\n  tm_shape(business)+\n  tm_dots(col = 'red') +\n  tm_layout(main.title = 'Business Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\nSchool (Attractiveness)\nThe Weekday morning peak is a time frame where most have to get up to head to school (although we do recognize that polytechnic, ITE and University students may come at staggering timings, this is the best proxy) . Hence using school geographic density, we attempt to look at the data’s Attractiveness capabilities\n\n\nCode\nurl &lt;- \"https://www.onemap.gov.sg/api/common/elastic/search\"\n\ncsv &lt;- read_csv(\"./data/aspatial/Generalinformationofschools.csv\")\npostcodes &lt;- csv$postal_code\n\nfound &lt;- data.frame()\nnot_found &lt;- data.frame()\n\nfor(postcode in postcodes){\n  query &lt;-list('searchVal' = postcode, 'returnGeom'='Y', 'getAddrDetails'='Y', 'pageNum' = '1')\n  res  &lt;- GET(url, query=query)\n  \n  if((content(res)$found)!=0)\n    found&lt;-rbind(found, data.frame(content(res))[4:13])\n  else {\n  not_found = data.frame(postcode)\n  }\n}\n\nglimpse(found)\n\n\nRows: 345\nColumns: 10\n$ results.SEARCHVAL &lt;chr&gt; \"THE LEARNING HARBOUR @ ADMIRALTY PRIMARY SCHOOL\", \"…\n$ results.BLK_NO    &lt;chr&gt; \"11\", \"31\", \"10\", \"751\", \"100\", \"2A\", \"31\", \"19\", \"1…\n$ results.ROAD_NAME &lt;chr&gt; \"WOODLANDS CIRCLE\", \"WOODLANDS CRESCENT\", \"YISHUN ST…\n$ results.BUILDING  &lt;chr&gt; \"THE LEARNING HARBOUR @ ADMIRALTY PRIMARY SCHOOL\", \"…\n$ results.ADDRESS   &lt;chr&gt; \"11 WOODLANDS CIRCLE THE LEARNING HARBOUR @ ADMIRALT…\n$ results.POSTAL    &lt;chr&gt; \"738907\", \"737916\", \"768643\", \"768928\", \"579646\", \"1…\n$ results.X         &lt;chr&gt; \"24315.9398124339\", \"24559.0472937012\", \"27958.13714…\n$ results.Y         &lt;chr&gt; \"47135.3542042952\", \"47504.7873554379\", \"46096.26276…\n$ results.LATITUDE  &lt;chr&gt; \"1.44254963931583\", \"1.44589068910993\", \"1.433152715…\n$ results.LONGITUDE &lt;chr&gt; \"103.800213682734\", \"103.802398196596\", \"103.8329424…\n\n\n\n\nCode\nschools = merge(csv, found, by.x = 'postal_code', by.y = 'results.POSTAL', all = TRUE)\n\n# manually add the Zhenghua Secondary School data\nschools[schools$school_name == \"ZHENGHUA SECONDARY SCHOOL\", \"results.LATITUDE\"] &lt;- 1.3887\nschools[schools$school_name == \"ZHENGHUA SECONDARY SCHOOL\", \"results.LONGITUDE\"] &lt;- 103.7652\n\n# check the output\nglimpse(schools)\n\n\nRows: 350\nColumns: 40\n$ postal_code        &lt;chr&gt; \"088256\", \"099138\", \"099757\", \"099840\", \"109100\", \"…\n$ school_name        &lt;chr&gt; \"CANTONMENT PRIMARY SCHOOL\", \"CHIJ ST. THERESA'S CO…\n$ url_address        &lt;chr&gt; \"http://www.cantonmentpri.moe.edu.sg\", \"http://www.…\n$ address            &lt;chr&gt; \"1    Cantonment Close\", \"160  LOWER DELTA ROAD\", \"…\n$ telephone_no       &lt;chr&gt; \"65119555\", \"64775777\", \"62730096\", \"62733937\", \"62…\n$ telephone_no_2     &lt;chr&gt; \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ fax_no             &lt;chr&gt; \"65119556\", \"64775700\", \"62731710\", \"62763083\", \"62…\n$ fax_no_2           &lt;chr&gt; \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ email_address      &lt;chr&gt; \"cantonment_ps@moe.edu.sg\", \"CHIJSTCS@MOE.EDU.SG\", …\n$ mrt_desc           &lt;chr&gt; \"Tanjong Pagar Outram Park\", \"HARBOURFRONT MRT, TIO…\n$ bus_desc           &lt;chr&gt; \"75, 167, 196\", \"65, 121, 123, 123M, 124, 131, 131M…\n$ principal_name     &lt;chr&gt; \"MRS MANOKARA SUGUNAVATHI\", \"MDM TAN MEI MEI JENNY\"…\n$ first_vp_name      &lt;chr&gt; \"MRS AUDREA CHIN\", \"MDM ONG LEE LEE\", \"MS NG CHIOU …\n$ second_vp_name     &lt;chr&gt; \"MISS CHENG SHIN MIIN\", \"MISS KUO ZHAOYAN, FELICIA\"…\n$ third_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fourth_vp_name     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fifth_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ sixth_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ dgp_code           &lt;chr&gt; \"BUKIT MERAH\", \"BUKIT MERAH\", \"BUKIT MERAH\", \"BUKIT…\n$ zone_code          &lt;chr&gt; \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH…\n$ type_code          &lt;chr&gt; \"GOVERNMENT SCHOOL\", \"GOVERNMENT-AIDED SCH\", \"GOVER…\n$ nature_code        &lt;chr&gt; \"CO-ED SCHOOL\", \"GIRLS' SCHOOL\", \"GIRLS' SCHOOL\", \"…\n$ session_code       &lt;chr&gt; \"SINGLE SESSION\", \"SINGLE SESSION\", \"SINGLE SESSION…\n$ mainlevel_code     &lt;chr&gt; \"PRIMARY\", \"SECONDARY\", \"PRIMARY\", \"PRIMARY\", \"PRIM…\n$ sap_ind            &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ autonomous_ind     &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ gifted_ind         &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ ip_ind             &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ mothertongue1_code &lt;chr&gt; \"Chinese\", \"Chinese\", \"Chinese\", \"Chinese\", \"Chines…\n$ mothertongue2_code &lt;chr&gt; \"Malay\", \"Malay\", \"Malay\", \"Malay\", \"Malay\", \"Malay…\n$ mothertongue3_code &lt;chr&gt; \"Tamil\", \"Tamil\", \"Tamil\", \"Tamil\", \"Tamil\", \"na\", …\n$ results.SEARCHVAL  &lt;chr&gt; \"KIDZ TREEHOUSE @ CANTONMENT\", \"CHIJ SAINT THERESA'…\n$ results.BLK_NO     &lt;chr&gt; \"1\", \"160\", \"1\", \"1\", \"91\", \"147\", \"301\", \"50\", \"30…\n$ results.ROAD_NAME  &lt;chr&gt; \"CANTONMENT CLOSE\", \"LOWER DELTA ROAD\", \"BUKIT TERE…\n$ results.BUILDING   &lt;chr&gt; \"KIDZ TREEHOUSE @ CANTONMENT\", \"CHIJ SAINT THERESA'…\n$ results.ADDRESS    &lt;chr&gt; \"1 CANTONMENT CLOSE KIDZ TREEHOUSE @ CANTONMENT SIN…\n$ results.X          &lt;chr&gt; \"28748.1620587641\", \"26789.3781491434\", \"27402.9654…\n$ results.Y          &lt;chr&gt; \"28659.9995642845\", \"28647.4426490944\", \"28579.8478…\n$ results.LATITUDE   &lt;chr&gt; \"1.27546534984202\", \"1.27535177510054\", \"1.27474048…\n$ results.LONGITUDE  &lt;chr&gt; \"103.840041087946\", \"103.822440701642\", \"103.827954…\n\n\n\n\nCode\nschools_sf &lt;- schools %&gt;%\n  rename(\n    latitude = \"results.LATITUDE\",\n    longitude = \"results.LONGITUDE\"\n  ) %&gt;%\n  select(\n    postal_code, \n    school_name, \n    latitude, \n    longitude\n  ) %&gt;%\n  st_as_sf(\n    coords = c(\"longitude\", \"latitude\"),\n    crs=4326\n  ) %&gt;%\n  st_transform(\n    crs = 3414\n  )\n\n# visualize the output\ntm_shape(mpsz19)+\n  tm_polygons(col = 'white', alpha = 0.01) +\n  tm_shape(schools_sf) +\n  tm_dots(col = 'blue',\n          id = 'building') +\n  tm_layout(main.title = 'Schools Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\nPropulsiveness\n\nTrain Station (Propulsive)\nWhile we recognize that train stations can be parked with Attractiveness, its presence could also be an element of Propulsiveness where commuters choose to take the train instead of the bus.\n\n\nCode\nTrainStation &lt;- st_read(dsn=\"data/geospatial\", layer = \"RapidTransitSystemStation\") %&gt;%    st_transform(crs = 3414)\n\n\nReading layer `RapidTransitSystemStation' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 220 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 6068.209 ymin: 27478.44 xmax: 45377.5 ymax: 47913.58\nProjected CRS: SVY21\n\n\n\n\nCode\n# the data contain non closed ring, use st_is_valid to fix\nTrainStation &lt;- TrainStation %&gt;%\n  filter(st_is_valid(.))\n         \n# check the data\nglimpse(TrainStation)\n\n\nRows: 217\nColumns: 5\n$ TYP_CD     &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ STN_NAM    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ TYP_CD_DES &lt;chr&gt; \"MRT\", \"MRT\", \"MRT\", \"MRT\", \"MRT\", \"LRT\", \"MRT\", \"MRT\", \"LR…\n$ STN_NAM_DE &lt;chr&gt; \"ESPLANADE MRT STATION\", \"PAYA LEBAR MRT STATION\", \"DHOBY G…\n$ geometry   &lt;POLYGON [m]&gt; POLYGON ((30566.07 30621.21..., POLYGON ((34495.6 3…\n\n\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(TrainStation$geometry) == nrow(TrainStation), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"no duplicates detected\"\n\n\n\n\nCode\n# visualize the output\ntm_shape(mpsz19)+\n  tm_polygons(col = 'white', alpha = 0.01) +\n  tm_shape(TrainStation) +\n  tm_fill(col = 'green',\n          id = 'STN_NAM_DE') +\n  tm_layout(main.title = 'MRT Station Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\nRetail (Propulsive)\nWhile we recognize that train stations can be parked with Attractiveness, its presence could also be an element of Propulsiveness where commuters are given a chance to shop in heartland malls or markets near their place of residence.\n\n\nCode\nretails &lt;- st_read(dsn=\"data/geospatial\", layer = \"Retails\") %&gt;%    st_transform(crs = 3414)\n\n\nReading layer `Retails' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\nCode\nif_else(n_distinct(retails) == nrow(retails), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"possible duplicates detected\"\n\n\n\n\nCode\n# Subset rows for duplicates and arrange by POI_NAME and POI_ST_NAM\nduplicates &lt;- retails[duplicated(retails) | duplicated(retails, fromLast = TRUE), ] %&gt;%\n  arrange(POI_NAME, POI_ST_NAM)\n\n# Display the sorted rows with duplicatew\nkable(head(duplicates, n=20))\n\n\n\n\n\nPOI_NAME\nPOI_ST_NUM\nPOI_ST_NAM\ngeometry\n\n\n\n\n10 & 10 SPORTING CO.\n28\nKALLANG PL\nPOINT (31757.32 33054.78)\n\n\n10 & 10 SPORTING CO.\n28\nKALLANG PL\nPOINT (31757.32 33054.78)\n\n\n123 SALES\n662\nBUFFALO RD\nPOINT (29895.44 32149.16)\n\n\n123 SALES\n662\nBUFFALO RD\nPOINT (29895.44 32149.16)\n\n\nAIK BAN HENG & TRADING\n456\nANG MO KIO AVE 10\nPOINT (30820.2 38832.31)\n\n\nAIK BAN HENG & TRADING\n456\nANG MO KIO AVE 10\nPOINT (30820.2 38832.31)\n\n\nAIK KIONG ENGINEERING CO\n90\nDUNLOP ST\nPOINT (30182.57 31993.25)\n\n\nAIK KIONG ENGINEERING CO\n90\nDUNLOP ST\nPOINT (30182.57 31993.25)\n\n\nALEXANDRA CENTRAL\n321\nALEXANDRA RD\nPOINT (24837.25 30020.6)\n\n\nALEXANDRA CENTRAL\n321\nALEXANDRA RD\nPOINT (24837.25 30020.6)\n\n\nANACAONA\n128\nDUNLOP ST\nPOINT (30113.57 32037.48)\n\n\nANACAONA\n128\nDUNLOP ST\nPOINT (30113.57 32037.48)\n\n\nANTECH INTERNET CAFE\n44\nUPP DICKSON RD\nPOINT (30170.33 32060.7)\n\n\nANTECH INTERNET CAFE\n44\nUPP DICKSON RD\nPOINT (30170.33 32060.7)\n\n\nBABY GUESS\n290\nORCHARD RD\nPOINT (28306.21 31787.57)\n\n\nBABY GUESS\n290\nORCHARD RD\nPOINT (28306.21 31787.57)\n\n\nBAN CHOON MEDICAL STORE\n130\nTELOK AYER ST\nPOINT (29649.5 29342.76)\n\n\nBAN CHOON MEDICAL STORE\n130\nTELOK AYER ST\nPOINT (29649.5 29342.76)\n\n\nBANG & OLUFSEN\n10\nSCOTTS RD\nPOINT (27957.87 32092.76)\n\n\nBANG & OLUFSEN\n10\nSCOTTS RD\nPOINT (27957.87 32092.76)\n\n\n\n\n\n\n\n\n\nCode\n# Keep one row of the duplicates in the original dataset\nretails &lt;- retails[!duplicated(retails) | duplicated(retails, fromLast = TRUE), ]\n\n# Display the resulting dataset\nglimpse(retails)\n\n\nRows: 37,463\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"TIAN KEE & CO\", \"PEOPLE TRADITIONAL CHINESE MEDICAL\", \"RIV…\n$ POI_ST_NUM &lt;chr&gt; \"12\", \"12\", NA, NA, \"588\", \"243\", \"208\", \"267\", \"231\", \"158…\n$ POI_ST_NAM &lt;chr&gt; \"DAKOTA CRES\", \"DAKOTA CRES\", NA, NA, \"SERANGOON RD\", \"ALEX…\n$ geometry   &lt;POINT [m]&gt; POINT (33713.83 32023.15), POINT (33713.83 32023.15),…\n\n\n\n\nCode\n# visualize the output\ntm_shape(mpsz19) +\n  tm_polygons(alpha = 0.01) +\n  tm_shape(retails) +\n  tm_dots(col = 'green', id = 'POI_NAME') +\n  tm_layout(main.title=\"Retail Distribution Map\", main.title.position = \"center\")\n\n\n\n\n\n\n\nDistance (Propulsive)\n\n\nCode\nglimpse(flowLine)\n\n\nRows: 64,128\nColumns: 10\n$ O_HEX_ID   &lt;fct&gt; 23, 23, 23, 23, 23, 23, 23, 23, 23, 44, 44, 44, 44, 44, 46,…\n$ D_HEX_ID   &lt;fct&gt; 67, 86, 88, 128, 132, 154, 155, 175, 176, 88, 128, 154, 155…\n$ TRIPS      &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54…\n$ NoIntra    &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54…\n$ offset     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ dist       &lt;dbl&gt; 2704.163, 1299.038, 3436.932, 1984.313, 6139.015, 6873.864,…\n$ WD_MORNING &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54…\n$ O_DESC     &lt;chr&gt; \"AFT TUAS STH BLVD\", \"AFT TUAS STH BLVD\", \"AFT TUAS STH BLV…\n$ D_DESC     &lt;chr&gt; \"THE INDEX\", \"OPP REC S'PORE\", \"EDGEN MURRAY\", \"AFT TUAS ST…\n$ geometry   &lt;LINESTRING [m]&gt; LINESTRING (3970.122 27781...., LINESTRING (3970…\n\n\n\n\nCode\nggplot(data = flowLine,\n       aes(x = WD_MORNING)) +\n  geom_histogram()\n\n\n\n\n\n\n\n\n\nCode\nggplot(flowLine,\n       aes(x = dist, y = TRIPS)) +\n  geom_point() +\n  geom_hline(yintercept = 376.25, color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = 20000,\n           y = 600, label = \"95th percentile\",\n           hjust = -0.1, color = \"red\", size = 3) +\n  geom_hline(yintercept = 1510, color = \"purple\", linetype = \"dashed\") +\n  annotate(\"text\", x = 20000,\n           y = 1800, label = \"99th percentile\",\n           hjust = -0.1, color = \"purple\", size = 3) +\n  labs(title = \"Number of Trips as a Function of Distance\",\n       x = \"Distance (m)\",\n       y = \"Number of Trips\")\n\n\n\n\n\n\n\nCode\nggplot(flowLine,\n       aes(x = log(dist), y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\nWe observe that the further the distance travelled, the lesser the volume of trips, hence we mark distance as a propulsive factor"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#propulsive-factors",
    "href": "Take-home_Ex2/Take-home_Ex2.html#propulsive-factors",
    "title": "Take-home_Ex2",
    "section": "9.1 Propulsive Factors",
    "text": "9.1 Propulsive Factors\n\n\nCode\nglimpse(count_busstop)\n\n\nRows: 834\nColumns: 3\n$ hex_id        &lt;int&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, 109, 110, 11…\n$ hx_grid       &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLYGON ((4345.1…\n$ count_busstop &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2, 1, 1, 5, 3,…\n\n\n\n\nCode\nfactors_holder &lt;- count_busstop %&gt;%\n  rename(propul_count_busstop = count_busstop)\n\n# Define a function to add push poi counts columns\nadd_propul_poi_counts &lt;- function(factors_holder, poi_datasets) {\n  # Loop through each POI dataset\n  for (poi_name in poi_datasets) {\n    # Add a new column with the count using st_intersects and lengths\n    factors_holder[[paste0(\"propul_\", poi_name, \"_count\")]] &lt;- \n      ifelse(\n        lengths(st_intersects(factors_holder, get(poi_name))) == 0,\n        0.99,\n        lengths(st_intersects(factors_holder, get(poi_name)))\n      )\n  }\n  \n  # Return the updated factors_holder dataframe\n  return(factors_holder)\n}\n\n# List of POI dataset names\npropul_poi_datasets &lt;- c(\"retails\", \"TrainStation\", \"flowLine\")\n\n# Call the function\nfactors_holder &lt;- add_propul_poi_counts(factors_holder, propul_poi_datasets)\n\n# Check the output\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 6\n$ hex_id                    &lt;int&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, …\n$ propul_count_busstop      &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2,…\n$ hx_grid                   &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLY…\n$ propul_retails_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 5.00, 0.99, 0.99, 0.…\n$ propul_TrainStation_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_flowLine_count     &lt;dbl&gt; 15, 25, 20, 41, 78, 46, 20, 54, 120, 89, 35,…\n\n\n\n\nCode\nhdb_sf\n\n\nSimple feature collection with 12442 features and 35 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11519.15 ymin: 28097.64 xmax: 45292.59 ymax: 48741.06\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 12,442 × 36\n    ...1 blk_no street       max_floor_lvl year_completed residential commercial\n * &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;                &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;     \n 1     0 1      BEACH RD                16           1970 Y           Y         \n 2     1 1      BEDOK STH A…            14           1975 Y           N         \n 3     2 1      CANTONMENT …             2           2010 N           Y         \n 4     3 1      CHAI CHEE RD            15           1982 Y           N         \n 5     4 1      CHANGI VILL…             4           1975 Y           Y         \n 6     5 1      DELTA AVE               25           1982 Y           N         \n 7     6 1      DOVER RD                12           1975 Y           N         \n 8     7 1      EUNOS CRES              14           1977 Y           N         \n 9     8 1      EVERTON PK              12           1980 Y           Y         \n10     9 1      GEYLANG SER…             2           2009 N           Y         \n# ℹ 12,432 more rows\n# ℹ 29 more variables: market_hawker &lt;chr&gt;, miscellaneous &lt;chr&gt;,\n#   multistorey_carpark &lt;chr&gt;, precinct_pavilion &lt;chr&gt;,\n#   bldg_contract_town &lt;chr&gt;, total_dwelling_units &lt;dbl&gt;, `1room_sold` &lt;dbl&gt;,\n#   `2room_sold` &lt;dbl&gt;, `3room_sold` &lt;dbl&gt;, `4room_sold` &lt;dbl&gt;,\n#   `5room_sold` &lt;dbl&gt;, exec_sold &lt;dbl&gt;, multigen_sold &lt;dbl&gt;,\n#   studio_apartment_sold &lt;dbl&gt;, `1room_rental` &lt;dbl&gt;, `2room_rental` &lt;dbl&gt;, …\n\n\n\n\nCode\nhdb_capacity &lt;- hdb_sf %&gt;%\n  mutate(capacity = `1room_sold` *1 +\n           `2room_sold` * 2+\n           `3room_sold` * 3+\n           `4room_sold` * 4+\n           `5room_sold` * 5+\n           exec_sold * 4+\n           multigen_sold * 6+\n           studio_apartment_sold *1+\n           `1room_rental` * 1+\n           `2room_rental` * 2+\n           `3room_rental` * 3+\n           other_room_rental * 2) %&gt;%\n  select(blk_no, geometry, capacity)\n\n# get hexagon_id for hdb, then sum the capacity\nhdb_capacity &lt;- st_join(hdb_capacity, count_busstop, by = NULL, join = st_within) %&gt;%\n  group_by(hex_id) %&gt;%\n  summarise(propul_est_pop = sum(capacity)) %&gt;%\n  st_drop_geometry()\n\n# Convert hex_id to character in both dataframes\nfactors_holder &lt;- factors_holder %&gt;% mutate(hex_id = as.character(hex_id))\nhdb_capacity &lt;- hdb_capacity %&gt;% mutate(hex_id = as.character(hex_id))\n\n# Left join factors_holder and hdb_capacity by hex_id\nfactors_holder &lt;- left_join(factors_holder, hdb_capacity, by = \"hex_id\") %&gt;%\n  mutate(hex_id = as.factor(hex_id)) %&gt;%  # Convert back to factor\n  mutate_at(vars(contains(\"propul_est_pop\")), list(~coalesce(., 0.99)))  # Fill missing values with 0.99 \n\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 7\n$ hex_id                    &lt;fct&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, …\n$ propul_count_busstop      &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2,…\n$ propul_retails_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 5.00, 0.99, 0.99, 0.…\n$ propul_TrainStation_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_flowLine_count     &lt;dbl&gt; 15, 25, 20, 41, 78, 46, 20, 54, 120, 89, 35,…\n$ propul_est_pop            &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ hx_grid                   &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLY…\n\n\n\n\nCode\nhdb_capacity &lt;- hdb_sf %&gt;%\n  mutate(capacity = `1room_sold` *1 +\n           `2room_sold` * 2+\n           `3room_sold` * 3+\n           `4room_sold` * 4+\n           `5room_sold` * 5+\n           exec_sold * 4+\n           multigen_sold * 6+\n           studio_apartment_sold *1+\n           `1room_rental` * 1+\n           `2room_rental` * 2+\n           `3room_rental` * 3+\n           other_room_rental * 2) %&gt;%\n  select(blk_no, geometry, capacity)\n\n# get hex_id for hdb, then sum the capacity\nhdb_capacity &lt;- st_join(hdb_capacity, count_busstop, by = NULL, join = st_within) %&gt;%\n  group_by(hex_id) %&gt;%\n  summarise(propul_est_pop = sum(capacity)) %&gt;%\n  st_drop_geometry()\n\n# Convert hex_id to character in both dataframes\nfactors_holder &lt;- factors_holder %&gt;% mutate(hex_id = as.character(hex_id))\nhdb_capacity &lt;- hdb_capacity %&gt;% mutate(hex_id = as.character(hex_id))\n\n# Left join factors_holder and hdb_capacity by hex_id\nfactors_holder &lt;- left_join(factors_holder, hdb_capacity, by = \"hex_id\") %&gt;%\n  mutate(hex_id = as.factor(hex_id)) %&gt;%  # Convert back to factor\n  mutate_at(vars(contains(\"propul_est_pop\")), list(~coalesce(., 0.99)))  # Fill missing values with 0.99 \n\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 8\n$ hex_id                    &lt;fct&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, …\n$ propul_count_busstop      &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2,…\n$ propul_retails_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 5.00, 0.99, 0.99, 0.…\n$ propul_TrainStation_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_flowLine_count     &lt;dbl&gt; 15, 25, 20, 41, 78, 46, 20, 54, 120, 89, 35,…\n$ propul_est_pop.x          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop.y          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ hx_grid                   &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLY…\n\n\n\n\nCode\nhdb_capacity &lt;- hdb_sf %&gt;%\n  mutate(capacity = `1room_sold` *1 +\n           `2room_sold` * 2+\n           `3room_sold` * 3+\n           `4room_sold` * 4+\n           `5room_sold` * 5+\n           exec_sold * 4+\n           multigen_sold * 6+\n           studio_apartment_sold *1+\n           `1room_rental` * 1+\n           `2room_rental` * 2+\n           `3room_rental` * 3+\n           other_room_rental * 2) %&gt;%\n  select(blk_no, geometry, capacity)\n\n# get hex_id for hdb, then sum the capacity\nhdb_capacity &lt;- st_join(hdb_capacity, count_busstop, by = NULL, join = st_within) %&gt;%\n  group_by(hex_id) %&gt;%\n  summarise(propul_est_pop = sum(capacity)) %&gt;%\n  st_drop_geometry()\n\n# Convert hex_id to character in both dataframes\nfactors_holder &lt;- factors_holder %&gt;% mutate(hex_id = as.character(hex_id))\nhdb_capacity &lt;- hdb_capacity %&gt;% mutate(hex_id = as.character(hex_id))\n\n# Left join factors_holder and hdb_capacity by hex_id\nfactors_holder &lt;- left_join(factors_holder, hdb_capacity, by = \"hex_id\") %&gt;%\n  mutate(hex_id = as.factor(hex_id)) %&gt;%  # Convert back to factor\n  mutate_at(vars(contains(\"propul_est_pop\")), list(~coalesce(., 0.99)))  # Fill missing values with 0.99 \n\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 9\n$ hex_id                    &lt;fct&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, …\n$ propul_count_busstop      &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2,…\n$ propul_retails_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 5.00, 0.99, 0.99, 0.…\n$ propul_TrainStation_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_flowLine_count     &lt;dbl&gt; 15, 25, 20, 41, 78, 46, 20, 54, 120, 89, 35,…\n$ propul_est_pop.x          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop.y          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop            &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ hx_grid                   &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLY…"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#attractive-factors",
    "href": "Take-home_Ex2/Take-home_Ex2.html#attractive-factors",
    "title": "Take-home_Ex2",
    "section": "9.2 Attractive Factors",
    "text": "9.2 Attractive Factors\n\n\nCode\n# define function to add att poi counts columns\nadd_att_poi_counts &lt;- function(factors_holder, poi_datasets) {\n  # Loop through each POI dataset\n  for (poi_name in poi_datasets) {\n    # Add a new column with the count using st_intersects and lengths\n    factors_holder[[paste0(\"att_\", poi_name, \"_count\")]] &lt;- \n      ifelse(\n        lengths(st_intersects(factors_holder, get(poi_name))) == 0,\n        0.99,\n        lengths(st_intersects(factors_holder, get(poi_name)))\n      )\n  }\n  \n  # Return the updated factors_holder dataframe\n  return(factors_holder)\n}\n\n# List of POI dataset names\natt_poi_datasets &lt;- c(\"hdb_sf\", \"business\", \"schools_sf\")\n\n# Call the function\nfactors_holder &lt;- add_att_poi_counts(factors_holder, att_poi_datasets)\n\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 12\n$ hex_id                    &lt;fct&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, …\n$ propul_count_busstop      &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2,…\n$ propul_retails_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 5.00, 0.99, 0.99, 0.…\n$ propul_TrainStation_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_flowLine_count     &lt;dbl&gt; 15, 25, 20, 41, 78, 46, 20, 54, 120, 89, 35,…\n$ propul_est_pop.x          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop.y          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop            &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ hx_grid                   &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLY…\n$ att_hdb_sf_count          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ att_business_count        &lt;dbl&gt; 0.99, 5.00, 4.00, 1.00, 50.00, 27.00, 3.00, …\n$ att_schools_sf_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#final-dataframe",
    "href": "Take-home_Ex2/Take-home_Ex2.html#final-dataframe",
    "title": "Take-home_Ex2",
    "section": "9.3 Final Dataframe",
    "text": "9.3 Final Dataframe\n\n\nCode\nn_distinct(factors_holder$hex_id)\n\n\n[1] 834\n\n\n\n\nCode\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 12\n$ hex_id                    &lt;fct&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, …\n$ propul_count_busstop      &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2,…\n$ propul_retails_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 5.00, 0.99, 0.99, 0.…\n$ propul_TrainStation_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_flowLine_count     &lt;dbl&gt; 15, 25, 20, 41, 78, 46, 20, 54, 120, 89, 35,…\n$ propul_est_pop.x          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop.y          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop            &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ hx_grid                   &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLY…\n$ att_hdb_sf_count          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ att_business_count        &lt;dbl&gt; 0.99, 5.00, 4.00, 1.00, 50.00, 27.00, 3.00, …\n$ att_schools_sf_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n\n\n\n\nCode\n# Convert hex_id in factors_holder to integer\nfactors_holder &lt;- factors_holder %&gt;%\n  mutate(hex_id = as.factor(hex_id))\n\n\n# Perform the left joins with matching data types\nfinal_df &lt;- left_join(FD1, factors_holder %&gt;% select(starts_with(\"att_\"), hex_id), by = c(\"O_HEX_ID\" = \"hex_id\"))\nfinal_df &lt;- left_join(final_df, factors_holder %&gt;% select(starts_with(\"propul_\"), hex_id), by = c(\"D_HEX_ID\" = \"hex_id\"))\n\n# Check the output\nglimpse(final_df)\n\n\nRows: 64,128\nColumns: 18\nGroups: O_HEX_ID [816]\n$ O_HEX_ID                  &lt;fct&gt; 23, 23, 23, 23, 23, 23, 23, 23, 23, 44, 44, …\n$ D_HEX_ID                  &lt;fct&gt; 67, 86, 88, 128, 132, 154, 155, 175, 176, 88…\n$ TRIPS                     &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31,…\n$ NoIntra                   &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31,…\n$ offset                    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ dist                      &lt;dbl&gt; 2704.163, 1299.038, 3436.932, 1984.313, 6139…\n$ att_hdb_sf_count          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ att_business_count        &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ att_schools_sf_count      &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ hx_grid.x                 &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLY…\n$ propul_count_busstop      &lt;int&gt; 4, 1, 4, 1, 6, 8, 5, 11, 5, 4, 1, 8, 5, 11, …\n$ propul_retails_count      &lt;dbl&gt; 5.00, 0.99, 5.00, 0.99, 3.00, 3.00, 0.99, 2.…\n$ propul_TrainStation_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 2.00, 1.…\n$ propul_flowLine_count     &lt;dbl&gt; 78, 20, 120, 22, 169, 190, 146, 156, 93, 120…\n$ propul_est_pop.x          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop.y          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ propul_est_pop            &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ hx_grid.y                 &lt;POLYGON [m]&gt; POLYGON ((4720.122 29946.2,..., POLY…\n\n\n\n\nCode\nwrite_rds(final_df, \"data/rds/final_df_the2.rds\")\n\n\n\n\nCode\nfinal_df &lt;- na.omit(final_df)\n\n\n\n\nCode\nhead(final_df,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nO_HEX_ID\nD_HEX_ID\nTRIPS\nNoIntra\noffset\ndist\natt_hdb_sf_count\natt_business_count\natt_schools_sf_count\nhx_grid.x\npropul_count_busstop\npropul_retails_count\npropul_TrainStation_count\npropul_flowLine_count\npropul_est_pop.x\npropul_est_pop.y\npropul_est_pop\nhx_grid.y\n\n\n\n\n23\n67\n3\n3\n1\n2704.163\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n4\n5.00\n0.99\n78\n0.99\n0.99\n0.99\nPOLYGON ((4720.122 29946.2,...\n\n\n23\n86\n1\n1\n1\n1299.038\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n1\n0.99\n0.99\n20\n0.99\n0.99\n0.99\nPOLYGON ((5095.122 27997.65...\n\n\n23\n88\n1\n1\n1\n3436.932\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n4\n5.00\n0.99\n120\n0.99\n0.99\n0.99\nPOLYGON ((5095.122 30595.72...\n\n\n23\n128\n15\n15\n1\n1984.313\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n1\n0.99\n0.99\n22\n0.99\n0.99\n0.99\nPOLYGON ((5845.122 27997.65...\n\n\n23\n132\n1\n1\n1\n6139.015\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n6\n3.00\n0.99\n169\n0.99\n0.99\n0.99\nPOLYGON ((5845.122 33193.8,...\n\n\n23\n154\n3\n3\n1\n6873.864\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n8\n3.00\n0.99\n190\n0.99\n0.99\n0.99\nPOLYGON ((6220.122 33843.32...\n\n\n23\n155\n1\n1\n1\n8112.490\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n5\n0.99\n2.00\n146\n0.99\n0.99\n0.99\nPOLYGON ((6220.122 35142.35...\n\n\n23\n175\n65\n65\n1\n7611.669\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n11\n2.00\n1.00\n156\n0.99\n0.99\n0.99\nPOLYGON ((6595.122 34492.84...\n\n\n23\n176\n1\n1\n1\n8842.370\n0.99\n0.99\n0.99\nPOLYGON ((3970.122 27348.13...\n5\n0.99\n1.00\n93\n0.99\n0.99\n0.99\nPOLYGON ((6595.122 35791.87...\n\n\n44\n88\n6\n6\n1\n2704.163\n0.99\n5.00\n0.99\nPOLYGON ((4345.122 27997.65...\n4\n5.00\n0.99\n120\n0.99\n0.99\n0.99\nPOLYGON ((5095.122 30595.72..."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#correlation-matrix",
    "href": "Take-home_Ex2/Take-home_Ex2.html#correlation-matrix",
    "title": "Take-home_Ex2",
    "section": "9.4 Correlation Matrix",
    "text": "9.4 Correlation Matrix\n\n\nCode\n# Select columns by indices\nnumeric_cols_indices &lt;- c(3, 6, 7, 8, 9, 11, 12, 13, 14, 17)\ncorrelation_df &lt;- final_df[, numeric_cols_indices]\n\n# Check the structure of the new dataframe\nstr(correlation_df)\n\n\ntibble [64,128 × 10] (S3: tbl_df/tbl/data.frame)\n $ TRIPS                    : num [1:64128] 3 1 1 15 1 3 1 65 1 6 ...\n $ dist                     : num [1:64128] 2704 1299 3437 1984 6139 ...\n $ att_hdb_sf_count         : num [1:64128] 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 ...\n $ att_business_count       : num [1:64128] 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 5 ...\n $ att_schools_sf_count     : num [1:64128] 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 ...\n $ propul_count_busstop     : int [1:64128] 4 1 4 1 6 8 5 11 5 4 ...\n $ propul_retails_count     : num [1:64128] 5 0.99 5 0.99 3 3 0.99 2 0.99 5 ...\n $ propul_TrainStation_count: num [1:64128] 0.99 0.99 0.99 0.99 0.99 0.99 2 1 1 0.99 ...\n $ propul_flowLine_count    : num [1:64128] 78 20 120 22 169 190 146 156 93 120 ...\n $ propul_est_pop           : num [1:64128] 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 0.99 ...\n\n\nCode\n# Calculate the correlation matrix, handling NA values\ncorrelation_matrix &lt;- cor(correlation_df, use = \"pairwise.complete.obs\")\n\n# Load the corrplot package if not already loaded\nif (!requireNamespace(\"corrplot\", quietly = TRUE)) {\n  install.packages(\"corrplot\")\n}\nlibrary(corrplot)\n\n# Generate the correlation plot\ncorrplot.mixed(correlation_matrix,\n               lower = \"color\",\n               upper = \"number\",\n               tl.pos = \"lt\",\n               tl.col = \"black\",\n               tl.cex = 0.7,\n               number.cex = 0.4)\n\n\n\n\n\nThere no indications of overly high correlations which could result in multicollinearity, albeit the correlations not showing very strong indications of being correlated."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#unconstrained",
    "href": "Take-home_Ex2/Take-home_Ex2.html#unconstrained",
    "title": "Take-home_Ex2",
    "section": "9.5 Unconstrained",
    "text": "9.5 Unconstrained\n\n\nCode\nfinal_df &lt;- final_df %&gt;%\n  mutate(\n    propul_count_busstop = ifelse(propul_count_busstop &lt;= 0, 0.01, propul_count_busstop),\n    dist = ifelse(dist &lt;= 0, 0.01, dist),\n    att_hdb_sf_count = ifelse(att_hdb_sf_count &lt;= 0, 0.01, att_hdb_sf_count),\n    att_business_count = ifelse(att_business_count &lt;= 0, 0.01, att_business_count),\n    att_schools_sf_count = ifelse(att_schools_sf_count &lt;= 0, 0.01, att_schools_sf_count),\n    propul_retails_count = ifelse(propul_retails_count &lt;= 0, 0.01, propul_retails_count),\n    propul_TrainStation_count = ifelse(propul_TrainStation_count &lt;= 0, 0.01, propul_TrainStation_count),\n    propul_flowLine_count = ifelse(propul_flowLine_count &lt;= 0, 0.01, propul_flowLine_count),\n    propul_est_pop = ifelse(propul_est_pop &lt;= 0, 0.01, propul_est_pop)\n  )\n\n# Fit the model\nuncSIM &lt;- glm(formula = TRIPS ~ \n                log(dist) +\n                log(att_hdb_sf_count) +\n                log(att_business_count) +\n                log(att_schools_sf_count) +\n                log(propul_retails_count) +\n                log(propul_TrainStation_count) +\n                log(propul_flowLine_count) +\n                log(propul_est_pop),\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(uncSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ log(dist) + log(att_hdb_sf_count) + log(att_business_count) + \n    log(att_schools_sf_count) + log(propul_retails_count) + log(propul_TrainStation_count) + \n    log(propul_flowLine_count) + log(propul_est_pop), family = poisson(link = \"log\"), \n    data = final_df, na.action = na.exclude)\n\nCoefficients:\n                                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.691e+01  2.463e-03  6864.8   &lt;2e-16 ***\nlog(dist)                      -1.412e+00  2.734e-04 -5164.5   &lt;2e-16 ***\nlog(att_hdb_sf_count)           3.857e-01  1.713e-04  2250.8   &lt;2e-16 ***\nlog(att_business_count)        -1.185e-01  2.195e-04  -540.0   &lt;2e-16 ***\nlog(att_schools_sf_count)      -7.585e-02  6.739e-04  -112.6   &lt;2e-16 ***\nlog(propul_retails_count)       2.503e-01  1.604e-04  1561.0   &lt;2e-16 ***\nlog(propul_TrainStation_count)  2.904e-01  6.223e-04   466.7   &lt;2e-16 ***\nlog(propul_flowLine_count)     -2.357e-01  2.709e-04  -870.2   &lt;2e-16 ***\nlog(propul_est_pop)             7.747e-03  5.499e-05   140.9   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 86464223  on 64127  degrees of freedom\nResidual deviance: 44328815  on 64119  degrees of freedom\nAIC: 44676041\n\nNumber of Fisher Scoring iterations: 7"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#origin-constrained",
    "href": "Take-home_Ex2/Take-home_Ex2.html#origin-constrained",
    "title": "Take-home_Ex2",
    "section": "9.6 Origin Constrained",
    "text": "9.6 Origin Constrained\n\n\nCode\nfinal_df &lt;- final_df %&gt;%\n  mutate(\n    propul_count_busstop = ifelse(propul_count_busstop &lt;= 0, 0.01, propul_count_busstop),\n    dist = ifelse(dist &lt;= 0, 0.01, dist),\n    att_hdb_sf_count = ifelse(att_hdb_sf_count &lt;= 0, 0.01, att_hdb_sf_count),\n    att_business_count = ifelse(att_business_count &lt;= 0, 0.01, att_business_count),\n    att_schools_sf_count = ifelse(att_schools_sf_count &lt;= 0, 0.01, att_schools_sf_count),\n    propul_retails_count = ifelse(propul_retails_count &lt;= 0, 0.01, propul_retails_count),\n    propul_TrainStation_count = ifelse(propul_TrainStation_count &lt;= 0, 0.01, propul_TrainStation_count),\n    propul_flowLine_count = ifelse(propul_flowLine_count &lt;= 0, 0.01, propul_flowLine_count),\n    propul_est_pop = ifelse(propul_est_pop &lt;= 0, 0.01, propul_est_pop)\n  )\n\n# Fit the model (corrected)\norcSIM &lt;- glm(formula = TRIPS ~ \n                log(dist) +\n                log(att_hdb_sf_count) +\n                log(att_business_count) +\n                log(att_schools_sf_count),\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(orcSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ log(dist) + log(att_hdb_sf_count) + log(att_business_count) + \n    log(att_schools_sf_count), family = poisson(link = \"log\"), \n    data = final_df, na.action = na.exclude)\n\nCoefficients:\n                            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)               16.1178560  0.0020854  7728.8   &lt;2e-16 ***\nlog(dist)                 -1.4035445  0.0002669 -5258.8   &lt;2e-16 ***\nlog(att_hdb_sf_count)      0.3985837  0.0001676  2378.9   &lt;2e-16 ***\nlog(att_business_count)   -0.0817220  0.0002161  -378.1   &lt;2e-16 ***\nlog(att_schools_sf_count) -0.0793276  0.0006725  -118.0   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 86464223  on 64127  degrees of freedom\nResidual deviance: 47907415  on 64123  degrees of freedom\nAIC: 48254633\n\nNumber of Fisher Scoring iterations: 6"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#destination-constrained",
    "href": "Take-home_Ex2/Take-home_Ex2.html#destination-constrained",
    "title": "Take-home_Ex2",
    "section": "9.7 Destination Constrained",
    "text": "9.7 Destination Constrained\n\n\nCode\nfinal_df &lt;- final_df %&gt;%\n  mutate(\n    propul_count_busstop = ifelse(propul_count_busstop &lt;= 0, 0.01, propul_count_busstop),\n    dist = ifelse(dist &lt;= 0, 0.01, dist),\n    att_hdb_sf_count = ifelse(att_hdb_sf_count &lt;= 0, 0.01, att_hdb_sf_count),\n    att_business_count = ifelse(att_business_count &lt;= 0, 0.01, att_business_count),\n    att_schools_sf_count = ifelse(att_schools_sf_count &lt;= 0, 0.01, att_schools_sf_count),\n    propul_retails_count = ifelse(propul_retails_count &lt;= 0, 0.01, propul_retails_count),\n    propul_TrainStation_count = ifelse(propul_TrainStation_count &lt;= 0, 0.01, propul_TrainStation_count),\n    propul_flowLine_count = ifelse(propul_flowLine_count &lt;= 0, 0.01, propul_flowLine_count),\n    propul_est_pop = ifelse(propul_est_pop &lt;= 0, 0.01, propul_est_pop)\n  )\n\n# Fit the model\ndecSIM &lt;- glm(formula = TRIPS ~ \n                log(dist) +\n                log(propul_retails_count) +\n                log(propul_TrainStation_count) +\n                log(propul_flowLine_count) +\n                log(propul_est_pop),\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(decSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ log(dist) + log(propul_retails_count) + \n    log(propul_TrainStation_count) + log(propul_flowLine_count) + \n    log(propul_est_pop), family = poisson(link = \"log\"), data = final_df, \n    na.action = na.exclude)\n\nCoefficients:\n                                 Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                     1.758e+01  2.319e-03  7581.8   &lt;2e-16 ***\nlog(dist)                      -1.410e+00  2.722e-04 -5182.0   &lt;2e-16 ***\nlog(propul_retails_count)       2.214e-01  1.620e-04  1366.8   &lt;2e-16 ***\nlog(propul_TrainStation_count)  2.754e-01  6.238e-04   441.6   &lt;2e-16 ***\nlog(propul_flowLine_count)     -2.331e-01  2.626e-04  -887.5   &lt;2e-16 ***\nlog(propul_est_pop)             5.099e-02  5.488e-05   929.2   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 86464223  on 64127  degrees of freedom\nResidual deviance: 52505987  on 64122  degrees of freedom\nAIC: 52853207\n\nNumber of Fisher Scoring iterations: 7"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#doubly-constrained",
    "href": "Take-home_Ex2/Take-home_Ex2.html#doubly-constrained",
    "title": "Take-home_Ex2",
    "section": "9.8 Doubly Constrained",
    "text": "9.8 Doubly Constrained\n\n\nCode\ndocSIM &lt;- glm(formula = TRIPS ~ \n                O_HEX_ID +\n                D_HEX_ID +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(docSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ O_HEX_ID + D_HEX_ID + log(dist), family = poisson(link = \"log\"), \n    data = final_df, na.action = na.exclude)\n\nCoefficients:\n               Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)  14.8812275  0.1165790   127.649  &lt; 2e-16 ***\nO_HEX_ID44   -0.5343403  0.1889084    -2.829 0.004676 ** \nO_HEX_ID46   -0.7468061  0.1525427    -4.896 9.79e-07 ***\nO_HEX_ID66   -1.7002220  0.1627570   -10.446  &lt; 2e-16 ***\nO_HEX_ID67    1.8161909  0.1090152    16.660  &lt; 2e-16 ***\nO_HEX_ID68   -1.2383184  0.1894119    -6.538 6.25e-11 ***\nO_HEX_ID86   -0.5996606  0.1378943    -4.349 1.37e-05 ***\nO_HEX_ID87    0.7105348  0.1311089     5.419 5.98e-08 ***\nO_HEX_ID88    2.4505916  0.1078629    22.719  &lt; 2e-16 ***\nO_HEX_ID89    0.5831270  0.1146080     5.088 3.62e-07 ***\nO_HEX_ID90    1.4950810  0.1608544     9.295  &lt; 2e-16 ***\nO_HEX_ID109  -0.5834952  0.1469376    -3.971 7.16e-05 ***\nO_HEX_ID110   0.5816519  0.1334146     4.360 1.30e-05 ***\nO_HEX_ID111   4.1267217  0.1073672    38.436  &lt; 2e-16 ***\nO_HEX_ID112   0.0123146  0.1296684     0.095 0.924339    \nO_HEX_ID128   3.0999620  0.1114159    27.823  &lt; 2e-16 ***\nO_HEX_ID129   1.4264780  0.4220012     3.380 0.000724 ***\nO_HEX_ID130   0.0993452  0.1240925     0.801 0.423378    \nO_HEX_ID131   0.9055137  0.1122316     8.068 7.13e-16 ***\nO_HEX_ID132   0.3306333  0.1186217     2.787 0.005315 ** \nO_HEX_ID133   1.2088837  0.1137933    10.624  &lt; 2e-16 ***\nO_HEX_ID134   4.1919692  0.1100398    38.095  &lt; 2e-16 ***\nO_HEX_ID150   4.1513334  0.1088874    38.125  &lt; 2e-16 ***\nO_HEX_ID151   0.7150930  0.1274255     5.612 2.00e-08 ***\nO_HEX_ID152   0.6220426  0.1374232     4.526 6.00e-06 ***\nO_HEX_ID153   1.5580195  0.1153942    13.502  &lt; 2e-16 ***\nO_HEX_ID154   4.2411286  0.1066720    39.759  &lt; 2e-16 ***\nO_HEX_ID155   1.2043022  0.1128027    10.676  &lt; 2e-16 ***\nO_HEX_ID156   2.1403457  0.1155145    18.529  &lt; 2e-16 ***\nO_HEX_ID172   0.5222340  0.1322420     3.949 7.85e-05 ***\nO_HEX_ID174   1.2135359  0.1176897    10.311  &lt; 2e-16 ***\nO_HEX_ID175   3.9089059  0.1070417    36.518  &lt; 2e-16 ***\nO_HEX_ID176   4.9945084  0.1065241    46.886  &lt; 2e-16 ***\nO_HEX_ID195   0.5268793  0.1301205     4.049 5.14e-05 ***\nO_HEX_ID196   1.1213676  0.1141967     9.820  &lt; 2e-16 ***\nO_HEX_ID197   0.3572587  0.1635568     2.184 0.028939 *  \nO_HEX_ID215   1.7046086  0.1370509    12.438  &lt; 2e-16 ***\nO_HEX_ID216   5.4391760  0.1067145    50.969  &lt; 2e-16 ***\nO_HEX_ID217   2.5159678  0.1087095    23.144  &lt; 2e-16 ***\nO_HEX_ID237   0.5512456  0.1833312     3.007 0.002640 ** \nO_HEX_ID238   1.0903802  0.1258617     8.663  &lt; 2e-16 ***\nO_HEX_ID239   0.5069106  0.1770884     2.862 0.004204 ** \nO_HEX_ID257   0.1783292  0.1239238     1.439 0.150144    \nO_HEX_ID258   2.0900783  0.1107282    18.876  &lt; 2e-16 ***\nO_HEX_ID259   1.4979641  0.1146670    13.064  &lt; 2e-16 ***\nO_HEX_ID278   1.2398614  0.1129970    10.973  &lt; 2e-16 ***\nO_HEX_ID279   0.7373119  0.1163776     6.336 2.37e-10 ***\nO_HEX_ID280   1.2536604  0.1174533    10.674  &lt; 2e-16 ***\nO_HEX_ID298  -2.2763963  0.2879785    -7.905 2.68e-15 ***\nO_HEX_ID299   1.1639815  0.1179338     9.870  &lt; 2e-16 ***\nO_HEX_ID300   4.1721966  0.1069463    39.012  &lt; 2e-16 ***\nO_HEX_ID320  -0.6086249  0.1252876    -4.858 1.19e-06 ***\nO_HEX_ID321   0.4818278  0.1335695     3.607 0.000309 ***\nO_HEX_ID322   2.2069640  0.1153107    19.139  &lt; 2e-16 ***\nO_HEX_ID340   1.7264840  0.1108120    15.580  &lt; 2e-16 ***\nO_HEX_ID341   0.1388682  0.1168860     1.188 0.234807    \nO_HEX_ID342   1.5615900  0.1136665    13.738  &lt; 2e-16 ***\nO_HEX_ID363   2.1897614  0.1142587    19.165  &lt; 2e-16 ***\nO_HEX_ID364   2.2279849  0.1102522    20.208  &lt; 2e-16 ***\nO_HEX_ID383   1.2340217  0.1112888    11.088  &lt; 2e-16 ***\nO_HEX_ID384   0.4407380  0.1186863     3.713 0.000204 ***\nO_HEX_ID385   1.5060130  0.1188796    12.668  &lt; 2e-16 ***\nO_HEX_ID404   2.2720734  0.1115041    20.377  &lt; 2e-16 ***\nO_HEX_ID405   0.7251592  0.1183069     6.129 8.82e-10 ***\nO_HEX_ID406   6.0889368  0.1065932    57.123  &lt; 2e-16 ***\nO_HEX_ID407   2.0991166  0.1155314    18.169  &lt; 2e-16 ***\nO_HEX_ID408   2.8023598  0.1090848    25.690  &lt; 2e-16 ***\nO_HEX_ID425  -0.8038160  0.1484633    -5.414 6.15e-08 ***\nO_HEX_ID426   1.4479253  0.1108170    13.066  &lt; 2e-16 ***\nO_HEX_ID427   0.8612478  0.1155988     7.450 9.31e-14 ***\nO_HEX_ID428   1.0006388  0.1343082     7.450 9.31e-14 ***\nO_HEX_ID429   2.2990667  0.1085162    21.186  &lt; 2e-16 ***\nO_HEX_ID446   0.9463818  0.1232538     7.678 1.61e-14 ***\nO_HEX_ID447   1.0092644  0.1143655     8.825  &lt; 2e-16 ***\nO_HEX_ID448   1.8306805  0.1105377    16.562  &lt; 2e-16 ***\nO_HEX_ID449   5.2026837  0.1068122    48.709  &lt; 2e-16 ***\nO_HEX_ID450   2.1187126  0.1083379    19.557  &lt; 2e-16 ***\nO_HEX_ID468   2.2803915  0.1108878    20.565  &lt; 2e-16 ***\nO_HEX_ID469   3.1820126  0.1077937    29.519  &lt; 2e-16 ***\nO_HEX_ID470   5.1455160  0.1067313    48.210  &lt; 2e-16 ***\nO_HEX_ID471   3.0606363  0.1079029    28.365  &lt; 2e-16 ***\nO_HEX_ID488   0.7920834  0.1219611     6.495 8.33e-11 ***\nO_HEX_ID489  -2.9145381  0.2971831    -9.807  &lt; 2e-16 ***\nO_HEX_ID490   3.7325591  0.1073267    34.778  &lt; 2e-16 ***\nO_HEX_ID491   4.2109130  0.1069054    39.389  &lt; 2e-16 ***\nO_HEX_ID493  -0.2535645  0.1760677    -1.440 0.149824    \nO_HEX_ID494   1.5374266  0.1234717    12.452  &lt; 2e-16 ***\nO_HEX_ID509   0.9953077  0.1117162     8.909  &lt; 2e-16 ***\nO_HEX_ID510   1.5209935  0.1098850    13.842  &lt; 2e-16 ***\nO_HEX_ID511   3.1651605  0.1071934    29.528  &lt; 2e-16 ***\nO_HEX_ID512   5.7505021  0.1066595    53.915  &lt; 2e-16 ***\nO_HEX_ID513   2.3698066  0.1094979    21.642  &lt; 2e-16 ***\nO_HEX_ID514   2.0427422  0.1147658    17.799  &lt; 2e-16 ***\nO_HEX_ID515   0.5757248  0.1962915     2.933 0.003357 ** \nO_HEX_ID530   0.1480564  0.1331670     1.112 0.266220    \nO_HEX_ID531   2.0858805  0.1087779    19.176  &lt; 2e-16 ***\nO_HEX_ID532   1.5268201  0.1097599    13.911  &lt; 2e-16 ***\nO_HEX_ID533   5.4859045  0.1066580    51.435  &lt; 2e-16 ***\nO_HEX_ID534   6.0605683  0.1066768    56.812  &lt; 2e-16 ***\nO_HEX_ID536   2.6839200  0.1103099    24.331  &lt; 2e-16 ***\nO_HEX_ID537   1.0695543  0.1795367     5.957 2.56e-09 ***\nO_HEX_ID538   0.9675320  0.2384357     4.058 4.95e-05 ***\nO_HEX_ID539   0.3722565  0.4231439     0.880 0.379000    \nO_HEX_ID551  -0.0881312  0.1202791    -0.733 0.463728    \nO_HEX_ID552   2.2985090  0.1134020    20.269  &lt; 2e-16 ***\nO_HEX_ID553   1.8410513  0.1083637    16.990  &lt; 2e-16 ***\nO_HEX_ID554   5.3717079  0.1066705    50.358  &lt; 2e-16 ***\nO_HEX_ID555   4.7442597  0.1068816    44.388  &lt; 2e-16 ***\nO_HEX_ID559   1.2307611  0.1559183     7.894 2.94e-15 ***\nO_HEX_ID560   3.5119007  0.1199560    29.277  &lt; 2e-16 ***\nO_HEX_ID572  -0.9648556  0.3083030    -3.130 0.001751 ** \nO_HEX_ID573   0.4236168  0.1152163     3.677 0.000236 ***\nO_HEX_ID574   1.8758115  0.1141202    16.437  &lt; 2e-16 ***\nO_HEX_ID575   6.5395047  0.1066314    61.328  &lt; 2e-16 ***\nO_HEX_ID576   5.0219527  0.1067365    47.050  &lt; 2e-16 ***\nO_HEX_ID578   0.6781597  0.1484050     4.570 4.89e-06 ***\nO_HEX_ID582   0.9479250  0.1486413     6.377 1.80e-10 ***\nO_HEX_ID583   0.8770262  0.2660548     3.296 0.000979 ***\nO_HEX_ID584   3.5261928  0.1219549    28.914  &lt; 2e-16 ***\nO_HEX_ID593   1.6072341  0.1172195    13.711  &lt; 2e-16 ***\nO_HEX_ID594   1.4585533  0.1101979    13.236  &lt; 2e-16 ***\nO_HEX_ID595   1.7726011  0.1084745    16.341  &lt; 2e-16 ***\nO_HEX_ID596   4.7726822  0.1067040    44.728  &lt; 2e-16 ***\nO_HEX_ID597   2.1338238  0.1217018    17.533  &lt; 2e-16 ***\nO_HEX_ID603   1.3281732  0.1549882     8.570  &lt; 2e-16 ***\nO_HEX_ID604   0.5447778  0.3342319     1.630 0.103114    \nO_HEX_ID615   0.2209246  0.1164195     1.898 0.057741 .  \nO_HEX_ID616   1.3995702  0.1108518    12.626  &lt; 2e-16 ***\nO_HEX_ID617   2.1921961  0.1082268    20.256  &lt; 2e-16 ***\nO_HEX_ID618   5.4672740  0.1066854    51.247  &lt; 2e-16 ***\nO_HEX_ID620   2.8013894  0.1106677    25.314  &lt; 2e-16 ***\nO_HEX_ID637   1.0591534  0.1150042     9.210  &lt; 2e-16 ***\nO_HEX_ID638   4.9061658  0.1067026    45.980  &lt; 2e-16 ***\nO_HEX_ID657   2.8538935  0.1079978    26.425  &lt; 2e-16 ***\nO_HEX_ID658   4.2679463  0.1068277    39.952  &lt; 2e-16 ***\nO_HEX_ID659   4.4683343  0.1067691    41.850  &lt; 2e-16 ***\nO_HEX_ID660   5.6496936  0.1066708    52.964  &lt; 2e-16 ***\nO_HEX_ID662   5.6850726  0.1069043    53.179  &lt; 2e-16 ***\nO_HEX_ID677   2.7797392  0.1091078    25.477  &lt; 2e-16 ***\nO_HEX_ID678   0.6851759  0.1156110     5.927 3.09e-09 ***\nO_HEX_ID679   5.4878015  0.1066847    51.439  &lt; 2e-16 ***\nO_HEX_ID680   5.7376329  0.1066823    53.782  &lt; 2e-16 ***\nO_HEX_ID681   4.4249350  0.1069913    41.358  &lt; 2e-16 ***\nO_HEX_ID699   2.3106423  0.1090559    21.188  &lt; 2e-16 ***\nO_HEX_ID700   4.4506045  0.1068075    41.669  &lt; 2e-16 ***\nO_HEX_ID701   4.3492827  0.1068154    40.718  &lt; 2e-16 ***\nO_HEX_ID702   5.4372228  0.1066796    50.968  &lt; 2e-16 ***\nO_HEX_ID704   2.5733596  0.1121326    22.949  &lt; 2e-16 ***\nO_HEX_ID722   2.3189943  0.1082422    21.424  &lt; 2e-16 ***\nO_HEX_ID725   1.7411148  0.1172412    14.851  &lt; 2e-16 ***\nO_HEX_ID741   2.7918397  0.1079566    25.861  &lt; 2e-16 ***\nO_HEX_ID743   2.9678431  0.1074164    27.629  &lt; 2e-16 ***\nO_HEX_ID744   5.0054957  0.1067226    46.902  &lt; 2e-16 ***\nO_HEX_ID761   2.2367524  0.1101484    20.307  &lt; 2e-16 ***\nO_HEX_ID762   4.2612460  0.1068957    39.864  &lt; 2e-16 ***\nO_HEX_ID763   1.6569343  0.1098952    15.077  &lt; 2e-16 ***\nO_HEX_ID764   5.5670566  0.1066766    52.186  &lt; 2e-16 ***\nO_HEX_ID765   4.5025027  0.1069716    42.091  &lt; 2e-16 ***\nO_HEX_ID767   6.6140113  0.1066996    61.987  &lt; 2e-16 ***\nO_HEX_ID772   1.5156873  0.1322918    11.457  &lt; 2e-16 ***\nO_HEX_ID784   1.4400713  0.1100475    13.086  &lt; 2e-16 ***\nO_HEX_ID785   4.6420152  0.1067161    43.499  &lt; 2e-16 ***\nO_HEX_ID786   4.3762765  0.1068068    40.974  &lt; 2e-16 ***\nO_HEX_ID787   5.0000329  0.1068920    46.776  &lt; 2e-16 ***\nO_HEX_ID788   5.8376096  0.1067786    54.670  &lt; 2e-16 ***\nO_HEX_ID789   4.2455699  0.1072119    39.600  &lt; 2e-16 ***\nO_HEX_ID803   1.0584978  0.1184757     8.934  &lt; 2e-16 ***\nO_HEX_ID804   5.2503877  0.1067139    49.201  &lt; 2e-16 ***\nO_HEX_ID805   5.2825228  0.1066800    49.517  &lt; 2e-16 ***\nO_HEX_ID806   4.9590526  0.1067153    46.470  &lt; 2e-16 ***\nO_HEX_ID807   5.9002776  0.1067229    55.286  &lt; 2e-16 ***\nO_HEX_ID808   4.2290419  0.1072516    39.431  &lt; 2e-16 ***\nO_HEX_ID809   5.9894393  0.1066897    56.139  &lt; 2e-16 ***\nO_HEX_ID810   5.2314732  0.1068090    48.980  &lt; 2e-16 ***\nO_HEX_ID814   3.3087619  0.1104765    29.950  &lt; 2e-16 ***\nO_HEX_ID819   4.4570111  0.1084276    41.106  &lt; 2e-16 ***\nO_HEX_ID824   1.5466093  0.1132926    13.651  &lt; 2e-16 ***\nO_HEX_ID826   2.9141466  0.1071509    27.197  &lt; 2e-16 ***\nO_HEX_ID827   4.9280760  0.1067000    46.186  &lt; 2e-16 ***\nO_HEX_ID828   5.3226169  0.1066925    49.887  &lt; 2e-16 ***\nO_HEX_ID829   5.3932712  0.1067315    50.531  &lt; 2e-16 ***\nO_HEX_ID830   5.6713620  0.1067679    53.119  &lt; 2e-16 ***\nO_HEX_ID831   6.4977149  0.1066711    60.914  &lt; 2e-16 ***\nO_HEX_ID832   5.6945180  0.1068499    53.295  &lt; 2e-16 ***\nO_HEX_ID835   2.7235493  0.1110941    24.516  &lt; 2e-16 ***\nO_HEX_ID844   0.0765164  0.1369141     0.559 0.576255    \nO_HEX_ID846   4.3576645  0.1067674    40.815  &lt; 2e-16 ***\nO_HEX_ID847   3.4865164  0.1070283    32.576  &lt; 2e-16 ***\nO_HEX_ID848   4.6967284  0.1067399    44.002  &lt; 2e-16 ***\nO_HEX_ID849   3.9202684  0.1069364    36.660  &lt; 2e-16 ***\nO_HEX_ID850   4.8725265  0.1067802    45.631  &lt; 2e-16 ***\nO_HEX_ID851   5.4527816  0.1067135    51.097  &lt; 2e-16 ***\nO_HEX_ID852   4.9473561  0.1068343    46.309  &lt; 2e-16 ***\nO_HEX_ID853   6.9312641  0.1067292    64.943  &lt; 2e-16 ***\nO_HEX_ID854   3.3221288  0.1096518    30.297  &lt; 2e-16 ***\nO_HEX_ID855   1.8284700  0.1161545    15.742  &lt; 2e-16 ***\nO_HEX_ID856   3.8621352  0.1083064    35.659  &lt; 2e-16 ***\nO_HEX_ID866   2.2211163  0.1105055    20.100  &lt; 2e-16 ***\nO_HEX_ID867   3.2062765  0.1073023    29.881  &lt; 2e-16 ***\nO_HEX_ID868   2.5145023  0.1081650    23.247  &lt; 2e-16 ***\nO_HEX_ID869   5.0426352  0.1068087    47.212  &lt; 2e-16 ***\nO_HEX_ID870   5.8710985  0.1066667    55.042  &lt; 2e-16 ***\nO_HEX_ID871   5.7620576  0.1068057    53.949  &lt; 2e-16 ***\nO_HEX_ID872   3.6879103  0.1072499    34.386  &lt; 2e-16 ***\nO_HEX_ID873   3.8880426  0.1071454    36.288  &lt; 2e-16 ***\nO_HEX_ID874   4.1060992  0.1069732    38.384  &lt; 2e-16 ***\nO_HEX_ID875   1.1517635  0.1259150     9.147  &lt; 2e-16 ***\nO_HEX_ID876   1.9995483  0.1121497    17.829  &lt; 2e-16 ***\nO_HEX_ID877   1.7369726  0.1143538    15.189  &lt; 2e-16 ***\nO_HEX_ID887   2.5710724  0.1075501    23.906  &lt; 2e-16 ***\nO_HEX_ID888   4.1315715  0.1068592    38.664  &lt; 2e-16 ***\nO_HEX_ID889   0.9174940  0.1121420     8.182 2.80e-16 ***\nO_HEX_ID890   5.2995932  0.1066916    49.672  &lt; 2e-16 ***\nO_HEX_ID891   4.0068671  0.1072920    37.345  &lt; 2e-16 ***\nO_HEX_ID893   5.5246444  0.1067038    51.776  &lt; 2e-16 ***\nO_HEX_ID894   3.6416120  0.1072038    33.969  &lt; 2e-16 ***\nO_HEX_ID895   3.1753654  0.1078312    29.448  &lt; 2e-16 ***\nO_HEX_ID896   2.0625026  0.1105189    18.662  &lt; 2e-16 ***\nO_HEX_ID897   0.1711586  0.1282804     1.334 0.182121    \nO_HEX_ID898   2.5893958  0.1107241    23.386  &lt; 2e-16 ***\nO_HEX_ID908   4.0796127  0.1073455    38.005  &lt; 2e-16 ***\nO_HEX_ID909   4.1238833  0.1067782    38.621  &lt; 2e-16 ***\nO_HEX_ID910   2.1375868  0.1080267    19.788  &lt; 2e-16 ***\nO_HEX_ID911   3.4915720  0.1070144    32.627  &lt; 2e-16 ***\nO_HEX_ID912   5.0458809  0.1067148    47.284  &lt; 2e-16 ***\nO_HEX_ID915   5.3576601  0.1067209    50.203  &lt; 2e-16 ***\nO_HEX_ID917   4.8925972  0.1068983    45.769  &lt; 2e-16 ***\nO_HEX_ID918   1.3749783  0.1127959    12.190  &lt; 2e-16 ***\nO_HEX_ID919   3.9916193  0.1070896    37.274  &lt; 2e-16 ***\nO_HEX_ID928   2.9538746  0.1075458    27.466  &lt; 2e-16 ***\nO_HEX_ID929   4.4542088  0.1067253    41.735  &lt; 2e-16 ***\nO_HEX_ID930   5.3428004  0.1066684    50.088  &lt; 2e-16 ***\nO_HEX_ID931   2.3444977  0.1080284    21.703  &lt; 2e-16 ***\nO_HEX_ID932   2.6865392  0.1082726    24.813  &lt; 2e-16 ***\nO_HEX_ID933   4.9374616  0.1067807    46.239  &lt; 2e-16 ***\nO_HEX_ID934   2.2566678  0.1085911    20.781  &lt; 2e-16 ***\nO_HEX_ID935   6.2299027  0.1066689    58.404  &lt; 2e-16 ***\nO_HEX_ID938  -1.4154364  0.2718265    -5.207 1.92e-07 ***\nO_HEX_ID939   6.3031987  0.1067077    59.070  &lt; 2e-16 ***\nO_HEX_ID940   0.8109066  0.1231013     6.587 4.48e-11 ***\nO_HEX_ID949   2.8104205  0.1074607    26.153  &lt; 2e-16 ***\nO_HEX_ID950   4.8985697  0.1067441    45.891  &lt; 2e-16 ***\nO_HEX_ID951   5.7399467  0.1066592    53.816  &lt; 2e-16 ***\nO_HEX_ID952   2.5543495  0.1086640    23.507  &lt; 2e-16 ***\nO_HEX_ID953   3.7111818  0.1070607    34.664  &lt; 2e-16 ***\nO_HEX_ID954   2.5844696  0.1080021    23.930  &lt; 2e-16 ***\nO_HEX_ID955   4.8258890  0.1067786    45.195  &lt; 2e-16 ***\nO_HEX_ID956   3.1931028  0.1073081    29.756  &lt; 2e-16 ***\nO_HEX_ID957   5.3820549  0.1067917    50.398  &lt; 2e-16 ***\nO_HEX_ID959   1.4248951  0.1180341    12.072  &lt; 2e-16 ***\nO_HEX_ID961   1.3498599  0.1115874    12.097  &lt; 2e-16 ***\nO_HEX_ID962   6.6446836  0.1068066    62.212  &lt; 2e-16 ***\nO_HEX_ID970   3.2949132  0.1069305    30.814  &lt; 2e-16 ***\nO_HEX_ID971   4.6198587  0.1066955    43.299  &lt; 2e-16 ***\nO_HEX_ID972   4.5534349  0.1067322    42.662  &lt; 2e-16 ***\nO_HEX_ID974   4.2291317  0.1068921    39.564  &lt; 2e-16 ***\nO_HEX_ID975   3.8565078  0.1069978    36.043  &lt; 2e-16 ***\nO_HEX_ID976   2.5423832  0.1080566    23.528  &lt; 2e-16 ***\nO_HEX_ID977   5.7103515  0.1066945    53.521  &lt; 2e-16 ***\nO_HEX_ID978   5.5848225  0.1068832    52.252  &lt; 2e-16 ***\nO_HEX_ID982   2.8375618  0.1076585    26.357  &lt; 2e-16 ***\nO_HEX_ID983   7.4115051  0.1067079    69.456  &lt; 2e-16 ***\nO_HEX_ID984   5.8177893  0.1073049    54.217  &lt; 2e-16 ***\nO_HEX_ID991   3.4020888  0.1070071    31.793  &lt; 2e-16 ***\nO_HEX_ID992   3.5816352  0.1068568    33.518  &lt; 2e-16 ***\nO_HEX_ID993   3.3658241  0.1069047    31.484  &lt; 2e-16 ***\nO_HEX_ID994   2.9463963  0.1072303    27.477  &lt; 2e-16 ***\nO_HEX_ID995   4.4682700  0.1067774    41.847  &lt; 2e-16 ***\nO_HEX_ID996   4.1181048  0.1069171    38.517  &lt; 2e-16 ***\nO_HEX_ID997   2.7952188  0.1105783    25.278  &lt; 2e-16 ***\nO_HEX_ID998   5.8336282  0.1067005    54.673  &lt; 2e-16 ***\nO_HEX_ID999   5.8612977  0.1067844    54.889  &lt; 2e-16 ***\nO_HEX_ID1001  2.7059303  0.1098782    24.627  &lt; 2e-16 ***\nO_HEX_ID1003  5.3830993  0.1067215    50.441  &lt; 2e-16 ***\nO_HEX_ID1004  6.3091400  0.1066867    59.137  &lt; 2e-16 ***\nO_HEX_ID1011  1.3078267  0.1114916    11.730  &lt; 2e-16 ***\nO_HEX_ID1012  1.3418016  0.1120092    11.979  &lt; 2e-16 ***\nO_HEX_ID1013  2.1944992  0.1078357    20.350  &lt; 2e-16 ***\nO_HEX_ID1014  2.9610045  0.1072121    27.618  &lt; 2e-16 ***\nO_HEX_ID1015  2.1338873  0.1082133    19.719  &lt; 2e-16 ***\nO_HEX_ID1016  4.1060015  0.1068945    38.412  &lt; 2e-16 ***\nO_HEX_ID1018  4.6962809  0.1071082    43.846  &lt; 2e-16 ***\nO_HEX_ID1019  6.3079047  0.1067414    59.095  &lt; 2e-16 ***\nO_HEX_ID1023  4.3777445  0.1070873    40.880  &lt; 2e-16 ***\nO_HEX_ID1024  5.5009260  0.1067368    51.537  &lt; 2e-16 ***\nO_HEX_ID1025  0.5612908  0.1229741     4.564 5.01e-06 ***\nO_HEX_ID1033  2.6797361  0.1072765    24.980  &lt; 2e-16 ***\nO_HEX_ID1034  3.7121195  0.1068754    34.733  &lt; 2e-16 ***\nO_HEX_ID1035  4.3398087  0.1067763    40.644  &lt; 2e-16 ***\nO_HEX_ID1036  2.4653786  0.1078468    22.860  &lt; 2e-16 ***\nO_HEX_ID1037  3.7065325  0.1068837    34.678  &lt; 2e-16 ***\nO_HEX_ID1043  2.6874557  0.1098551    24.464  &lt; 2e-16 ***\nO_HEX_ID1045  5.0687897  0.1067340    47.490  &lt; 2e-16 ***\nO_HEX_ID1046  5.0152538  0.1067618    46.976  &lt; 2e-16 ***\nO_HEX_ID1053  4.2388803  0.1067877    39.694  &lt; 2e-16 ***\nO_HEX_ID1054  3.1928287  0.1069400    29.856  &lt; 2e-16 ***\nO_HEX_ID1055  4.2525355  0.1067603    39.833  &lt; 2e-16 ***\nO_HEX_ID1056  3.3334626  0.1070539    31.138  &lt; 2e-16 ***\nO_HEX_ID1064  0.1477963  0.4597625     0.321 0.747860    \nO_HEX_ID1066  4.8866023  0.1067626    45.771  &lt; 2e-16 ***\nO_HEX_ID1067  4.9728270  0.1068593    46.536  &lt; 2e-16 ***\nO_HEX_ID1074  3.5745274  0.1069095    33.435  &lt; 2e-16 ***\nO_HEX_ID1075  2.8256720  0.1071649    26.368  &lt; 2e-16 ***\nO_HEX_ID1076  2.9351168  0.1070087    27.429  &lt; 2e-16 ***\nO_HEX_ID1077  3.1733488  0.1071474    29.617  &lt; 2e-16 ***\nO_HEX_ID1079  4.5627143  0.1067764    42.731  &lt; 2e-16 ***\nO_HEX_ID1085 -1.3122046  0.1862302    -7.046 1.84e-12 ***\nO_HEX_ID1087  4.7230088  0.1068068    44.220  &lt; 2e-16 ***\nO_HEX_ID1088  3.0820667  0.1073620    28.707  &lt; 2e-16 ***\nO_HEX_ID1094  1.6995468  0.1156095    14.701  &lt; 2e-16 ***\nO_HEX_ID1095  1.0866592  0.1131574     9.603  &lt; 2e-16 ***\nO_HEX_ID1096  2.9883271  0.1086556    27.503  &lt; 2e-16 ***\nO_HEX_ID1097  4.9596666  0.1066931    46.485  &lt; 2e-16 ***\nO_HEX_ID1098  2.6634811  0.1082215    24.611  &lt; 2e-16 ***\nO_HEX_ID1099  4.0637737  0.1068462    38.034  &lt; 2e-16 ***\nO_HEX_ID1105  1.7421393  0.1244423    14.000  &lt; 2e-16 ***\nO_HEX_ID1106  0.1952932  0.1457078     1.340 0.180145    \nO_HEX_ID1107  2.4454894  0.1108480    22.062  &lt; 2e-16 ***\nO_HEX_ID1108  6.6442042  0.1066681    62.289  &lt; 2e-16 ***\nO_HEX_ID1109  3.6396211  0.1071617    33.964  &lt; 2e-16 ***\nO_HEX_ID1116  3.3274810  0.1069858    31.102  &lt; 2e-16 ***\nO_HEX_ID1117  1.8496703  0.1084771    17.051  &lt; 2e-16 ***\nO_HEX_ID1118  2.0463307  0.1085939    18.844  &lt; 2e-16 ***\nO_HEX_ID1119  3.2296299  0.1071188    30.150  &lt; 2e-16 ***\nO_HEX_ID1120  3.2358306  0.1074475    30.115  &lt; 2e-16 ***\nO_HEX_ID1129  5.0753726  0.1067572    47.541  &lt; 2e-16 ***\nO_HEX_ID1130  5.1474380  0.1067176    48.234  &lt; 2e-16 ***\nO_HEX_ID1131  4.0106384  0.1071782    37.420  &lt; 2e-16 ***\nO_HEX_ID1136  2.2907284  0.1077005    21.269  &lt; 2e-16 ***\nO_HEX_ID1138  1.4375057  0.1115846    12.883  &lt; 2e-16 ***\nO_HEX_ID1139  4.1219984  0.1067598    38.610  &lt; 2e-16 ***\nO_HEX_ID1141  4.0470908  0.1068457    37.878  &lt; 2e-16 ***\nO_HEX_ID1148  1.3220994  0.1210904    10.918  &lt; 2e-16 ***\nO_HEX_ID1149  3.0654506  0.1082087    28.329  &lt; 2e-16 ***\nO_HEX_ID1150  5.3344969  0.1067064    49.992  &lt; 2e-16 ***\nO_HEX_ID1151  4.2738562  0.1068535    39.997  &lt; 2e-16 ***\nO_HEX_ID1158  2.4640833  0.1072481    22.976  &lt; 2e-16 ***\nO_HEX_ID1159  3.9063123  0.1067906    36.579  &lt; 2e-16 ***\nO_HEX_ID1160  4.9547537  0.1066975    46.437  &lt; 2e-16 ***\nO_HEX_ID1171  5.9046765  0.1067210    55.328  &lt; 2e-16 ***\nO_HEX_ID1172  5.7744984  0.1067138    54.112  &lt; 2e-16 ***\nO_HEX_ID1173  3.0040671  0.1074567    27.956  &lt; 2e-16 ***\nO_HEX_ID1174 -1.2679749  0.2972115    -4.266 1.99e-05 ***\nO_HEX_ID1178  2.6985926  0.1071867    25.177  &lt; 2e-16 ***\nO_HEX_ID1179  3.4137188  0.1068611    31.945  &lt; 2e-16 ***\nO_HEX_ID1180  4.4575719  0.1067208    41.769  &lt; 2e-16 ***\nO_HEX_ID1181  3.7745179  0.1068393    35.329  &lt; 2e-16 ***\nO_HEX_ID1183  2.8221854  0.1075072    26.251  &lt; 2e-16 ***\nO_HEX_ID1190  1.9317498  0.1179682    16.375  &lt; 2e-16 ***\nO_HEX_ID1192  4.6193414  0.1068496    43.232  &lt; 2e-16 ***\nO_HEX_ID1193  4.6034262  0.1067884    43.108  &lt; 2e-16 ***\nO_HEX_ID1194  2.8967775  0.1076634    26.906  &lt; 2e-16 ***\nO_HEX_ID1200  3.4620457  0.1068559    32.399  &lt; 2e-16 ***\nO_HEX_ID1201  3.3240518  0.1068801    31.101  &lt; 2e-16 ***\nO_HEX_ID1203  4.2265320  0.1068029    39.573  &lt; 2e-16 ***\nO_HEX_ID1204  3.8366477  0.1068824    35.896  &lt; 2e-16 ***\nO_HEX_ID1211  1.3251657  0.1420190     9.331  &lt; 2e-16 ***\nO_HEX_ID1214  5.3596815  0.1067299    50.217  &lt; 2e-16 ***\nO_HEX_ID1215  2.0372698  0.1137605    17.908  &lt; 2e-16 ***\nO_HEX_ID1216  0.9510042  0.1149777     8.271  &lt; 2e-16 ***\nO_HEX_ID1220  4.4837874  0.1067158    42.016  &lt; 2e-16 ***\nO_HEX_ID1221  4.1434520  0.1067345    38.820  &lt; 2e-16 ***\nO_HEX_ID1222  3.7564382  0.1071420    35.060  &lt; 2e-16 ***\nO_HEX_ID1223  2.1685565  0.1080204    20.075  &lt; 2e-16 ***\nO_HEX_ID1224  2.9833631  0.1072276    27.823  &lt; 2e-16 ***\nO_HEX_ID1231 -0.5149724  0.1847107    -2.788 0.005304 ** \nO_HEX_ID1232  0.9471085  0.1562205     6.063 1.34e-09 ***\nO_HEX_ID1235  2.8954825  0.1076212    26.904  &lt; 2e-16 ***\nO_HEX_ID1236  2.7884782  0.1077301    25.884  &lt; 2e-16 ***\nO_HEX_ID1241  2.7543920  0.1071403    25.708  &lt; 2e-16 ***\nO_HEX_ID1242  3.3138115  0.1068656    31.009  &lt; 2e-16 ***\nO_HEX_ID1243  3.9691219  0.1067528    37.181  &lt; 2e-16 ***\nO_HEX_ID1246  3.2832575  0.1070509    30.670  &lt; 2e-16 ***\nO_HEX_ID1256  4.2524882  0.1069375    39.766  &lt; 2e-16 ***\nO_HEX_ID1257  5.1687169  0.1067929    48.399  &lt; 2e-16 ***\nO_HEX_ID1258  3.1484118  0.1077511    29.219  &lt; 2e-16 ***\nO_HEX_ID1262  3.0719871  0.1069819    28.715  &lt; 2e-16 ***\nO_HEX_ID1263  3.6574530  0.1067722    34.255  &lt; 2e-16 ***\nO_HEX_ID1264  2.6716767  0.1073727    24.882  &lt; 2e-16 ***\nO_HEX_ID1265  2.4630067  0.1076655    22.876  &lt; 2e-16 ***\nO_HEX_ID1266  3.7223498  0.1069610    34.801  &lt; 2e-16 ***\nO_HEX_ID1267  1.9254844  0.1104174    17.438  &lt; 2e-16 ***\nO_HEX_ID1272 -0.7896223  0.1833160    -4.307 1.65e-05 ***\nO_HEX_ID1273  3.7632946  0.1073835    35.045  &lt; 2e-16 ***\nO_HEX_ID1277  5.3370163  0.1067283    50.006  &lt; 2e-16 ***\nO_HEX_ID1278  2.7794850  0.1076239    25.826  &lt; 2e-16 ***\nO_HEX_ID1283  4.9341762  0.1067035    46.242  &lt; 2e-16 ***\nO_HEX_ID1284  4.0779574  0.1067485    38.202  &lt; 2e-16 ***\nO_HEX_ID1285  4.7887447  0.1066887    44.885  &lt; 2e-16 ***\nO_HEX_ID1286  3.0810999  0.1071342    28.759  &lt; 2e-16 ***\nO_HEX_ID1289  1.4017235  0.1162144    12.062  &lt; 2e-16 ***\nO_HEX_ID1293  0.3802144  0.1346899     2.823 0.004759 ** \nO_HEX_ID1294  5.2273829  0.1068337    48.930  &lt; 2e-16 ***\nO_HEX_ID1295  2.6470087  0.1088552    24.317  &lt; 2e-16 ***\nO_HEX_ID1298  4.3222164  0.1068909    40.436  &lt; 2e-16 ***\nO_HEX_ID1299  4.7176428  0.1068406    44.156  &lt; 2e-16 ***\nO_HEX_ID1304  4.6787727  0.1067103    43.846  &lt; 2e-16 ***\nO_HEX_ID1305  4.0932829  0.1067197    38.355  &lt; 2e-16 ***\nO_HEX_ID1307  0.5798258  0.1135503     5.106 3.28e-07 ***\nO_HEX_ID1308  3.9420612  0.1068292    36.901  &lt; 2e-16 ***\nO_HEX_ID1310 -0.3839122  0.2064611    -1.859 0.062958 .  \nO_HEX_ID1316  1.6932769  0.1123836    15.067  &lt; 2e-16 ***\nO_HEX_ID1317  3.3399635  0.1073102    31.124  &lt; 2e-16 ***\nO_HEX_ID1318  2.6948986  0.1078659    24.984  &lt; 2e-16 ***\nO_HEX_ID1319  5.6108952  0.1067197    52.576  &lt; 2e-16 ***\nO_HEX_ID1320  4.0886974  0.1070756    38.185  &lt; 2e-16 ***\nO_HEX_ID1325  2.3155374  0.1074203    21.556  &lt; 2e-16 ***\nO_HEX_ID1326  4.2683277  0.1067168    39.997  &lt; 2e-16 ***\nO_HEX_ID1327  4.0620078  0.1067381    38.056  &lt; 2e-16 ***\nO_HEX_ID1328  2.7788025  0.1070805    25.951  &lt; 2e-16 ***\nO_HEX_ID1329  3.0719887  0.1072815    28.635  &lt; 2e-16 ***\nO_HEX_ID1330  3.8234236  0.1069742    35.742  &lt; 2e-16 ***\nO_HEX_ID1331 -1.2860087  0.5112876    -2.515 0.011895 *  \nO_HEX_ID1333  3.3043308  0.1073589    30.778  &lt; 2e-16 ***\nO_HEX_ID1334  3.5547391  0.1072821    33.135  &lt; 2e-16 ***\nO_HEX_ID1335  3.1577307  0.1080269    29.231  &lt; 2e-16 ***\nO_HEX_ID1336  1.3224263  0.1366548     9.677  &lt; 2e-16 ***\nO_HEX_ID1337  0.8875769  0.1180646     7.518 5.57e-14 ***\nO_HEX_ID1338 -0.5149106  0.1430636    -3.599 0.000319 ***\nO_HEX_ID1339  5.5279176  0.1067106    51.803  &lt; 2e-16 ***\nO_HEX_ID1340  3.8228111  0.1070578    35.708  &lt; 2e-16 ***\nO_HEX_ID1341 -0.1199417  0.2718063    -0.441 0.659013    \nO_HEX_ID1346  3.9317495  0.1068328    36.803  &lt; 2e-16 ***\nO_HEX_ID1347  4.9351160  0.1066913    46.256  &lt; 2e-16 ***\nO_HEX_ID1348  3.3357508  0.1068337    31.224  &lt; 2e-16 ***\nO_HEX_ID1349  3.2346018  0.1069642    30.240  &lt; 2e-16 ***\nO_HEX_ID1350  3.3733787  0.1072418    31.456  &lt; 2e-16 ***\nO_HEX_ID1353  3.2722030  0.1071363    30.542  &lt; 2e-16 ***\nO_HEX_ID1354  3.0674163  0.1074235    28.554  &lt; 2e-16 ***\nO_HEX_ID1355  3.8064027  0.1070132    35.569  &lt; 2e-16 ***\nO_HEX_ID1357  2.9766835  0.1084509    27.447  &lt; 2e-16 ***\nO_HEX_ID1358  4.2221732  0.1069100    39.493  &lt; 2e-16 ***\nO_HEX_ID1359  4.5183473  0.1067825    42.314  &lt; 2e-16 ***\nO_HEX_ID1360  4.5583612  0.1067933    42.684  &lt; 2e-16 ***\nO_HEX_ID1361  5.7043452  0.1067329    53.445  &lt; 2e-16 ***\nO_HEX_ID1362  1.9652241  0.1159130    16.954  &lt; 2e-16 ***\nO_HEX_ID1368  2.7576672  0.1070160    25.769  &lt; 2e-16 ***\nO_HEX_ID1369  2.5537338  0.1070424    23.857  &lt; 2e-16 ***\nO_HEX_ID1370  3.7864013  0.1067560    35.468  &lt; 2e-16 ***\nO_HEX_ID1371  3.1406619  0.1071486    29.311  &lt; 2e-16 ***\nO_HEX_ID1372  2.5350473  0.1073939    23.605  &lt; 2e-16 ***\nO_HEX_ID1373  0.7814081  0.1182544     6.608 3.90e-11 ***\nO_HEX_ID1374  2.6790173  0.1073938    24.946  &lt; 2e-16 ***\nO_HEX_ID1375  4.2675405  0.1069459    39.904  &lt; 2e-16 ***\nO_HEX_ID1376  3.6491997  0.1074544    33.960  &lt; 2e-16 ***\nO_HEX_ID1379  1.9061923  0.1121495    16.997  &lt; 2e-16 ***\nO_HEX_ID1380  5.9316899  0.1066859    55.600  &lt; 2e-16 ***\nO_HEX_ID1381  5.5173672  0.1067127    51.703  &lt; 2e-16 ***\nO_HEX_ID1382  4.9262323  0.1068462    46.106  &lt; 2e-16 ***\nO_HEX_ID1383  2.4244047  0.1096955    22.101  &lt; 2e-16 ***\nO_HEX_ID1388  3.3656956  0.1068590    31.497  &lt; 2e-16 ***\nO_HEX_ID1389  2.1746402  0.1072095    20.284  &lt; 2e-16 ***\nO_HEX_ID1390  3.3263435  0.1068490    31.131  &lt; 2e-16 ***\nO_HEX_ID1391  3.1104717  0.1069819    29.075  &lt; 2e-16 ***\nO_HEX_ID1392  2.7144959  0.1081443    25.101  &lt; 2e-16 ***\nO_HEX_ID1393  1.8819606  0.1079094    17.440  &lt; 2e-16 ***\nO_HEX_ID1394  3.4391967  0.1069314    32.163  &lt; 2e-16 ***\nO_HEX_ID1395  3.5376865  0.1069227    33.086  &lt; 2e-16 ***\nO_HEX_ID1396  4.6235865  0.1067650    43.306  &lt; 2e-16 ***\nO_HEX_ID1397  4.6721858  0.1067750    43.757  &lt; 2e-16 ***\nO_HEX_ID1398  3.5957517  0.1072471    33.528  &lt; 2e-16 ***\nO_HEX_ID1400  4.6868051  0.1068656    43.857  &lt; 2e-16 ***\nO_HEX_ID1401  5.0658012  0.1067189    47.469  &lt; 2e-16 ***\nO_HEX_ID1402  5.1215467  0.1067395    47.982  &lt; 2e-16 ***\nO_HEX_ID1404  5.1688171  0.1078750    47.915  &lt; 2e-16 ***\nO_HEX_ID1410  2.9136069  0.1069177    27.251  &lt; 2e-16 ***\nO_HEX_ID1411  2.8686629  0.1069581    26.820  &lt; 2e-16 ***\nO_HEX_ID1412  3.2307439  0.1068329    30.241  &lt; 2e-16 ***\nO_HEX_ID1413  4.1524273  0.1067508    38.898  &lt; 2e-16 ***\nO_HEX_ID1414  3.4444880  0.1068342    32.241  &lt; 2e-16 ***\nO_HEX_ID1415  2.9845245  0.1070638    27.876  &lt; 2e-16 ***\nO_HEX_ID1416  3.5423078  0.1068971    33.138  &lt; 2e-16 ***\nO_HEX_ID1417  3.8274374  0.1068469    35.822  &lt; 2e-16 ***\nO_HEX_ID1418  4.5770746  0.1067552    42.874  &lt; 2e-16 ***\nO_HEX_ID1419  4.0709945  0.1068551    38.098  &lt; 2e-16 ***\nO_HEX_ID1422  5.1148094  0.1067726    47.904  &lt; 2e-16 ***\nO_HEX_ID1423  6.0225801  0.1067048    56.442  &lt; 2e-16 ***\nO_HEX_ID1430  3.6564267  0.1068161    34.231  &lt; 2e-16 ***\nO_HEX_ID1431  3.7106034  0.1067538    34.759  &lt; 2e-16 ***\nO_HEX_ID1432  3.7453238  0.1067491    35.085  &lt; 2e-16 ***\nO_HEX_ID1433  2.4732441  0.1079334    22.915  &lt; 2e-16 ***\nO_HEX_ID1434  3.9828154  0.1067812    37.299  &lt; 2e-16 ***\nO_HEX_ID1435  4.4058101  0.1067133    41.286  &lt; 2e-16 ***\nO_HEX_ID1436  1.2154046  0.1096707    11.082  &lt; 2e-16 ***\nO_HEX_ID1437  4.5865177  0.1067300    42.973  &lt; 2e-16 ***\nO_HEX_ID1438  5.0515064  0.1066899    47.348  &lt; 2e-16 ***\nO_HEX_ID1439  5.5282027  0.1066843    51.818  &lt; 2e-16 ***\nO_HEX_ID1440  2.0397224  0.1087824    18.750  &lt; 2e-16 ***\nO_HEX_ID1442  4.9428613  0.1068722    46.250  &lt; 2e-16 ***\nO_HEX_ID1443  6.0015342  0.1067121    56.240  &lt; 2e-16 ***\nO_HEX_ID1444  4.9727927  0.1069350    46.503  &lt; 2e-16 ***\nO_HEX_ID1452  2.8206505  0.1069461    26.375  &lt; 2e-16 ***\nO_HEX_ID1453  2.9927844  0.1069020    27.996  &lt; 2e-16 ***\nO_HEX_ID1454  1.9635180  0.1083089    18.129  &lt; 2e-16 ***\nO_HEX_ID1455  3.3693460  0.1069677    31.499  &lt; 2e-16 ***\nO_HEX_ID1456  3.8029300  0.1068037    35.607  &lt; 2e-16 ***\nO_HEX_ID1457  4.5935953  0.1067183    43.044  &lt; 2e-16 ***\nO_HEX_ID1458  4.9419351  0.1067026    46.315  &lt; 2e-16 ***\nO_HEX_ID1459  4.4533552  0.1067385    41.722  &lt; 2e-16 ***\nO_HEX_ID1460  3.6900890  0.1068462    34.536  &lt; 2e-16 ***\nO_HEX_ID1461  2.2726278  0.1080500    21.033  &lt; 2e-16 ***\nO_HEX_ID1464  6.3815798  0.1067026    59.807  &lt; 2e-16 ***\nO_HEX_ID1465  5.8754271  0.1067565    55.036  &lt; 2e-16 ***\nO_HEX_ID1472  1.3952388  0.1084849    12.861  &lt; 2e-16 ***\nO_HEX_ID1473  2.2447632  0.1071525    20.949  &lt; 2e-16 ***\nO_HEX_ID1474  3.4870790  0.1067736    32.659  &lt; 2e-16 ***\nO_HEX_ID1475  4.4029495  0.1067210    41.257  &lt; 2e-16 ***\nO_HEX_ID1476  3.7765392  0.1068219    35.354  &lt; 2e-16 ***\nO_HEX_ID1477  5.3019809  0.1066685    49.705  &lt; 2e-16 ***\nO_HEX_ID1478  3.5923140  0.1068414    33.623  &lt; 2e-16 ***\nO_HEX_ID1479  3.8627712  0.1067979    36.169  &lt; 2e-16 ***\nO_HEX_ID1480  5.7259413  0.1066673    53.680  &lt; 2e-16 ***\nO_HEX_ID1481  3.0966500  0.1071667    28.896  &lt; 2e-16 ***\nO_HEX_ID1482  3.2501054  0.1074633    30.244  &lt; 2e-16 ***\nO_HEX_ID1485  5.8329688  0.1067608    54.636  &lt; 2e-16 ***\nO_HEX_ID1494  2.6021205  0.1074045    24.227  &lt; 2e-16 ***\nO_HEX_ID1495  2.7727945  0.1069450    25.927  &lt; 2e-16 ***\nO_HEX_ID1496  3.9265265  0.1067324    36.789  &lt; 2e-16 ***\nO_HEX_ID1497  4.2093156  0.1067591    39.428  &lt; 2e-16 ***\nO_HEX_ID1498  4.5767726  0.1067103    42.890  &lt; 2e-16 ***\nO_HEX_ID1499  4.7981165  0.1066950    44.970  &lt; 2e-16 ***\nO_HEX_ID1500  4.6791232  0.1067729    43.823  &lt; 2e-16 ***\nO_HEX_ID1501  4.9808300  0.1066978    46.682  &lt; 2e-16 ***\nO_HEX_ID1502  4.5092208  0.1067420    42.244  &lt; 2e-16 ***\nO_HEX_ID1506  1.1056216  0.1364753     8.101 5.44e-16 ***\nO_HEX_ID1515  1.5683891  0.1095952    14.311  &lt; 2e-16 ***\nO_HEX_ID1516  3.2286498  0.1068543    30.215  &lt; 2e-16 ***\nO_HEX_ID1517  3.5332316  0.1068565    33.065  &lt; 2e-16 ***\nO_HEX_ID1518  3.4988691  0.1068936    32.732  &lt; 2e-16 ***\nO_HEX_ID1519  4.8543585  0.1067462    45.476  &lt; 2e-16 ***\nO_HEX_ID1520  4.2613110  0.1067503    39.918  &lt; 2e-16 ***\nO_HEX_ID1521  2.8062943  0.1072250    26.172  &lt; 2e-16 ***\nO_HEX_ID1522  5.2323299  0.1066891    49.043  &lt; 2e-16 ***\nO_HEX_ID1523  3.6771893  0.1077939    34.113  &lt; 2e-16 ***\nO_HEX_ID1524  3.8106386  0.1070779    35.588  &lt; 2e-16 ***\nO_HEX_ID1527  3.8227987  0.1080073    35.394  &lt; 2e-16 ***\nO_HEX_ID1535  0.5051378  0.1348576     3.746 0.000180 ***\nO_HEX_ID1536  0.7884323  0.1131849     6.966 3.26e-12 ***\nO_HEX_ID1537  1.7902678  0.1083936    16.516  &lt; 2e-16 ***\nO_HEX_ID1538  3.3871830  0.1068143    31.711  &lt; 2e-16 ***\nO_HEX_ID1539  3.9051565  0.1067513    36.582  &lt; 2e-16 ***\nO_HEX_ID1540  4.0606857  0.1067703    38.032  &lt; 2e-16 ***\nO_HEX_ID1541  5.6461419  0.1067653    52.884  &lt; 2e-16 ***\nO_HEX_ID1542  2.6762666  0.1076860    24.852  &lt; 2e-16 ***\nO_HEX_ID1543  3.4076129  0.1087935    31.322  &lt; 2e-16 ***\nO_HEX_ID1544  4.3565115  0.1068397    40.776  &lt; 2e-16 ***\nO_HEX_ID1547  1.5314294  0.1237472    12.375  &lt; 2e-16 ***\nO_HEX_ID1556  1.4317091  0.1249247    11.461  &lt; 2e-16 ***\nO_HEX_ID1557  1.0330375  0.1125064     9.182  &lt; 2e-16 ***\nO_HEX_ID1558  2.3222287  0.1082317    21.456  &lt; 2e-16 ***\nO_HEX_ID1559  4.0600779  0.1067362    38.038  &lt; 2e-16 ***\nO_HEX_ID1560  4.8681450  0.1066901    45.629  &lt; 2e-16 ***\nO_HEX_ID1561  4.6861475  0.1067309    43.906  &lt; 2e-16 ***\nO_HEX_ID1562  1.7202675  0.1085630    15.846  &lt; 2e-16 ***\nO_HEX_ID1563  3.5831120  0.1068916    33.521  &lt; 2e-16 ***\nO_HEX_ID1564  2.7700966  0.1074354    25.784  &lt; 2e-16 ***\nO_HEX_ID1565  2.8134129  0.1075378    26.162  &lt; 2e-16 ***\nO_HEX_ID1566  2.6297369  0.1083784    24.264  &lt; 2e-16 ***\nO_HEX_ID1567  0.5356051  0.1351896     3.962 7.44e-05 ***\nO_HEX_ID1568  1.5147073  0.1255216    12.067  &lt; 2e-16 ***\nO_HEX_ID1578 -2.0485316  0.5112547    -4.007 6.15e-05 ***\nO_HEX_ID1580  2.5339845  0.1078224    23.501  &lt; 2e-16 ***\nO_HEX_ID1581  1.2953150  0.1085470    11.933  &lt; 2e-16 ***\nO_HEX_ID1582  4.5625793  0.1066986    42.761  &lt; 2e-16 ***\nO_HEX_ID1583  2.8194503  0.1085582    25.972  &lt; 2e-16 ***\nO_HEX_ID1584  3.0899612  0.1071398    28.840  &lt; 2e-16 ***\nO_HEX_ID1585  3.7932738  0.1070188    35.445  &lt; 2e-16 ***\nO_HEX_ID1586  2.9261557  0.1072986    27.271  &lt; 2e-16 ***\nO_HEX_ID1589  0.3515755  0.1417034     2.481 0.013099 *  \nO_HEX_ID1590  1.4910305  0.1254181    11.888  &lt; 2e-16 ***\nO_HEX_ID1600  4.7074519  0.1070916    43.957  &lt; 2e-16 ***\nO_HEX_ID1601  3.2176299  0.1068816    30.105  &lt; 2e-16 ***\nO_HEX_ID1602  3.8272013  0.1067995    35.835  &lt; 2e-16 ***\nO_HEX_ID1603  4.7659813  0.1067022    44.666  &lt; 2e-16 ***\nO_HEX_ID1604  3.2833450  0.1069183    30.709  &lt; 2e-16 ***\nO_HEX_ID1605  4.6532025  0.1067137    43.605  &lt; 2e-16 ***\nO_HEX_ID1606  4.1058547  0.1070434    38.357  &lt; 2e-16 ***\nO_HEX_ID1607  3.4235990  0.1070571    31.979  &lt; 2e-16 ***\nO_HEX_ID1608  5.4373507  0.1067280    50.946  &lt; 2e-16 ***\nO_HEX_ID1609  5.2966601  0.1067877    49.600  &lt; 2e-16 ***\nO_HEX_ID1610  1.9574859  0.1244183    15.733  &lt; 2e-16 ***\nO_HEX_ID1622  3.2407806  0.1086835    29.819  &lt; 2e-16 ***\nO_HEX_ID1623  4.5429115  0.1067040    42.575  &lt; 2e-16 ***\nO_HEX_ID1624  3.2754596  0.1069487    30.626  &lt; 2e-16 ***\nO_HEX_ID1625  4.6947902  0.1067306    43.987  &lt; 2e-16 ***\nO_HEX_ID1626  5.3593482  0.1066817    50.237  &lt; 2e-16 ***\nO_HEX_ID1627  3.7559501  0.1068664    35.146  &lt; 2e-16 ***\nO_HEX_ID1628  5.4742986  0.1066862    51.312  &lt; 2e-16 ***\nO_HEX_ID1629  4.3866391  0.1068662    41.048  &lt; 2e-16 ***\nO_HEX_ID1630  4.5017341  0.1069348    42.098  &lt; 2e-16 ***\nO_HEX_ID1631  1.1396545  0.1218170     9.355  &lt; 2e-16 ***\nO_HEX_ID1642  2.0898398  0.1101075    18.980  &lt; 2e-16 ***\nO_HEX_ID1643  4.4426990  0.1067200    41.629  &lt; 2e-16 ***\nO_HEX_ID1644  2.2425171  0.1079025    20.783  &lt; 2e-16 ***\nO_HEX_ID1645  3.7328796  0.1068042    34.951  &lt; 2e-16 ***\nO_HEX_ID1646  3.4013088  0.1070551    31.772  &lt; 2e-16 ***\nO_HEX_ID1647  3.9663759  0.1067848    37.144  &lt; 2e-16 ***\nO_HEX_ID1648  4.5846699  0.1067378    42.953  &lt; 2e-16 ***\nO_HEX_ID1649  5.3284840  0.1066957    49.941  &lt; 2e-16 ***\nO_HEX_ID1650  5.3629494  0.1067754    50.226  &lt; 2e-16 ***\nO_HEX_ID1664 -0.7939432  0.1891827    -4.197 2.71e-05 ***\nO_HEX_ID1665  4.6774187  0.1067007    43.837  &lt; 2e-16 ***\nO_HEX_ID1666  3.3831267  0.1068582    31.660  &lt; 2e-16 ***\nO_HEX_ID1667  4.2321624  0.1071971    39.480  &lt; 2e-16 ***\nO_HEX_ID1668  4.4814942  0.1067327    41.988  &lt; 2e-16 ***\nO_HEX_ID1670  5.3591059  0.1066857    50.233  &lt; 2e-16 ***\nO_HEX_ID1671  6.0136907  0.1067649    56.326  &lt; 2e-16 ***\nO_HEX_ID1672  5.6262285  0.1068055    52.677  &lt; 2e-16 ***\nO_HEX_ID1684  3.8251650  0.1073026    35.648  &lt; 2e-16 ***\nO_HEX_ID1685  4.1801380  0.1067654    39.153  &lt; 2e-16 ***\nO_HEX_ID1686  4.0842810  0.1067627    38.256  &lt; 2e-16 ***\nO_HEX_ID1687  3.6534877  0.1068935    34.179  &lt; 2e-16 ***\nO_HEX_ID1688  3.2380999  0.1069685    30.272  &lt; 2e-16 ***\nO_HEX_ID1689  2.8017718  0.1073815    26.092  &lt; 2e-16 ***\nO_HEX_ID1690  4.2340998  0.1068384    39.631  &lt; 2e-16 ***\nO_HEX_ID1691  5.0286263  0.1067263    47.117  &lt; 2e-16 ***\nO_HEX_ID1692  4.5993692  0.1069704    42.997  &lt; 2e-16 ***\nO_HEX_ID1706  4.1961273  0.1068145    39.284  &lt; 2e-16 ***\nO_HEX_ID1707  4.0883673  0.1067477    38.299  &lt; 2e-16 ***\nO_HEX_ID1708  4.5895157  0.1067086    43.010  &lt; 2e-16 ***\nO_HEX_ID1709  3.6707073  0.1068475    34.355  &lt; 2e-16 ***\nO_HEX_ID1710  4.9314117  0.1067141    46.211  &lt; 2e-16 ***\nO_HEX_ID1711  4.7707759  0.1067471    44.692  &lt; 2e-16 ***\nO_HEX_ID1712  5.3757031  0.1066848    50.389  &lt; 2e-16 ***\nO_HEX_ID1713  2.9487710  0.1074534    27.442  &lt; 2e-16 ***\nO_HEX_ID1714  5.5730507  0.1067431    52.210  &lt; 2e-16 ***\nO_HEX_ID1727  4.3751564  0.1067621    40.980  &lt; 2e-16 ***\nO_HEX_ID1728  4.2543831  0.1067394    39.858  &lt; 2e-16 ***\nO_HEX_ID1729  3.7417526  0.1067841    35.040  &lt; 2e-16 ***\nO_HEX_ID1730  1.7828940  0.1088465    16.380  &lt; 2e-16 ***\nO_HEX_ID1731  4.3663982  0.1067732    40.894  &lt; 2e-16 ***\nO_HEX_ID1732  5.0660041  0.1066958    47.481  &lt; 2e-16 ***\nO_HEX_ID1733  4.7726594  0.1067294    44.717  &lt; 2e-16 ***\nO_HEX_ID1734  5.1499399  0.1067271    48.253  &lt; 2e-16 ***\nO_HEX_ID1735  6.9000434  0.1068489    64.578  &lt; 2e-16 ***\nO_HEX_ID1748  3.1566991  0.1070700    29.483  &lt; 2e-16 ***\nO_HEX_ID1749  4.1100125  0.1067493    38.502  &lt; 2e-16 ***\nO_HEX_ID1750  3.2215049  0.1068891    30.139  &lt; 2e-16 ***\nO_HEX_ID1751  2.5327487  0.1072168    23.623  &lt; 2e-16 ***\nO_HEX_ID1753  5.0922448  0.1067032    47.723  &lt; 2e-16 ***\nO_HEX_ID1754  5.4395879  0.1066846    50.988  &lt; 2e-16 ***\nO_HEX_ID1755  4.9437883  0.1067278    46.321  &lt; 2e-16 ***\nO_HEX_ID1756  4.8832523  0.1067774    45.733  &lt; 2e-16 ***\nO_HEX_ID1757  2.9506901  0.1114146    26.484  &lt; 2e-16 ***\nO_HEX_ID1769  3.9149875  0.1068009    36.657  &lt; 2e-16 ***\nO_HEX_ID1770  3.6285728  0.1070935    33.882  &lt; 2e-16 ***\nO_HEX_ID1771  2.7788805  0.1071385    25.937  &lt; 2e-16 ***\nO_HEX_ID1772  1.7246364  0.1091770    15.797  &lt; 2e-16 ***\nO_HEX_ID1774  4.8074372  0.1067214    45.047  &lt; 2e-16 ***\nO_HEX_ID1775  4.4340954  0.1067823    41.525  &lt; 2e-16 ***\nO_HEX_ID1776  5.6005411  0.1066915    52.493  &lt; 2e-16 ***\nO_HEX_ID1777  5.6828622  0.1067136    53.253  &lt; 2e-16 ***\nO_HEX_ID1778  5.4463111  0.1073720    50.724  &lt; 2e-16 ***\nO_HEX_ID1790  4.6326004  0.1067449    43.399  &lt; 2e-16 ***\nO_HEX_ID1791  3.9479482  0.1068240    36.958  &lt; 2e-16 ***\nO_HEX_ID1792  3.8981144  0.1068515    36.482  &lt; 2e-16 ***\nO_HEX_ID1793  1.9632276  0.1075385    18.256  &lt; 2e-16 ***\nO_HEX_ID1794  1.4995549  0.1110976    13.498  &lt; 2e-16 ***\nO_HEX_ID1795  1.3779783  0.1114404    12.365  &lt; 2e-16 ***\nO_HEX_ID1796  5.2491782  0.1067242    49.185  &lt; 2e-16 ***\nO_HEX_ID1797  5.2623806  0.1067088    49.315  &lt; 2e-16 ***\nO_HEX_ID1798  5.2794403  0.1067115    49.474  &lt; 2e-16 ***\nO_HEX_ID1799  4.4656695  0.1069452    41.757  &lt; 2e-16 ***\nO_HEX_ID1800  3.7312566  0.1105214    33.760  &lt; 2e-16 ***\nO_HEX_ID1811  3.6804039  0.1068891    34.432  &lt; 2e-16 ***\nO_HEX_ID1812  4.8526229  0.1066932    45.482  &lt; 2e-16 ***\nO_HEX_ID1813  4.5999043  0.1067069    43.108  &lt; 2e-16 ***\nO_HEX_ID1817  5.1585747  0.1067737    48.313  &lt; 2e-16 ***\nO_HEX_ID1818  5.1249319  0.1067317    48.017  &lt; 2e-16 ***\nO_HEX_ID1819  5.5752970  0.1067064    52.249  &lt; 2e-16 ***\nO_HEX_ID1820  2.7803264  0.1126779    24.675  &lt; 2e-16 ***\nO_HEX_ID1832  4.4723327  0.1067665    41.889  &lt; 2e-16 ***\nO_HEX_ID1833  3.9053837  0.1068046    36.566  &lt; 2e-16 ***\nO_HEX_ID1834  4.2186072  0.1067349    39.524  &lt; 2e-16 ***\nO_HEX_ID1835  3.5305063  0.1069031    33.025  &lt; 2e-16 ***\nO_HEX_ID1837  0.8530874  0.1223037     6.975 3.06e-12 ***\nO_HEX_ID1839  4.6089111  0.1068909    43.118  &lt; 2e-16 ***\nO_HEX_ID1840  6.3905408  0.1066718    59.908  &lt; 2e-16 ***\nO_HEX_ID1841  2.2989469  0.1127195    20.395  &lt; 2e-16 ***\nO_HEX_ID1842  6.3879877  0.1072322    59.572  &lt; 2e-16 ***\nO_HEX_ID1853  4.2742749  0.1067537    40.039  &lt; 2e-16 ***\nO_HEX_ID1854  4.5319191  0.1067371    42.459  &lt; 2e-16 ***\nO_HEX_ID1855  4.7960133  0.1067172    44.941  &lt; 2e-16 ***\nO_HEX_ID1858  2.6444728  0.1097653    24.092  &lt; 2e-16 ***\nO_HEX_ID1860  5.9419581  0.1070022    55.531  &lt; 2e-16 ***\nO_HEX_ID1861  5.3613508  0.1067418    50.227  &lt; 2e-16 ***\nO_HEX_ID1874  4.4903724  0.1068115    42.040  &lt; 2e-16 ***\nO_HEX_ID1875  2.8219719  0.1074557    26.262  &lt; 2e-16 ***\nO_HEX_ID1876  4.9069131  0.1071686    45.787  &lt; 2e-16 ***\nO_HEX_ID1877  4.5221549  0.1067445    42.364  &lt; 2e-16 ***\nO_HEX_ID1880  1.4646454  0.1133644    12.920  &lt; 2e-16 ***\nO_HEX_ID1882  5.2010470  0.1067591    48.718  &lt; 2e-16 ***\nO_HEX_ID1883  5.7328424  0.1070442    53.556  &lt; 2e-16 ***\nO_HEX_ID1895  4.6055643  0.1067427    43.146  &lt; 2e-16 ***\nO_HEX_ID1896  2.9037870  0.1071193    27.108  &lt; 2e-16 ***\nO_HEX_ID1897  3.5977986  0.1070291    33.615  &lt; 2e-16 ***\nO_HEX_ID1898 -1.2398927  0.1846737    -6.714 1.89e-11 ***\nO_HEX_ID1901  0.6470054  0.1250870     5.172 2.31e-07 ***\nO_HEX_ID1903  5.0505196  0.1070619    47.174  &lt; 2e-16 ***\nO_HEX_ID1917  3.2457321  0.1070475    30.320  &lt; 2e-16 ***\nO_HEX_ID1918  4.6063513  0.1067966    43.132  &lt; 2e-16 ***\nO_HEX_ID1919  4.4959438  0.1067643    42.111  &lt; 2e-16 ***\nO_HEX_ID1922  2.2374315  0.1106039    20.229  &lt; 2e-16 ***\nO_HEX_ID1924  4.9774233  0.1070702    46.487  &lt; 2e-16 ***\nO_HEX_ID1937  4.0233634  0.1068619    37.650  &lt; 2e-16 ***\nO_HEX_ID1938  4.6440979  0.1067265    43.514  &lt; 2e-16 ***\nO_HEX_ID1939  5.1926618  0.1067136    48.660  &lt; 2e-16 ***\nO_HEX_ID1942  1.0516429  0.1168815     8.998  &lt; 2e-16 ***\nO_HEX_ID1959  3.6016368  0.1069947    33.662  &lt; 2e-16 ***\nO_HEX_ID1960  5.5465980  0.1066721    51.997  &lt; 2e-16 ***\nO_HEX_ID1961  3.9397137  0.1068704    36.864  &lt; 2e-16 ***\nO_HEX_ID1962  4.9967329  0.1067246    46.819  &lt; 2e-16 ***\nO_HEX_ID1964  0.0856749  0.1394858     0.614 0.539070    \nO_HEX_ID1979  3.8965808  0.1069359    36.438  &lt; 2e-16 ***\nO_HEX_ID1980  2.1535263  0.1076081    20.013  &lt; 2e-16 ***\nO_HEX_ID1981  4.6298127  0.1067253    43.381  &lt; 2e-16 ***\nO_HEX_ID1982  3.4957967  0.1072338    32.600  &lt; 2e-16 ***\nO_HEX_ID1983  4.9477206  0.1067279    46.358  &lt; 2e-16 ***\nO_HEX_ID1984  3.6888455  0.1069137    34.503  &lt; 2e-16 ***\nO_HEX_ID1985  4.3470341  0.1068341    40.690  &lt; 2e-16 ***\nO_HEX_ID2001  4.2122293  0.1068017    39.440  &lt; 2e-16 ***\nO_HEX_ID2002  4.7522297  0.1067023    44.537  &lt; 2e-16 ***\nO_HEX_ID2003  4.3836237  0.1067610    41.060  &lt; 2e-16 ***\nO_HEX_ID2004  4.9966372  0.1067208    46.820  &lt; 2e-16 ***\nO_HEX_ID2005  4.8818754  0.1067198    45.745  &lt; 2e-16 ***\nO_HEX_ID2006  3.3995235  0.1070754    31.749  &lt; 2e-16 ***\nO_HEX_ID2007  2.7855656  0.1080228    25.787  &lt; 2e-16 ***\nO_HEX_ID2022  4.5771162  0.1068012    42.856  &lt; 2e-16 ***\nO_HEX_ID2023  5.0167448  0.1067001    47.017  &lt; 2e-16 ***\nO_HEX_ID2024  4.2783604  0.1067520    40.078  &lt; 2e-16 ***\nO_HEX_ID2025  4.3357793  0.1067408    40.620  &lt; 2e-16 ***\nO_HEX_ID2026  2.9633051  0.1073161    27.613  &lt; 2e-16 ***\nO_HEX_ID2027  5.2376565  0.1067138    49.081  &lt; 2e-16 ***\nO_HEX_ID2043  3.9051179  0.1069227    36.523  &lt; 2e-16 ***\nO_HEX_ID2044  4.6311440  0.1067206    43.395  &lt; 2e-16 ***\nO_HEX_ID2045  0.2956171  0.1316483     2.246 0.024736 *  \nO_HEX_ID2046  4.5444201  0.1067096    42.587  &lt; 2e-16 ***\nO_HEX_ID2047  4.3283272  0.1067694    40.539  &lt; 2e-16 ***\nO_HEX_ID2048  4.5719928  0.1067405    42.833  &lt; 2e-16 ***\nO_HEX_ID2049  3.6464511  0.1075606    33.901  &lt; 2e-16 ***\nO_HEX_ID2064  4.6228124  0.1067524    43.304  &lt; 2e-16 ***\nO_HEX_ID2065  3.1155487  0.1069856    29.121  &lt; 2e-16 ***\nO_HEX_ID2066  2.3683814  0.1094652    21.636  &lt; 2e-16 ***\nO_HEX_ID2067  5.7570264  0.1066690    53.971  &lt; 2e-16 ***\nO_HEX_ID2068  4.1496101  0.1068696    38.829  &lt; 2e-16 ***\nO_HEX_ID2069  4.4647120  0.1067837    41.811  &lt; 2e-16 ***\nO_HEX_ID2085  3.4431409  0.1071077    32.147  &lt; 2e-16 ***\nO_HEX_ID2086  4.8365073  0.1067203    45.319  &lt; 2e-16 ***\nO_HEX_ID2087  3.4900911  0.1069162    32.643  &lt; 2e-16 ***\nO_HEX_ID2088  4.2097149  0.1067372    39.440  &lt; 2e-16 ***\nO_HEX_ID2089  3.9248897  0.1068450    36.734  &lt; 2e-16 ***\nO_HEX_ID2090  5.4524178  0.1066923    51.104  &lt; 2e-16 ***\nO_HEX_ID2091  0.7399136  0.1284788     5.759 8.46e-09 ***\nO_HEX_ID2105  1.2340734  0.1628785     7.577 3.55e-14 ***\nO_HEX_ID2106  1.9045480  0.1083544    17.577  &lt; 2e-16 ***\nO_HEX_ID2107  2.9384486  0.1070543    27.448  &lt; 2e-16 ***\nO_HEX_ID2108  4.2201826  0.1067813    39.522  &lt; 2e-16 ***\nO_HEX_ID2109  4.2581855  0.1067342    39.895  &lt; 2e-16 ***\nO_HEX_ID2110  3.6322699  0.1069136    33.974  &lt; 2e-16 ***\nO_HEX_ID2111  1.0961828  0.1143105     9.590  &lt; 2e-16 ***\nO_HEX_ID2128  2.6708554  0.1076707    24.806  &lt; 2e-16 ***\nO_HEX_ID2129  2.1025188  0.1077775    19.508  &lt; 2e-16 ***\nO_HEX_ID2130  4.6809429  0.1067092    43.866  &lt; 2e-16 ***\nO_HEX_ID2131  5.0252743  0.1067345    47.082  &lt; 2e-16 ***\nO_HEX_ID2132  3.9815389  0.1068138    37.275  &lt; 2e-16 ***\nO_HEX_ID2148  3.6157629  0.1072778    33.705  &lt; 2e-16 ***\nO_HEX_ID2149  2.2359747  0.1078225    20.738  &lt; 2e-16 ***\nO_HEX_ID2150  4.6149473  0.1067375    43.236  &lt; 2e-16 ***\nO_HEX_ID2151  5.0578055  0.1066940    47.405  &lt; 2e-16 ***\nO_HEX_ID2152  5.2427951  0.1067027    49.135  &lt; 2e-16 ***\nO_HEX_ID2153  4.5428953  0.1067912    42.540  &lt; 2e-16 ***\nO_HEX_ID2171  3.6207143  0.1068899    33.873  &lt; 2e-16 ***\nO_HEX_ID2172  3.6922898  0.1069340    34.529  &lt; 2e-16 ***\nO_HEX_ID2173  4.1825456  0.1067679    39.174  &lt; 2e-16 ***\nO_HEX_ID2174  4.5013971  0.1067739    42.158  &lt; 2e-16 ***\nO_HEX_ID2191  3.0587620  0.1072077    28.531  &lt; 2e-16 ***\nO_HEX_ID2192  3.0099591  0.1072214    28.072  &lt; 2e-16 ***\nO_HEX_ID2193  3.9014162  0.1068250    36.522  &lt; 2e-16 ***\nO_HEX_ID2194  4.3541488  0.1067629    40.783  &lt; 2e-16 ***\nO_HEX_ID2195  3.7397332  0.1087359    34.393  &lt; 2e-16 ***\nO_HEX_ID2212  0.2422657  0.1345589     1.800 0.071791 .  \nO_HEX_ID2213  0.9115544  0.1139362     8.001 1.24e-15 ***\nO_HEX_ID2214  1.4542940  0.1100490    13.215  &lt; 2e-16 ***\nO_HEX_ID2215  4.0582040  0.1068606    37.977  &lt; 2e-16 ***\nO_HEX_ID2216  3.0795304  0.1071952    28.728  &lt; 2e-16 ***\nO_HEX_ID2233  1.1530037  0.1154874     9.984  &lt; 2e-16 ***\nO_HEX_ID2234  2.8311549  0.1085893    26.072  &lt; 2e-16 ***\nO_HEX_ID2235  2.8044325  0.1075131    26.085  &lt; 2e-16 ***\nO_HEX_ID2236  2.7390177  0.1074765    25.485  &lt; 2e-16 ***\nO_HEX_ID2237  0.7104895  0.1200523     5.918 3.26e-09 ***\nO_HEX_ID2256  0.2144068  0.1178637     1.819 0.068895 .  \nO_HEX_ID2257  2.4892109  0.1085781    22.926  &lt; 2e-16 ***\nO_HEX_ID2258  1.9555459  0.1080609    18.097  &lt; 2e-16 ***\nO_HEX_ID2259  1.8074560  0.1121495    16.116  &lt; 2e-16 ***\nO_HEX_ID2277  2.4363005  0.1149015    21.203  &lt; 2e-16 ***\nO_HEX_ID2278  3.1539999  0.1078203    29.252  &lt; 2e-16 ***\nO_HEX_ID2279  1.7217442  0.1084753    15.872  &lt; 2e-16 ***\nO_HEX_ID2280 -0.0565247  0.1488517    -0.380 0.704140    \nO_HEX_ID2297  4.6472254  0.1070357    43.418  &lt; 2e-16 ***\nO_HEX_ID2300  0.2238787  0.1263735     1.772 0.076467 .  \nO_HEX_ID2301  1.9590610  0.1085426    18.049  &lt; 2e-16 ***\nO_HEX_ID2318  2.5484029  0.1083395    23.522  &lt; 2e-16 ***\nO_HEX_ID2319  3.2865424  0.1071604    30.669  &lt; 2e-16 ***\nO_HEX_ID2322  3.2044392  0.1073640    29.846  &lt; 2e-16 ***\nO_HEX_ID2337  4.1436657  0.1081941    38.298  &lt; 2e-16 ***\nO_HEX_ID2341  3.7335364  0.1070573    34.874  &lt; 2e-16 ***\nO_HEX_ID2343  2.5526932  0.1076331    23.717  &lt; 2e-16 ***\nO_HEX_ID2361  2.9020552  0.1072966    27.047  &lt; 2e-16 ***\nO_HEX_ID2364 -0.4679570  0.1317969    -3.551 0.000384 ***\nO_HEX_ID2379  3.2355041  0.1088444    29.726  &lt; 2e-16 ***\nO_HEX_ID2384  2.4889402  0.1077404    23.101  &lt; 2e-16 ***\nO_HEX_ID2405  2.1724140  0.1077681    20.158  &lt; 2e-16 ***\nO_HEX_ID2406  0.7217585  0.1127653     6.401 1.55e-10 ***\nO_HEX_ID2426  1.7382779  0.1100792    15.791  &lt; 2e-16 ***\nO_HEX_ID2427  3.2259275  0.1072534    30.078  &lt; 2e-16 ***\nO_HEX_ID2505  3.2838484  0.1142637    28.739  &lt; 2e-16 ***\nD_HEX_ID44    1.2450270  0.0529591    23.509  &lt; 2e-16 ***\nD_HEX_ID46    0.2624207  0.0524843     5.000 5.73e-07 ***\nD_HEX_ID66   -0.3469456  0.0679661    -5.105 3.31e-07 ***\nD_HEX_ID67    0.2183700  0.0505526     4.320 1.56e-05 ***\nD_HEX_ID68   -0.1579579  0.0527631    -2.994 0.002756 ** \nD_HEX_ID86    0.2264832  0.0600389     3.772 0.000162 ***\nD_HEX_ID87   -3.3214059  0.1126569   -29.482  &lt; 2e-16 ***\nD_HEX_ID88   -0.1526412  0.0512063    -2.981 0.002874 ** \nD_HEX_ID89   -1.0317903  0.0539331   -19.131  &lt; 2e-16 ***\nD_HEX_ID90   -6.9578129  0.4111945   -16.921  &lt; 2e-16 ***\nD_HEX_ID109  -0.7726898  0.0547002   -14.126  &lt; 2e-16 ***\nD_HEX_ID110  -3.4547939  0.1230414   -28.078  &lt; 2e-16 ***\nD_HEX_ID111   0.8200101  0.0497900    16.469  &lt; 2e-16 ***\nD_HEX_ID112  -2.5751384  0.0578378   -44.523  &lt; 2e-16 ***\nD_HEX_ID128   1.0463972  0.0537236    19.477  &lt; 2e-16 ***\nD_HEX_ID129  -5.1866103  0.1960570   -26.455  &lt; 2e-16 ***\nD_HEX_ID130  -0.8452704  0.0533995   -15.829  &lt; 2e-16 ***\nD_HEX_ID131  -1.3222532  0.0542461   -24.375  &lt; 2e-16 ***\nD_HEX_ID132  -0.6547102  0.0506140   -12.935  &lt; 2e-16 ***\nD_HEX_ID133  -1.0015861  0.0497933   -20.115  &lt; 2e-16 ***\nD_HEX_ID134  -0.9210876  0.0496984   -18.534  &lt; 2e-16 ***\nD_HEX_ID150  -0.3753947  0.0590187    -6.361 2.01e-10 ***\nD_HEX_ID151  -0.6478741  0.0535323   -12.102  &lt; 2e-16 ***\nD_HEX_ID152   0.1807529  0.0507037     3.565 0.000364 ***\nD_HEX_ID153  -0.4314039  0.0504145    -8.557  &lt; 2e-16 ***\nD_HEX_ID154  -2.4658973  0.0556057   -44.346  &lt; 2e-16 ***\nD_HEX_ID155  -2.0504357  0.0522535   -39.240  &lt; 2e-16 ***\nD_HEX_ID156  -1.8497330  0.0527656   -35.056  &lt; 2e-16 ***\nD_HEX_ID172  -1.9224304  0.0706387   -27.215  &lt; 2e-16 ***\nD_HEX_ID174  -1.4075870  0.0508374   -27.688  &lt; 2e-16 ***\nD_HEX_ID175  -0.9286406  0.0494134   -18.793  &lt; 2e-16 ***\nD_HEX_ID176  -2.3844757  0.0565300   -42.181  &lt; 2e-16 ***\nD_HEX_ID195  -2.7418017  0.0574033   -47.764  &lt; 2e-16 ***\nD_HEX_ID196  -1.2590971  0.0494638   -25.455  &lt; 2e-16 ***\nD_HEX_ID197  -4.5755925  0.0951422   -48.092  &lt; 2e-16 ***\nD_HEX_ID215  -0.7098892  0.0576100   -12.322  &lt; 2e-16 ***\nD_HEX_ID216  -0.7944854  0.0508950   -15.610  &lt; 2e-16 ***\nD_HEX_ID217  -0.5193714  0.0492819   -10.539  &lt; 2e-16 ***\nD_HEX_ID237  -2.8239130  0.0568031   -49.714  &lt; 2e-16 ***\nD_HEX_ID238  -1.8727299  0.0508585   -36.822  &lt; 2e-16 ***\nD_HEX_ID239  -2.1061076  0.0577190   -36.489  &lt; 2e-16 ***\nD_HEX_ID257   0.2456199  0.0511111     4.806 1.54e-06 ***\nD_HEX_ID258  -1.7422344  0.0524894   -33.192  &lt; 2e-16 ***\nD_HEX_ID259  -0.6181113  0.0499103   -12.384  &lt; 2e-16 ***\nD_HEX_ID278   0.4442634  0.0508772     8.732  &lt; 2e-16 ***\nD_HEX_ID279  -1.2815548  0.0503479   -25.454  &lt; 2e-16 ***\nD_HEX_ID280  -0.8859066  0.0500922   -17.686  &lt; 2e-16 ***\nD_HEX_ID298  -3.4220614  0.1282385   -26.685  &lt; 2e-16 ***\nD_HEX_ID299  -0.9626223  0.0512839   -18.770  &lt; 2e-16 ***\nD_HEX_ID300  -1.4670242  0.0515863   -28.438  &lt; 2e-16 ***\nD_HEX_ID320   0.2520286  0.0506971     4.971 6.65e-07 ***\nD_HEX_ID321  -1.7834665  0.0541134   -32.958  &lt; 2e-16 ***\nD_HEX_ID322  -0.6411610  0.0499868   -12.827  &lt; 2e-16 ***\nD_HEX_ID340   1.1285068  0.0498320    22.646  &lt; 2e-16 ***\nD_HEX_ID341  -0.3864629  0.0500492    -7.722 1.15e-14 ***\nD_HEX_ID342  -0.7282720  0.0496712   -14.662  &lt; 2e-16 ***\nD_HEX_ID363  -0.7743187  0.0504654   -15.344  &lt; 2e-16 ***\nD_HEX_ID364  -0.7533504  0.0491540   -15.326  &lt; 2e-16 ***\nD_HEX_ID383   0.1696646  0.0494021     3.434 0.000594 ***\nD_HEX_ID384  -1.0092636  0.0492977   -20.473  &lt; 2e-16 ***\nD_HEX_ID385  -1.9522423  0.0509494   -38.317  &lt; 2e-16 ***\nD_HEX_ID404   0.2921790  0.0503990     5.797 6.74e-09 ***\nD_HEX_ID405  -0.3953948  0.0497417    -7.949 1.88e-15 ***\nD_HEX_ID406   0.0786337  0.0488305     1.610 0.107324    \nD_HEX_ID407  -0.0860460  0.0493077    -1.745 0.080971 .  \nD_HEX_ID408   1.0386110  0.0488478    21.262  &lt; 2e-16 ***\nD_HEX_ID425  -2.0020675  0.0546992   -36.601  &lt; 2e-16 ***\nD_HEX_ID426  -1.4210013  0.0496674   -28.610  &lt; 2e-16 ***\nD_HEX_ID427  -3.8620775  0.0544225   -70.965  &lt; 2e-16 ***\nD_HEX_ID428  -1.0218464  0.0496538   -20.579  &lt; 2e-16 ***\nD_HEX_ID429  -1.6403304  0.0541833   -30.274  &lt; 2e-16 ***\nD_HEX_ID446  -0.7208097  0.0537038   -13.422  &lt; 2e-16 ***\nD_HEX_ID447  -1.6909549  0.0517877   -32.652  &lt; 2e-16 ***\nD_HEX_ID448  -1.9495971  0.0500020   -38.990  &lt; 2e-16 ***\nD_HEX_ID449  -1.4629964  0.0492946   -29.679  &lt; 2e-16 ***\nD_HEX_ID450  -1.7219948  0.0502000   -34.303  &lt; 2e-16 ***\nD_HEX_ID468  -0.9154166  0.0496995   -18.419  &lt; 2e-16 ***\nD_HEX_ID469  -1.7743651  0.0493766   -35.935  &lt; 2e-16 ***\nD_HEX_ID470  -1.4538821  0.0491451   -29.583  &lt; 2e-16 ***\nD_HEX_ID471  -1.2887128  0.0513388   -25.102  &lt; 2e-16 ***\nD_HEX_ID488  -0.9043103  0.0538934   -16.780  &lt; 2e-16 ***\nD_HEX_ID489  -3.0744477  0.0713690   -43.078  &lt; 2e-16 ***\nD_HEX_ID490  -0.9498293  0.0493363   -19.252  &lt; 2e-16 ***\nD_HEX_ID491  -3.3229958  0.0511881   -64.917  &lt; 2e-16 ***\nD_HEX_ID493  -3.8150402  0.0689707   -55.314  &lt; 2e-16 ***\nD_HEX_ID494  -1.9387186  0.0535441   -36.208  &lt; 2e-16 ***\nD_HEX_ID509  -0.4456046  0.0509460    -8.747  &lt; 2e-16 ***\nD_HEX_ID510  -0.6955181  0.0496551   -14.007  &lt; 2e-16 ***\nD_HEX_ID511  -1.4519975  0.0490830   -29.583  &lt; 2e-16 ***\nD_HEX_ID512  -1.4843522  0.0489980   -30.294  &lt; 2e-16 ***\nD_HEX_ID513  -0.4970168  0.0492452   -10.093  &lt; 2e-16 ***\nD_HEX_ID514  -1.0065593  0.0501624   -20.066  &lt; 2e-16 ***\nD_HEX_ID515  -2.4208910  0.0582218   -41.580  &lt; 2e-16 ***\nD_HEX_ID530  -1.2406718  0.0575317   -21.565  &lt; 2e-16 ***\nD_HEX_ID531   1.0924714  0.0490267    22.283  &lt; 2e-16 ***\nD_HEX_ID532  -1.2927842  0.0494442   -26.146  &lt; 2e-16 ***\nD_HEX_ID533  -0.0959031  0.0487162    -1.969 0.048998 *  \nD_HEX_ID534  -1.4371900  0.0490740   -29.286  &lt; 2e-16 ***\nD_HEX_ID536  -1.9202564  0.0521608   -36.814  &lt; 2e-16 ***\nD_HEX_ID537  -2.8735337  0.0623728   -46.070  &lt; 2e-16 ***\nD_HEX_ID538  -3.1230523  0.0687938   -45.397  &lt; 2e-16 ***\nD_HEX_ID539  -6.3190209  0.5794771   -10.905  &lt; 2e-16 ***\nD_HEX_ID551  -0.5851582  0.0520619   -11.240  &lt; 2e-16 ***\nD_HEX_ID552  -0.1221171  0.0498373    -2.450 0.014273 *  \nD_HEX_ID553  -2.0498914  0.0494041   -41.492  &lt; 2e-16 ***\nD_HEX_ID554  -2.1401452  0.0491776   -43.519  &lt; 2e-16 ***\nD_HEX_ID555  -0.8790117  0.0492634   -17.843  &lt; 2e-16 ***\nD_HEX_ID559  -3.4261260  0.0772068   -44.376  &lt; 2e-16 ***\nD_HEX_ID560  -0.9090125  0.0519248   -17.506  &lt; 2e-16 ***\nD_HEX_ID561  -3.0472634  0.0786300   -38.754  &lt; 2e-16 ***\nD_HEX_ID572  -1.4436749  0.0598568   -24.119  &lt; 2e-16 ***\nD_HEX_ID573   0.2201814  0.0497965     4.422 9.80e-06 ***\nD_HEX_ID574  -1.7074570  0.0514615   -33.179  &lt; 2e-16 ***\nD_HEX_ID575   0.9777703  0.0486632    20.093  &lt; 2e-16 ***\nD_HEX_ID576  -1.7188820  0.0490727   -35.027  &lt; 2e-16 ***\nD_HEX_ID578  -5.4035520  0.1107979   -48.769  &lt; 2e-16 ***\nD_HEX_ID582  -3.6081611  0.0856916   -42.106  &lt; 2e-16 ***\nD_HEX_ID583  -4.9362685  0.1640762   -30.085  &lt; 2e-16 ***\nD_HEX_ID584  -1.7629610  0.0609520   -28.924  &lt; 2e-16 ***\nD_HEX_ID593  -2.0766328  0.0553411   -37.524  &lt; 2e-16 ***\nD_HEX_ID594  -0.7083708  0.0505851   -14.004  &lt; 2e-16 ***\nD_HEX_ID595  -0.9658732  0.0489939   -19.714  &lt; 2e-16 ***\nD_HEX_ID596  -1.6475970  0.0489404   -33.665  &lt; 2e-16 ***\nD_HEX_ID597  -2.1476672  0.0514697   -41.727  &lt; 2e-16 ***\nD_HEX_ID603  -3.0403175  0.0727934   -41.766  &lt; 2e-16 ***\nD_HEX_ID604  -2.5132388  0.0693066   -36.263  &lt; 2e-16 ***\nD_HEX_ID615  -1.6590337  0.0509261   -32.577  &lt; 2e-16 ***\nD_HEX_ID616  -1.1060537  0.0494496   -22.367  &lt; 2e-16 ***\nD_HEX_ID617  -2.3170993  0.0495527   -46.760  &lt; 2e-16 ***\nD_HEX_ID618  -1.5968198  0.0490532   -32.553  &lt; 2e-16 ***\nD_HEX_ID620  -1.6516306  0.0500811   -32.979  &lt; 2e-16 ***\nD_HEX_ID637  -1.7056245  0.0499052   -34.177  &lt; 2e-16 ***\nD_HEX_ID638  -1.6461596  0.0490052   -33.592  &lt; 2e-16 ***\nD_HEX_ID657  -0.3078774  0.0491682    -6.262 3.81e-10 ***\nD_HEX_ID658  -0.9811261  0.0490320   -20.010  &lt; 2e-16 ***\nD_HEX_ID659  -1.3800026  0.0490157   -28.154  &lt; 2e-16 ***\nD_HEX_ID660  -0.7090711  0.0488074   -14.528  &lt; 2e-16 ***\nD_HEX_ID662  -1.4187429  0.0501051   -28.315  &lt; 2e-16 ***\nD_HEX_ID677  -0.2643874  0.0496080    -5.330 9.85e-08 ***\nD_HEX_ID678  -2.1935230  0.0507728   -43.203  &lt; 2e-16 ***\nD_HEX_ID679  -0.7720231  0.0489265   -15.779  &lt; 2e-16 ***\nD_HEX_ID680   0.6929594  0.0487070    14.227  &lt; 2e-16 ***\nD_HEX_ID681  -3.0335908  0.0522476   -58.062  &lt; 2e-16 ***\nD_HEX_ID699  -0.9433993  0.0495140   -19.053  &lt; 2e-16 ***\nD_HEX_ID700  -1.2862631  0.0491634   -26.163  &lt; 2e-16 ***\nD_HEX_ID701  -3.5498112  0.0526086   -67.476  &lt; 2e-16 ***\nD_HEX_ID702  -1.0423375  0.0488805   -21.324  &lt; 2e-16 ***\nD_HEX_ID704  -2.0112584  0.0499603   -40.257  &lt; 2e-16 ***\nD_HEX_ID722  -1.7448693  0.0493535   -35.355  &lt; 2e-16 ***\nD_HEX_ID725  -4.1671816  0.0558446   -74.621  &lt; 2e-16 ***\nD_HEX_ID741  -0.2805836  0.0492262    -5.700 1.20e-08 ***\nD_HEX_ID743  -3.7518004  0.0529980   -70.791  &lt; 2e-16 ***\nD_HEX_ID744  -1.0660704  0.0489079   -21.798  &lt; 2e-16 ***\nD_HEX_ID761   0.0068367  0.0494447     0.138 0.890028    \nD_HEX_ID762  -1.9118125  0.0504767   -37.875  &lt; 2e-16 ***\nD_HEX_ID763  -3.4769115  0.0527083   -65.965  &lt; 2e-16 ***\nD_HEX_ID764  -0.4324976  0.0487773    -8.867  &lt; 2e-16 ***\nD_HEX_ID765  -1.9215573  0.0496327   -38.716  &lt; 2e-16 ***\nD_HEX_ID767  -1.6941232  0.0492029   -34.431  &lt; 2e-16 ***\nD_HEX_ID772  -2.6076879  0.0617590   -42.224  &lt; 2e-16 ***\nD_HEX_ID784  -3.2208726  0.0529040   -60.881  &lt; 2e-16 ***\nD_HEX_ID785  -1.4690326  0.0489928   -29.985  &lt; 2e-16 ***\nD_HEX_ID786  -1.3828009  0.0489168   -28.268  &lt; 2e-16 ***\nD_HEX_ID787  -2.0806419  0.0498308   -41.754  &lt; 2e-16 ***\nD_HEX_ID788  -3.4819538  0.0509598   -68.328  &lt; 2e-16 ***\nD_HEX_ID789  -3.8256226  0.0518817   -73.737  &lt; 2e-16 ***\nD_HEX_ID803  -1.2153838  0.0507062   -23.969  &lt; 2e-16 ***\nD_HEX_ID804  -0.7313162  0.0491188   -14.889  &lt; 2e-16 ***\nD_HEX_ID805   0.3114604  0.0487341     6.391 1.65e-10 ***\nD_HEX_ID806  -1.6951994  0.0490427   -34.566  &lt; 2e-16 ***\nD_HEX_ID807  -1.5351679  0.0491676   -31.223  &lt; 2e-16 ***\nD_HEX_ID808  -3.2413295  0.0526310   -61.586  &lt; 2e-16 ***\nD_HEX_ID809  -1.8564275  0.0489882   -37.895  &lt; 2e-16 ***\nD_HEX_ID810  -2.2452745  0.0494830   -45.375  &lt; 2e-16 ***\nD_HEX_ID814  -1.5808981  0.0529029   -29.883  &lt; 2e-16 ***\nD_HEX_ID819   0.7231091  0.0509172    14.202  &lt; 2e-16 ***\nD_HEX_ID824  -0.9066940  0.0506588   -17.898  &lt; 2e-16 ***\nD_HEX_ID826  -1.2980029  0.0490574   -26.459  &lt; 2e-16 ***\nD_HEX_ID827  -1.5640517  0.0490857   -31.864  &lt; 2e-16 ***\nD_HEX_ID828  -1.3739650  0.0489101   -28.092  &lt; 2e-16 ***\nD_HEX_ID829  -2.0314835  0.0494350   -41.094  &lt; 2e-16 ***\nD_HEX_ID830  -3.2509095  0.0504586   -64.427  &lt; 2e-16 ***\nD_HEX_ID831   0.1010917  0.0487392     2.074 0.038067 *  \nD_HEX_ID832  -0.2887408  0.0488581    -5.910 3.43e-09 ***\nD_HEX_ID835  -2.1512060  0.0530652   -40.539  &lt; 2e-16 ***\nD_HEX_ID844  -1.2474922  0.0521519   -23.920  &lt; 2e-16 ***\nD_HEX_ID846  -1.2665419  0.0491821   -25.752  &lt; 2e-16 ***\nD_HEX_ID847  -0.4740820  0.0488615    -9.703  &lt; 2e-16 ***\nD_HEX_ID848  -1.7720378  0.0490968   -36.093  &lt; 2e-16 ***\nD_HEX_ID849  -2.5941582  0.0494784   -52.430  &lt; 2e-16 ***\nD_HEX_ID850  -1.7429132  0.0490185   -35.556  &lt; 2e-16 ***\nD_HEX_ID851  -2.3112471  0.0491640   -47.011  &lt; 2e-16 ***\nD_HEX_ID852  -2.4047385  0.0494835   -48.597  &lt; 2e-16 ***\nD_HEX_ID853  -1.2023482  0.0494961   -24.292  &lt; 2e-16 ***\nD_HEX_ID854  -1.3555179  0.0509103   -26.626  &lt; 2e-16 ***\nD_HEX_ID855  -2.3058874  0.0528902   -43.598  &lt; 2e-16 ***\nD_HEX_ID856  -2.7048160  0.0574058   -47.117  &lt; 2e-16 ***\nD_HEX_ID866  -0.5152011  0.0497313   -10.360  &lt; 2e-16 ***\nD_HEX_ID867   0.0663165  0.0488745     1.357 0.174821    \nD_HEX_ID868  -0.3521711  0.0489445    -7.195 6.23e-13 ***\nD_HEX_ID869   0.4235889  0.0489396     8.655  &lt; 2e-16 ***\nD_HEX_ID870  -0.0571654  0.0487394    -1.173 0.240844    \nD_HEX_ID871  -0.1203895  0.0488297    -2.465 0.013682 *  \nD_HEX_ID872  -2.3845804  0.0493438   -48.326  &lt; 2e-16 ***\nD_HEX_ID873  -1.9529138  0.0493549   -39.569  &lt; 2e-16 ***\nD_HEX_ID874  -3.4979241  0.0506919   -69.004  &lt; 2e-16 ***\nD_HEX_ID875  -2.8091237  0.0563831   -49.822  &lt; 2e-16 ***\nD_HEX_ID876  -2.4573932  0.0523791   -46.915  &lt; 2e-16 ***\nD_HEX_ID877  -1.7441525  0.0508459   -34.303  &lt; 2e-16 ***\nD_HEX_ID887  -1.2263145  0.0494395   -24.804  &lt; 2e-16 ***\nD_HEX_ID888  -2.5127192  0.0506571   -49.603  &lt; 2e-16 ***\nD_HEX_ID889  -1.9248378  0.0504622   -38.144  &lt; 2e-16 ***\nD_HEX_ID890  -0.9283800  0.0489143   -18.980  &lt; 2e-16 ***\nD_HEX_ID891  -2.5643880  0.0510382   -50.245  &lt; 2e-16 ***\nD_HEX_ID893  -1.3923299  0.0488976   -28.474  &lt; 2e-16 ***\nD_HEX_ID894  -2.8906239  0.0501004   -57.697  &lt; 2e-16 ***\nD_HEX_ID895  -1.6541731  0.0495665   -33.373  &lt; 2e-16 ***\nD_HEX_ID896  -3.9868646  0.0584243   -68.240  &lt; 2e-16 ***\nD_HEX_ID897  -3.8485417  0.0561327   -68.562  &lt; 2e-16 ***\nD_HEX_ID898  -1.7401088  0.0512300   -33.967  &lt; 2e-16 ***\nD_HEX_ID908  -0.3543991  0.0498379    -7.111 1.15e-12 ***\nD_HEX_ID909  -1.3286690  0.0490964   -27.062  &lt; 2e-16 ***\nD_HEX_ID910  -2.2800945  0.0501154   -45.497  &lt; 2e-16 ***\nD_HEX_ID911  -0.1204203  0.0488263    -2.466 0.013652 *  \nD_HEX_ID912  -1.8102464  0.0492103   -36.786  &lt; 2e-16 ***\nD_HEX_ID915  -1.9371873  0.0490852   -39.466  &lt; 2e-16 ***\nD_HEX_ID917  -0.4141186  0.0489959    -8.452  &lt; 2e-16 ***\nD_HEX_ID918  -4.9313579  0.0661466   -74.552  &lt; 2e-16 ***\nD_HEX_ID919  -2.9913182  0.0509766   -58.680  &lt; 2e-16 ***\nD_HEX_ID928  -2.3823180  0.0520650   -45.757  &lt; 2e-16 ***\nD_HEX_ID929  -1.4260181  0.0491917   -28.989  &lt; 2e-16 ***\nD_HEX_ID930  -0.2473052  0.0487958    -5.068 4.02e-07 ***\nD_HEX_ID931  -1.7592220  0.0498016   -35.325  &lt; 2e-16 ***\nD_HEX_ID932  -3.6031869  0.0554612   -64.968  &lt; 2e-16 ***\nD_HEX_ID933  -1.4212351  0.0492810   -28.839  &lt; 2e-16 ***\nD_HEX_ID934  -1.9044799  0.0493962   -38.555  &lt; 2e-16 ***\nD_HEX_ID935   0.1746567  0.0487261     3.584 0.000338 ***\nD_HEX_ID938  -5.6671715  0.1538571   -36.834  &lt; 2e-16 ***\nD_HEX_ID939   0.4669240  0.0488110     9.566  &lt; 2e-16 ***\nD_HEX_ID940  -3.4575456  0.0521978   -66.239  &lt; 2e-16 ***\nD_HEX_ID949  -1.9982941  0.0510281   -39.161  &lt; 2e-16 ***\nD_HEX_ID950  -0.0506674  0.0489244    -1.036 0.300377    \nD_HEX_ID951   0.7126879  0.0487267    14.626  &lt; 2e-16 ***\nD_HEX_ID952  -0.8466545  0.0492985   -17.174  &lt; 2e-16 ***\nD_HEX_ID953  -1.3895025  0.0495042   -28.068  &lt; 2e-16 ***\nD_HEX_ID954  -3.3109232  0.0518119   -63.903  &lt; 2e-16 ***\nD_HEX_ID955  -0.4720367  0.0488606    -9.661  &lt; 2e-16 ***\nD_HEX_ID956  -2.5931696  0.0496970   -52.180  &lt; 2e-16 ***\nD_HEX_ID957  -2.4046296  0.0495670   -48.513  &lt; 2e-16 ***\nD_HEX_ID959  -1.9496202  0.0531798   -36.661  &lt; 2e-16 ***\nD_HEX_ID961  -2.3764820  0.0503159   -47.231  &lt; 2e-16 ***\nD_HEX_ID962  -0.2318673  0.0489598    -4.736 2.18e-06 ***\nD_HEX_ID970  -0.7308359  0.0491070   -14.883  &lt; 2e-16 ***\nD_HEX_ID971  -0.6291805  0.0488711   -12.874  &lt; 2e-16 ***\nD_HEX_ID972  -1.4483000  0.0492040   -29.435  &lt; 2e-16 ***\nD_HEX_ID974  -1.8762600  0.0498678   -37.625  &lt; 2e-16 ***\nD_HEX_ID975  -3.0284945  0.0512033   -59.146  &lt; 2e-16 ***\nD_HEX_ID976  -2.6321423  0.0501282   -52.508  &lt; 2e-16 ***\nD_HEX_ID977  -2.1659926  0.0491711   -44.050  &lt; 2e-16 ***\nD_HEX_ID978  -2.5821922  0.0501396   -51.500  &lt; 2e-16 ***\nD_HEX_ID982  -3.2644798  0.0499732   -65.325  &lt; 2e-16 ***\nD_HEX_ID983   2.2328598  0.0502169    44.464  &lt; 2e-16 ***\nD_HEX_ID984   1.4933635  0.0490193    30.465  &lt; 2e-16 ***\nD_HEX_ID991  -0.4900067  0.0491296    -9.974  &lt; 2e-16 ***\nD_HEX_ID992  -0.4792702  0.0489751    -9.786  &lt; 2e-16 ***\nD_HEX_ID993  -2.1406781  0.0496871   -43.083  &lt; 2e-16 ***\nD_HEX_ID994  -2.1047691  0.0500334   -42.067  &lt; 2e-16 ***\nD_HEX_ID995  -1.4251002  0.0493248   -28.892  &lt; 2e-16 ***\nD_HEX_ID996  -2.1666743  0.0500657   -43.277  &lt; 2e-16 ***\nD_HEX_ID997  -1.6442156  0.0501009   -32.818  &lt; 2e-16 ***\nD_HEX_ID998  -1.5222394  0.0490934   -31.007  &lt; 2e-16 ***\nD_HEX_ID999  -2.6456652  0.0498172   -53.107  &lt; 2e-16 ***\nD_HEX_ID1001 -1.6148323  0.0513036   -31.476  &lt; 2e-16 ***\nD_HEX_ID1003 -0.2916899  0.0487981    -5.977 2.27e-09 ***\nD_HEX_ID1004 -1.3804978  0.0489521   -28.201  &lt; 2e-16 ***\nD_HEX_ID1011 -1.0340930  0.0502408   -20.583  &lt; 2e-16 ***\nD_HEX_ID1012  0.2706982  0.0490857     5.515 3.49e-08 ***\nD_HEX_ID1013 -0.9613142  0.0492447   -19.521  &lt; 2e-16 ***\nD_HEX_ID1014 -2.6650513  0.0513346   -51.915  &lt; 2e-16 ***\nD_HEX_ID1015 -1.0663736  0.0491824   -21.682  &lt; 2e-16 ***\nD_HEX_ID1016  0.0095161  0.0488119     0.195 0.845428    \nD_HEX_ID1018 -2.3150143  0.0501430   -46.168  &lt; 2e-16 ***\nD_HEX_ID1019 -1.4666504  0.0490527   -29.899  &lt; 2e-16 ***\nD_HEX_ID1023 -2.4232363  0.0504525   -48.030  &lt; 2e-16 ***\nD_HEX_ID1024 -1.5920995  0.0491369   -32.401  &lt; 2e-16 ***\nD_HEX_ID1025 -6.1190118  0.0928753   -65.884  &lt; 2e-16 ***\nD_HEX_ID1033 -0.3161988  0.0490780    -6.443 1.17e-10 ***\nD_HEX_ID1034  0.1858798  0.0488459     3.805 0.000142 ***\nD_HEX_ID1035 -0.2174825  0.0489212    -4.446 8.77e-06 ***\nD_HEX_ID1036 -0.0295719  0.0488645    -0.605 0.545058    \nD_HEX_ID1037 -1.1494059  0.0490919   -23.413  &lt; 2e-16 ***\nD_HEX_ID1043 -0.7944168  0.0499197   -15.914  &lt; 2e-16 ***\nD_HEX_ID1045 -1.7175200  0.0490643   -35.005  &lt; 2e-16 ***\nD_HEX_ID1046 -1.1723924  0.0490490   -23.902  &lt; 2e-16 ***\nD_HEX_ID1053  0.3568845  0.0489029     7.298 2.92e-13 ***\nD_HEX_ID1054 -0.0230330  0.0489206    -0.471 0.637767    \nD_HEX_ID1055 -1.3565366  0.0494622   -27.426  &lt; 2e-16 ***\nD_HEX_ID1056 -1.8087938  0.0500386   -36.148  &lt; 2e-16 ***\nD_HEX_ID1064 -4.6740731  0.1422498   -32.858  &lt; 2e-16 ***\nD_HEX_ID1066 -0.7218446  0.0488650   -14.772  &lt; 2e-16 ***\nD_HEX_ID1067 -0.8211389  0.0491532   -16.706  &lt; 2e-16 ***\nD_HEX_ID1074 -1.7813057  0.0506779   -35.150  &lt; 2e-16 ***\nD_HEX_ID1075 -0.1467195  0.0490556    -2.991 0.002782 ** \nD_HEX_ID1076 -1.0129803  0.0491913   -20.593  &lt; 2e-16 ***\nD_HEX_ID1077 -1.7706391  0.0498045   -35.552  &lt; 2e-16 ***\nD_HEX_ID1079 -0.6740618  0.0490276   -13.749  &lt; 2e-16 ***\nD_HEX_ID1085 -2.2688393  0.0742775   -30.545  &lt; 2e-16 ***\nD_HEX_ID1087 -1.6576804  0.0491733   -33.711  &lt; 2e-16 ***\nD_HEX_ID1088 -2.1304894  0.0494888   -43.050  &lt; 2e-16 ***\nD_HEX_ID1094 -3.3576594  0.0697618   -48.130  &lt; 2e-16 ***\nD_HEX_ID1095 -0.8562751  0.0506568   -16.903  &lt; 2e-16 ***\nD_HEX_ID1096 -0.5720117  0.0510955   -11.195  &lt; 2e-16 ***\nD_HEX_ID1097  0.0835092  0.0488421     1.710 0.087307 .  \nD_HEX_ID1098 -2.7126972  0.0536956   -50.520  &lt; 2e-16 ***\nD_HEX_ID1099 -1.2201200  0.0492651   -24.766  &lt; 2e-16 ***\nD_HEX_ID1105  0.5977994  0.0495537    12.064  &lt; 2e-16 ***\nD_HEX_ID1106 -4.6335791  0.1121446   -41.318  &lt; 2e-16 ***\nD_HEX_ID1107 -1.2369495  0.0493214   -25.079  &lt; 2e-16 ***\nD_HEX_ID1108  0.9653138  0.0487361    19.807  &lt; 2e-16 ***\nD_HEX_ID1109 -3.2545549  0.0533968   -60.950  &lt; 2e-16 ***\nD_HEX_ID1116 -0.8147332  0.0494413   -16.479  &lt; 2e-16 ***\nD_HEX_ID1117 -0.3035614  0.0491920    -6.171 6.79e-10 ***\nD_HEX_ID1118 -2.4567114  0.0521819   -47.080  &lt; 2e-16 ***\nD_HEX_ID1119 -1.6615129  0.0497819   -33.376  &lt; 2e-16 ***\nD_HEX_ID1120 -2.2595165  0.0515919   -43.796  &lt; 2e-16 ***\nD_HEX_ID1129 -2.0887123  0.0494025   -42.279  &lt; 2e-16 ***\nD_HEX_ID1130 -1.4154345  0.0490449   -28.860  &lt; 2e-16 ***\nD_HEX_ID1131  0.1766071  0.0489853     3.605 0.000312 ***\nD_HEX_ID1136  0.4765980  0.0488998     9.746  &lt; 2e-16 ***\nD_HEX_ID1138 -1.8831263  0.0514273   -36.617  &lt; 2e-16 ***\nD_HEX_ID1139 -1.1426393  0.0491788   -23.234  &lt; 2e-16 ***\nD_HEX_ID1141 -1.1609466  0.0492736   -23.561  &lt; 2e-16 ***\nD_HEX_ID1148 -2.4072094  0.0578209   -41.632  &lt; 2e-16 ***\nD_HEX_ID1149 -2.4982142  0.0507464   -49.229  &lt; 2e-16 ***\nD_HEX_ID1150 -2.0752640  0.0492000   -42.180  &lt; 2e-16 ***\nD_HEX_ID1151 -1.2965109  0.0491493   -26.379  &lt; 2e-16 ***\nD_HEX_ID1158 -1.4560293  0.0497960   -29.240  &lt; 2e-16 ***\nD_HEX_ID1159 -1.4823088  0.0495619   -29.908  &lt; 2e-16 ***\nD_HEX_ID1160  0.0908848  0.0488422     1.861 0.062775 .  \nD_HEX_ID1171 -1.0594654  0.0490710   -21.590  &lt; 2e-16 ***\nD_HEX_ID1172  0.2056084  0.0487899     4.214 2.51e-05 ***\nD_HEX_ID1173 -0.2846109  0.0489680    -5.812 6.17e-09 ***\nD_HEX_ID1174 -2.5286749  0.0650448   -38.876  &lt; 2e-16 ***\nD_HEX_ID1178  0.6757080  0.0487961    13.848  &lt; 2e-16 ***\nD_HEX_ID1179 -0.3445361  0.0489426    -7.040 1.93e-12 ***\nD_HEX_ID1180 -0.3673089  0.0489173    -7.509 5.97e-14 ***\nD_HEX_ID1181 -1.5406303  0.0494915   -31.129  &lt; 2e-16 ***\nD_HEX_ID1183 -0.2098153  0.0489331    -4.288 1.80e-05 ***\nD_HEX_ID1190 -2.3428301  0.0567372   -41.293  &lt; 2e-16 ***\nD_HEX_ID1192 -1.1093066  0.0490116   -22.634  &lt; 2e-16 ***\nD_HEX_ID1193 -0.9352369  0.0490091   -19.083  &lt; 2e-16 ***\nD_HEX_ID1194 -0.3610982  0.0490880    -7.356 1.89e-13 ***\nD_HEX_ID1200 -0.7284076  0.0492289   -14.796  &lt; 2e-16 ***\nD_HEX_ID1201 -0.9901709  0.0492469   -20.106  &lt; 2e-16 ***\nD_HEX_ID1203 -1.0579064  0.0493364   -21.443  &lt; 2e-16 ***\nD_HEX_ID1204 -1.4682736  0.0495953   -29.605  &lt; 2e-16 ***\nD_HEX_ID1211 -3.2501492  0.3582885    -9.071  &lt; 2e-16 ***\nD_HEX_ID1214 -1.9984591  0.0494889   -40.382  &lt; 2e-16 ***\nD_HEX_ID1215 -1.5917558  0.0500996   -31.772  &lt; 2e-16 ***\nD_HEX_ID1216 -0.8166515  0.0497844   -16.404  &lt; 2e-16 ***\nD_HEX_ID1220 -0.5007256  0.0490569   -10.207  &lt; 2e-16 ***\nD_HEX_ID1221  0.0723549  0.0488433     1.481 0.138509    \nD_HEX_ID1222 -1.2935592  0.0504285   -25.651  &lt; 2e-16 ***\nD_HEX_ID1223 -1.6366116  0.0499621   -32.757  &lt; 2e-16 ***\nD_HEX_ID1224 -1.1310595  0.0493582   -22.915  &lt; 2e-16 ***\nD_HEX_ID1231 -3.6109086  0.0759913   -47.517  &lt; 2e-16 ***\nD_HEX_ID1232 -1.7661852  0.0548610   -32.194  &lt; 2e-16 ***\nD_HEX_ID1235 -1.1916279  0.0490754   -24.282  &lt; 2e-16 ***\nD_HEX_ID1236 -1.2081208  0.0494387   -24.437  &lt; 2e-16 ***\nD_HEX_ID1241 -1.8294253  0.0501036   -36.513  &lt; 2e-16 ***\nD_HEX_ID1242 -1.3921842  0.0495370   -28.104  &lt; 2e-16 ***\nD_HEX_ID1243 -0.2733122  0.0489394    -5.585 2.34e-08 ***\nD_HEX_ID1246 -1.3124689  0.0494294   -26.552  &lt; 2e-16 ***\nD_HEX_ID1256 -1.9065130  0.0494928   -38.521  &lt; 2e-16 ***\nD_HEX_ID1257 -0.8317664  0.0491436   -16.925  &lt; 2e-16 ***\nD_HEX_ID1258  0.1337346  0.0489888     2.730 0.006335 ** \nD_HEX_ID1262 -2.0739431  0.0504772   -41.087  &lt; 2e-16 ***\nD_HEX_ID1263  0.1678610  0.0487990     3.440 0.000582 ***\nD_HEX_ID1264 -0.6623752  0.0492459   -13.450  &lt; 2e-16 ***\nD_HEX_ID1265 -0.6751840  0.0492960   -13.697  &lt; 2e-16 ***\nD_HEX_ID1266 -0.6499567  0.0491501   -13.224  &lt; 2e-16 ***\nD_HEX_ID1267 -2.0931345  0.0516236   -40.546  &lt; 2e-16 ***\nD_HEX_ID1272 -5.9060065  0.1246505   -47.381  &lt; 2e-16 ***\nD_HEX_ID1273 -0.8602591  0.0492763   -17.458  &lt; 2e-16 ***\nD_HEX_ID1277 -0.6714467  0.0489248   -13.724  &lt; 2e-16 ***\nD_HEX_ID1278 -0.9461985  0.0491012   -19.270  &lt; 2e-16 ***\nD_HEX_ID1283  0.7026305  0.0487890    14.401  &lt; 2e-16 ***\nD_HEX_ID1284  0.2393346  0.0488285     4.902 9.51e-07 ***\nD_HEX_ID1285 -0.0379871  0.0488869    -0.777 0.437134    \nD_HEX_ID1286 -1.0393748  0.0497012   -20.912  &lt; 2e-16 ***\nD_HEX_ID1289 -3.2163128  0.0613607   -52.416  &lt; 2e-16 ***\nD_HEX_ID1293 -4.7844853  0.0866198   -55.235  &lt; 2e-16 ***\nD_HEX_ID1294 -0.9074621  0.0495015   -18.332  &lt; 2e-16 ***\nD_HEX_ID1295 -3.3064564  0.0548261   -60.308  &lt; 2e-16 ***\nD_HEX_ID1298 -1.5244713  0.0492415   -30.959  &lt; 2e-16 ***\nD_HEX_ID1299 -1.7634394  0.0496334   -35.529  &lt; 2e-16 ***\nD_HEX_ID1304 -0.4705102  0.0490673    -9.589  &lt; 2e-16 ***\nD_HEX_ID1305 -0.2772592  0.0488682    -5.674 1.40e-08 ***\nD_HEX_ID1307 -1.6577814  0.0523897   -31.643  &lt; 2e-16 ***\nD_HEX_ID1308 -0.4185735  0.0489945    -8.543  &lt; 2e-16 ***\nD_HEX_ID1310 -5.4141525  0.1673736   -32.348  &lt; 2e-16 ***\nD_HEX_ID1316 -2.8346623  0.0514338   -55.113  &lt; 2e-16 ***\nD_HEX_ID1317 -2.8644371  0.0506890   -56.510  &lt; 2e-16 ***\nD_HEX_ID1318 -3.0522608  0.0516071   -59.144  &lt; 2e-16 ***\nD_HEX_ID1319 -0.1442197  0.0488425    -2.953 0.003150 ** \nD_HEX_ID1320 -2.1469548  0.0505460   -42.475  &lt; 2e-16 ***\nD_HEX_ID1324 -0.3038495  0.0518135    -5.864 4.51e-09 ***\nD_HEX_ID1325 -2.4025528  0.0511496   -46.971  &lt; 2e-16 ***\nD_HEX_ID1326 -0.6512902  0.0490170   -13.287  &lt; 2e-16 ***\nD_HEX_ID1327 -0.4794831  0.0489699    -9.791  &lt; 2e-16 ***\nD_HEX_ID1328 -0.5774909  0.0491008   -11.761  &lt; 2e-16 ***\nD_HEX_ID1329 -0.8060370  0.0494842   -16.289  &lt; 2e-16 ***\nD_HEX_ID1330  0.3950883  0.0489584     8.070 7.04e-16 ***\nD_HEX_ID1331 -5.9713674  0.2927610   -20.397  &lt; 2e-16 ***\nD_HEX_ID1333 -2.2248923  0.0514279   -43.262  &lt; 2e-16 ***\nD_HEX_ID1334 -1.8772970  0.0505840   -37.112  &lt; 2e-16 ***\nD_HEX_ID1335 -0.1847408  0.0490230    -3.768 0.000164 ***\nD_HEX_ID1336 -3.6993064  0.0708520   -52.212  &lt; 2e-16 ***\nD_HEX_ID1337 -3.6919175  0.0577457   -63.934  &lt; 2e-16 ***\nD_HEX_ID1338 -4.1997248  0.0568023   -73.936  &lt; 2e-16 ***\nD_HEX_ID1339 -0.4281021  0.0488534    -8.763  &lt; 2e-16 ***\nD_HEX_ID1340 -1.8309672  0.0496427   -36.883  &lt; 2e-16 ***\nD_HEX_ID1341 -5.6700447  0.1108284   -51.161  &lt; 2e-16 ***\nD_HEX_ID1346 -0.8019029  0.0493501   -16.249  &lt; 2e-16 ***\nD_HEX_ID1347  0.6099712  0.0488147    12.496  &lt; 2e-16 ***\nD_HEX_ID1348 -0.8272234  0.0491517   -16.830  &lt; 2e-16 ***\nD_HEX_ID1349  0.1923982  0.0489506     3.930 8.48e-05 ***\nD_HEX_ID1350 -1.6313206  0.0505103   -32.297  &lt; 2e-16 ***\nD_HEX_ID1353 -0.9434203  0.0491932   -19.178  &lt; 2e-16 ***\nD_HEX_ID1354 -1.9489053  0.0500322   -38.953  &lt; 2e-16 ***\nD_HEX_ID1355 -1.9864110  0.0500758   -39.668  &lt; 2e-16 ***\nD_HEX_ID1357 -2.4539875  0.0524923   -46.749  &lt; 2e-16 ***\nD_HEX_ID1358 -0.3885304  0.0488492    -7.954 1.81e-15 ***\nD_HEX_ID1359 -1.8755178  0.0491930   -38.126  &lt; 2e-16 ***\nD_HEX_ID1360 -2.0476147  0.0493233   -41.514  &lt; 2e-16 ***\nD_HEX_ID1361 -1.7408606  0.0496205   -35.084  &lt; 2e-16 ***\nD_HEX_ID1362 -3.1109931  0.0568042   -54.767  &lt; 2e-16 ***\nD_HEX_ID1368 -1.6035981  0.0496847   -32.276  &lt; 2e-16 ***\nD_HEX_ID1369 -1.3862932  0.0494656   -28.025  &lt; 2e-16 ***\nD_HEX_ID1370  0.3161625  0.0488024     6.478 9.27e-11 ***\nD_HEX_ID1371 -0.8188400  0.0493098   -16.606  &lt; 2e-16 ***\nD_HEX_ID1372 -0.8897804  0.0492590   -18.063  &lt; 2e-16 ***\nD_HEX_ID1373 -3.5553567  0.0594957   -59.758  &lt; 2e-16 ***\nD_HEX_ID1374 -2.4211354  0.0508741   -47.591  &lt; 2e-16 ***\nD_HEX_ID1375 -0.6526477  0.0492943   -13.240  &lt; 2e-16 ***\nD_HEX_ID1376 -2.5282971  0.0521364   -48.494  &lt; 2e-16 ***\nD_HEX_ID1379 -4.9636360  0.0760031   -65.308  &lt; 2e-16 ***\nD_HEX_ID1380  0.2176348  0.0487714     4.462 8.11e-06 ***\nD_HEX_ID1381  0.3764680  0.0487586     7.721 1.15e-14 ***\nD_HEX_ID1382 -0.4447985  0.0489296    -9.091  &lt; 2e-16 ***\nD_HEX_ID1383 -3.2562932  0.0529199   -61.533  &lt; 2e-16 ***\nD_HEX_ID1388 -0.8136891  0.0491599   -16.552  &lt; 2e-16 ***\nD_HEX_ID1389 -1.0886957  0.0492942   -22.086  &lt; 2e-16 ***\nD_HEX_ID1390 -0.6456340  0.0491463   -13.137  &lt; 2e-16 ***\nD_HEX_ID1391 -0.0330746  0.0489311    -0.676 0.499078    \nD_HEX_ID1392 -0.7624782  0.0502893   -15.162  &lt; 2e-16 ***\nD_HEX_ID1393 -1.4761756  0.0495628   -29.784  &lt; 2e-16 ***\nD_HEX_ID1394 -0.9456220  0.0491015   -19.259  &lt; 2e-16 ***\nD_HEX_ID1395 -1.3122954  0.0492189   -26.662  &lt; 2e-16 ***\nD_HEX_ID1396 -0.7133852  0.0489895   -14.562  &lt; 2e-16 ***\nD_HEX_ID1397 -1.6006725  0.0493511   -32.434  &lt; 2e-16 ***\nD_HEX_ID1398 -1.9602362  0.0508127   -38.578  &lt; 2e-16 ***\nD_HEX_ID1400 -2.5950286  0.0501487   -51.747  &lt; 2e-16 ***\nD_HEX_ID1401 -0.7436824  0.0488209   -15.233  &lt; 2e-16 ***\nD_HEX_ID1402 -1.5065363  0.0490365   -30.723  &lt; 2e-16 ***\nD_HEX_ID1404 -1.9359038  0.0540345   -35.827  &lt; 2e-16 ***\nD_HEX_ID1410 -0.1970014  0.0489217    -4.027 5.65e-05 ***\nD_HEX_ID1411 -0.6552631  0.0492428   -13.307  &lt; 2e-16 ***\nD_HEX_ID1412  0.0207437  0.0488494     0.425 0.671094    \nD_HEX_ID1413 -0.4640375  0.0489955    -9.471  &lt; 2e-16 ***\nD_HEX_ID1414 -0.8595511  0.0490387   -17.528  &lt; 2e-16 ***\nD_HEX_ID1415 -0.6374693  0.0490039   -13.009  &lt; 2e-16 ***\nD_HEX_ID1416 -1.0960392  0.0491885   -22.282  &lt; 2e-16 ***\nD_HEX_ID1417 -1.1573421  0.0490478   -23.596  &lt; 2e-16 ***\nD_HEX_ID1418 -1.1249006  0.0490533   -22.932  &lt; 2e-16 ***\nD_HEX_ID1419 -1.4233559  0.0493198   -28.860  &lt; 2e-16 ***\nD_HEX_ID1422 -1.9604415  0.0491514   -39.886  &lt; 2e-16 ***\nD_HEX_ID1423 -1.3555058  0.0490028   -27.662  &lt; 2e-16 ***\nD_HEX_ID1430 -0.0344445  0.0489548    -0.704 0.481682    \nD_HEX_ID1431  0.4601347  0.0488061     9.428  &lt; 2e-16 ***\nD_HEX_ID1432 -0.0305947  0.0488483    -0.626 0.531104    \nD_HEX_ID1433 -0.9343934  0.0496182   -18.832  &lt; 2e-16 ***\nD_HEX_ID1434  0.0610701  0.0488499     1.250 0.211241    \nD_HEX_ID1435 -0.5337262  0.0489128   -10.912  &lt; 2e-16 ***\nD_HEX_ID1436 -2.0371396  0.0501506   -40.620  &lt; 2e-16 ***\nD_HEX_ID1437 -1.2300251  0.0491285   -25.037  &lt; 2e-16 ***\nD_HEX_ID1438 -0.7112964  0.0488729   -14.554  &lt; 2e-16 ***\nD_HEX_ID1439  0.0572660  0.0488103     1.173 0.240701    \nD_HEX_ID1440 -0.5317666  0.0490935   -10.832  &lt; 2e-16 ***\nD_HEX_ID1442 -3.5442888  0.0517682   -68.465  &lt; 2e-16 ***\nD_HEX_ID1443 -1.8179305  0.0491059   -37.021  &lt; 2e-16 ***\nD_HEX_ID1444 -0.7856203  0.0491101   -15.997  &lt; 2e-16 ***\nD_HEX_ID1452  0.6670291  0.0487762    13.675  &lt; 2e-16 ***\nD_HEX_ID1453 -0.1300177  0.0489297    -2.657 0.007879 ** \nD_HEX_ID1454 -1.1697598  0.0499697   -23.409  &lt; 2e-16 ***\nD_HEX_ID1455 -0.7506248  0.0492231   -15.249  &lt; 2e-16 ***\nD_HEX_ID1456 -0.7061673  0.0490297   -14.403  &lt; 2e-16 ***\nD_HEX_ID1457 -0.1700685  0.0488969    -3.478 0.000505 ***\nD_HEX_ID1458  0.7781630  0.0487401    15.966  &lt; 2e-16 ***\nD_HEX_ID1459 -1.9903204  0.0493986   -40.291  &lt; 2e-16 ***\nD_HEX_ID1460 -0.8015453  0.0488858   -16.396  &lt; 2e-16 ***\nD_HEX_ID1461 -0.9147348  0.0491558   -18.609  &lt; 2e-16 ***\nD_HEX_ID1464 -1.8915780  0.0492554   -38.403  &lt; 2e-16 ***\nD_HEX_ID1465 -2.6844775  0.0500009   -53.689  &lt; 2e-16 ***\nD_HEX_ID1472 -0.4146071  0.0492592    -8.417  &lt; 2e-16 ***\nD_HEX_ID1473  0.4305876  0.0488160     8.821  &lt; 2e-16 ***\nD_HEX_ID1474  0.3139679  0.0487879     6.435 1.23e-10 ***\nD_HEX_ID1475 -0.1460401  0.0488755    -2.988 0.002808 ** \nD_HEX_ID1476 -1.0613148  0.0492118   -21.566  &lt; 2e-16 ***\nD_HEX_ID1477  0.6979331  0.0487303    14.322  &lt; 2e-16 ***\nD_HEX_ID1478 -1.0458387  0.0489816   -21.352  &lt; 2e-16 ***\nD_HEX_ID1479 -1.7865333  0.0492611   -36.267  &lt; 2e-16 ***\nD_HEX_ID1480  0.5158783  0.0487401    10.584  &lt; 2e-16 ***\nD_HEX_ID1481 -1.4814869  0.0493245   -30.036  &lt; 2e-16 ***\nD_HEX_ID1482  0.0410232  0.0489368     0.838 0.401868    \nD_HEX_ID1485 -3.1100088  0.0504270   -61.674  &lt; 2e-16 ***\nD_HEX_ID1494  0.2664120  0.0488677     5.452 4.99e-08 ***\nD_HEX_ID1495 -0.6110512  0.0490336   -12.462  &lt; 2e-16 ***\nD_HEX_ID1496  0.2875079  0.0487918     5.893 3.80e-09 ***\nD_HEX_ID1497 -1.0894618  0.0492709   -22.112  &lt; 2e-16 ***\nD_HEX_ID1498 -0.9106387  0.0490830   -18.553  &lt; 2e-16 ***\nD_HEX_ID1499 -0.8098429  0.0488982   -16.562  &lt; 2e-16 ***\nD_HEX_ID1500 -1.1513782  0.0494829   -23.268  &lt; 2e-16 ***\nD_HEX_ID1501 -0.5731043  0.0488506   -11.732  &lt; 2e-16 ***\nD_HEX_ID1502 -1.0387396  0.0489741   -21.210  &lt; 2e-16 ***\nD_HEX_ID1506 -3.3459513  0.0818720   -40.868  &lt; 2e-16 ***\nD_HEX_ID1514 -4.0060131  0.7135716    -5.614 1.98e-08 ***\nD_HEX_ID1515 -0.7720868  0.0511707   -15.088  &lt; 2e-16 ***\nD_HEX_ID1516  0.3248415  0.0487955     6.657 2.79e-11 ***\nD_HEX_ID1517 -0.5612454  0.0491288   -11.424  &lt; 2e-16 ***\nD_HEX_ID1518 -1.4477361  0.0493839   -29.316  &lt; 2e-16 ***\nD_HEX_ID1519 -1.2062667  0.0493824   -24.427  &lt; 2e-16 ***\nD_HEX_ID1520 -1.0018900  0.0489859   -20.453  &lt; 2e-16 ***\nD_HEX_ID1521 -1.5951275  0.0492827   -32.367  &lt; 2e-16 ***\nD_HEX_ID1522 -0.8521733  0.0489403   -17.413  &lt; 2e-16 ***\nD_HEX_ID1523 -0.3947349  0.0491313    -8.034 9.41e-16 ***\nD_HEX_ID1524 -1.7882652  0.0501238   -35.677  &lt; 2e-16 ***\nD_HEX_ID1527 -4.3294165  0.0589886   -73.394  &lt; 2e-16 ***\nD_HEX_ID1535 -1.0333095  0.0801419   -12.893  &lt; 2e-16 ***\nD_HEX_ID1536 -2.1149943  0.0559079   -37.830  &lt; 2e-16 ***\nD_HEX_ID1537 -0.3450819  0.0491260    -7.024 2.15e-12 ***\nD_HEX_ID1538 -0.4457640  0.0489518    -9.106  &lt; 2e-16 ***\nD_HEX_ID1539 -0.4384046  0.0488873    -8.968  &lt; 2e-16 ***\nD_HEX_ID1540 -1.6779629  0.0496656   -33.785  &lt; 2e-16 ***\nD_HEX_ID1541 -0.3673002  0.0492193    -7.463 8.49e-14 ***\nD_HEX_ID1542 -1.4754443  0.0496516   -29.716  &lt; 2e-16 ***\nD_HEX_ID1543 -1.8049624  0.0565067   -31.942  &lt; 2e-16 ***\nD_HEX_ID1544 -1.5079612  0.0495612   -30.426  &lt; 2e-16 ***\nD_HEX_ID1547 -2.2487711  0.0511063   -44.002  &lt; 2e-16 ***\nD_HEX_ID1556 -1.3056583  0.0847193   -15.412  &lt; 2e-16 ***\nD_HEX_ID1557 -1.7045778  0.0526200   -32.394  &lt; 2e-16 ***\nD_HEX_ID1558 -0.4900684  0.0503466    -9.734  &lt; 2e-16 ***\nD_HEX_ID1559  0.0936099  0.0488196     1.917 0.055179 .  \nD_HEX_ID1560  0.0358519  0.0488178     0.734 0.462703    \nD_HEX_ID1561 -0.9312272  0.0491664   -18.940  &lt; 2e-16 ***\nD_HEX_ID1562 -3.0043939  0.0516973   -58.115  &lt; 2e-16 ***\nD_HEX_ID1563 -2.0799850  0.0496447   -41.897  &lt; 2e-16 ***\nD_HEX_ID1564 -1.6912276  0.0493915   -34.241  &lt; 2e-16 ***\nD_HEX_ID1565 -1.1501695  0.0490986   -23.426  &lt; 2e-16 ***\nD_HEX_ID1566 -2.7687645  0.0513663   -53.902  &lt; 2e-16 ***\nD_HEX_ID1567 -2.6438229  0.0518173   -51.022  &lt; 2e-16 ***\nD_HEX_ID1568 -1.8256736  0.0502567   -36.327  &lt; 2e-16 ***\nD_HEX_ID1578 -1.8426338  0.1191464   -15.465  &lt; 2e-16 ***\nD_HEX_ID1580 -2.7215881  0.0548427   -49.625  &lt; 2e-16 ***\nD_HEX_ID1581 -0.3758903  0.0489018    -7.687 1.51e-14 ***\nD_HEX_ID1582 -0.2663824  0.0488336    -5.455 4.90e-08 ***\nD_HEX_ID1583 -2.1696996  0.0529635   -40.966  &lt; 2e-16 ***\nD_HEX_ID1584 -2.0725065  0.0504160   -41.108  &lt; 2e-16 ***\nD_HEX_ID1585 -1.3605103  0.0493009   -27.596  &lt; 2e-16 ***\nD_HEX_ID1586 -0.6598437  0.0489357   -13.484  &lt; 2e-16 ***\nD_HEX_ID1589 -3.0955983  0.0535813   -57.774  &lt; 2e-16 ***\nD_HEX_ID1590 -1.9027584  0.0506280   -37.583  &lt; 2e-16 ***\nD_HEX_ID1600 -0.9197250  0.0509266   -18.060  &lt; 2e-16 ***\nD_HEX_ID1601 -1.3535825  0.0492128   -27.505  &lt; 2e-16 ***\nD_HEX_ID1602 -0.9552340  0.0491328   -19.442  &lt; 2e-16 ***\nD_HEX_ID1603  0.0780826  0.0488338     1.599 0.109833    \nD_HEX_ID1604 -2.1553724  0.0498149   -43.268  &lt; 2e-16 ***\nD_HEX_ID1605 -1.1565368  0.0490273   -23.590  &lt; 2e-16 ***\nD_HEX_ID1606 -1.9268066  0.0506517   -38.040  &lt; 2e-16 ***\nD_HEX_ID1607 -0.6285522  0.0488686   -12.862  &lt; 2e-16 ***\nD_HEX_ID1608 -1.3535575  0.0491247   -27.553  &lt; 2e-16 ***\nD_HEX_ID1609 -0.6587111  0.0489675   -13.452  &lt; 2e-16 ***\nD_HEX_ID1610 -2.7414812  0.0559790   -48.973  &lt; 2e-16 ***\nD_HEX_ID1622 -0.6829948  0.0500282   -13.652  &lt; 2e-16 ***\nD_HEX_ID1623 -0.3186609  0.0488522    -6.523 6.89e-11 ***\nD_HEX_ID1624  0.2286123  0.0488222     4.683 2.83e-06 ***\nD_HEX_ID1625 -0.7157809  0.0490088   -14.605  &lt; 2e-16 ***\nD_HEX_ID1626  1.0054883  0.0487231    20.637  &lt; 2e-16 ***\nD_HEX_ID1627 -2.1664841  0.0495470   -43.726  &lt; 2e-16 ***\nD_HEX_ID1628 -0.0479959  0.0488039    -0.983 0.325390    \nD_HEX_ID1629 -3.1229054  0.0510646   -61.156  &lt; 2e-16 ***\nD_HEX_ID1630 -2.7054530  0.0501568   -53.940  &lt; 2e-16 ***\nD_HEX_ID1631 -3.0937319  0.0523908   -59.051  &lt; 2e-16 ***\nD_HEX_ID1642 -3.1461144  0.0583078   -53.957  &lt; 2e-16 ***\nD_HEX_ID1643 -0.8714062  0.0490419   -17.769  &lt; 2e-16 ***\nD_HEX_ID1644 -0.7753197  0.0492635   -15.738  &lt; 2e-16 ***\nD_HEX_ID1645 -0.9978347  0.0490903   -20.327  &lt; 2e-16 ***\nD_HEX_ID1646 -0.8106414  0.0493443   -16.428  &lt; 2e-16 ***\nD_HEX_ID1647 -1.4929931  0.0490926   -30.412  &lt; 2e-16 ***\nD_HEX_ID1648 -1.4036862  0.0490267   -28.631  &lt; 2e-16 ***\nD_HEX_ID1649 -0.7956140  0.0488611   -16.283  &lt; 2e-16 ***\nD_HEX_ID1650 -1.7681809  0.0493262   -35.847  &lt; 2e-16 ***\nD_HEX_ID1664 -5.2141977  0.1261003   -41.350  &lt; 2e-16 ***\nD_HEX_ID1665 -0.2188742  0.0488415    -4.481 7.42e-06 ***\nD_HEX_ID1666 -0.1822669  0.0488365    -3.732 0.000190 ***\nD_HEX_ID1667 -1.4062148  0.0516213   -27.241  &lt; 2e-16 ***\nD_HEX_ID1668 -1.4175105  0.0491578   -28.836  &lt; 2e-16 ***\nD_HEX_ID1670 -1.0799327  0.0489065   -22.082  &lt; 2e-16 ***\nD_HEX_ID1671 -1.4032007  0.0499225   -28.108  &lt; 2e-16 ***\nD_HEX_ID1672 -2.4693883  0.0502997   -49.094  &lt; 2e-16 ***\nD_HEX_ID1684 -0.7551474  0.0496985   -15.195  &lt; 2e-16 ***\nD_HEX_ID1685 -1.6300854  0.0494788   -32.945  &lt; 2e-16 ***\nD_HEX_ID1686 -0.8318496  0.0489966   -16.978  &lt; 2e-16 ***\nD_HEX_ID1687 -0.6001934  0.0491528   -12.211  &lt; 2e-16 ***\nD_HEX_ID1688 -1.3617312  0.0491663   -27.696  &lt; 2e-16 ***\nD_HEX_ID1689 -2.3013290  0.0498846   -46.133  &lt; 2e-16 ***\nD_HEX_ID1690 -2.8378335  0.0504501   -56.250  &lt; 2e-16 ***\nD_HEX_ID1691 -0.9971534  0.0488967   -20.393  &lt; 2e-16 ***\nD_HEX_ID1692 -2.8731092  0.0508339   -56.520  &lt; 2e-16 ***\nD_HEX_ID1706 -1.0140938  0.0493178   -20.562  &lt; 2e-16 ***\nD_HEX_ID1707 -1.7318123  0.0493925   -35.062  &lt; 2e-16 ***\nD_HEX_ID1708 -1.1030020  0.0490840   -22.472  &lt; 2e-16 ***\nD_HEX_ID1709 -0.4207771  0.0488962    -8.606  &lt; 2e-16 ***\nD_HEX_ID1710 -0.6790409  0.0489514   -13.872  &lt; 2e-16 ***\nD_HEX_ID1711 -0.0339780  0.0487993    -0.696 0.486253    \nD_HEX_ID1712 -0.9568709  0.0488733   -19.579  &lt; 2e-16 ***\nD_HEX_ID1713 -3.3559866  0.0512239   -65.516  &lt; 2e-16 ***\nD_HEX_ID1714 -2.0349981  0.0494715   -41.135  &lt; 2e-16 ***\nD_HEX_ID1727 -0.4703323  0.0489846    -9.602  &lt; 2e-16 ***\nD_HEX_ID1728 -0.4462890  0.0488824    -9.130  &lt; 2e-16 ***\nD_HEX_ID1729 -0.3047893  0.0488573    -6.238 4.42e-10 ***\nD_HEX_ID1730 -1.4862490  0.0494896   -30.032  &lt; 2e-16 ***\nD_HEX_ID1731 -0.8261256  0.0489477   -16.878  &lt; 2e-16 ***\nD_HEX_ID1732 -1.0874341  0.0489037   -22.236  &lt; 2e-16 ***\nD_HEX_ID1733 -2.3364329  0.0494242   -47.273  &lt; 2e-16 ***\nD_HEX_ID1734 -1.1584399  0.0489337   -23.674  &lt; 2e-16 ***\nD_HEX_ID1735 -1.7877992  0.0508718   -35.143  &lt; 2e-16 ***\nD_HEX_ID1748 -1.4967013  0.0495334   -30.216  &lt; 2e-16 ***\nD_HEX_ID1749 -0.2334383  0.0488314    -4.780 1.75e-06 ***\nD_HEX_ID1750 -0.3346732  0.0488567    -6.850 7.38e-12 ***\nD_HEX_ID1751 -0.8113992  0.0490787   -16.533  &lt; 2e-16 ***\nD_HEX_ID1753 -0.6447257  0.0488852   -13.189  &lt; 2e-16 ***\nD_HEX_ID1754  0.2727235  0.0487447     5.595 2.21e-08 ***\nD_HEX_ID1755 -0.5475132  0.0488074   -11.218  &lt; 2e-16 ***\nD_HEX_ID1756 -1.5795837  0.0490176   -32.225  &lt; 2e-16 ***\nD_HEX_ID1757 -4.1518494  0.0551214   -75.322  &lt; 2e-16 ***\nD_HEX_ID1769 -0.9947772  0.0491194   -20.252  &lt; 2e-16 ***\nD_HEX_ID1770 -0.8899606  0.0492548   -18.068  &lt; 2e-16 ***\nD_HEX_ID1771 -0.1974230  0.0489277    -4.035 5.46e-05 ***\nD_HEX_ID1772  0.8220694  0.0491870    16.713  &lt; 2e-16 ***\nD_HEX_ID1774 -1.8395769  0.0492126   -37.380  &lt; 2e-16 ***\nD_HEX_ID1775 -2.2846687  0.0493902   -46.257  &lt; 2e-16 ***\nD_HEX_ID1776  0.0288183  0.0487574     0.591 0.554484    \nD_HEX_ID1777 -2.1567396  0.0493150   -43.734  &lt; 2e-16 ***\nD_HEX_ID1778 -2.9955593  0.0534804   -56.012  &lt; 2e-16 ***\nD_HEX_ID1790 -0.1414427  0.0489314    -2.891 0.003845 ** \nD_HEX_ID1791 -0.6856012  0.0490262   -13.984  &lt; 2e-16 ***\nD_HEX_ID1792 -0.6719508  0.0492148   -13.653  &lt; 2e-16 ***\nD_HEX_ID1793 -0.6351644  0.0490132   -12.959  &lt; 2e-16 ***\nD_HEX_ID1794  1.0090629  0.0492982    20.469  &lt; 2e-16 ***\nD_HEX_ID1795 -2.9606239  0.0531659   -55.687  &lt; 2e-16 ***\nD_HEX_ID1796 -1.2237819  0.0490095   -24.970  &lt; 2e-16 ***\nD_HEX_ID1797 -1.5429831  0.0490111   -31.482  &lt; 2e-16 ***\nD_HEX_ID1798 -1.4868811  0.0489838   -30.355  &lt; 2e-16 ***\nD_HEX_ID1799 -2.5410019  0.0497364   -51.089  &lt; 2e-16 ***\nD_HEX_ID1800 -3.9991254  0.0707483   -56.526  &lt; 2e-16 ***\nD_HEX_ID1811 -1.2339353  0.0493045   -25.027  &lt; 2e-16 ***\nD_HEX_ID1812  0.1637404  0.0487854     3.356 0.000790 ***\nD_HEX_ID1813  0.3083092  0.0487803     6.320 2.61e-10 ***\nD_HEX_ID1817 -2.7578058  0.0503002   -54.827  &lt; 2e-16 ***\nD_HEX_ID1818 -2.0232272  0.0491118   -41.196  &lt; 2e-16 ***\nD_HEX_ID1819 -0.1573664  0.0487746    -3.226 0.001254 ** \nD_HEX_ID1820 -4.6412252  0.0627732   -73.936  &lt; 2e-16 ***\nD_HEX_ID1832  0.1452381  0.0488513     2.973 0.002948 ** \nD_HEX_ID1833 -1.2920992  0.0491951   -26.265  &lt; 2e-16 ***\nD_HEX_ID1834 -1.3686490  0.0491638   -27.839  &lt; 2e-16 ***\nD_HEX_ID1835 -1.2632755  0.0492811   -25.634  &lt; 2e-16 ***\nD_HEX_ID1837 -1.3753083  0.0507229   -27.114  &lt; 2e-16 ***\nD_HEX_ID1839 -2.8139815  0.0502037   -56.051  &lt; 2e-16 ***\nD_HEX_ID1840 -0.1254473  0.0487897    -2.571 0.010135 *  \nD_HEX_ID1841 -3.6326621  0.0541635   -67.068  &lt; 2e-16 ***\nD_HEX_ID1842 -1.2830113  0.0516385   -24.846  &lt; 2e-16 ***\nD_HEX_ID1853 -0.9755811  0.0490629   -19.884  &lt; 2e-16 ***\nD_HEX_ID1854 -0.6292816  0.0489554   -12.854  &lt; 2e-16 ***\nD_HEX_ID1855 -0.3087756  0.0488979    -6.315 2.71e-10 ***\nD_HEX_ID1858 -0.3590308  0.0494756    -7.257 3.97e-13 ***\nD_HEX_ID1860 -2.1593282  0.0525844   -41.064  &lt; 2e-16 ***\nD_HEX_ID1861 -1.7608266  0.0491219   -35.846  &lt; 2e-16 ***\nD_HEX_ID1874 -1.3142584  0.0496951   -26.446  &lt; 2e-16 ***\nD_HEX_ID1875 -2.8927304  0.0528094   -54.777  &lt; 2e-16 ***\nD_HEX_ID1876 -1.7450623  0.0539650   -32.337  &lt; 2e-16 ***\nD_HEX_ID1877 -0.4694058  0.0489276    -9.594  &lt; 2e-16 ***\nD_HEX_ID1880 -1.2455746  0.0508381   -24.501  &lt; 2e-16 ***\nD_HEX_ID1882 -1.7813373  0.0491573   -36.237  &lt; 2e-16 ***\nD_HEX_ID1883 -2.7212147  0.0528989   -51.442  &lt; 2e-16 ***\nD_HEX_ID1895 -0.6557537  0.0490119   -13.379  &lt; 2e-16 ***\nD_HEX_ID1896 -1.6295425  0.0493783   -33.001  &lt; 2e-16 ***\nD_HEX_ID1897 -2.2439096  0.0501469   -44.747  &lt; 2e-16 ***\nD_HEX_ID1898 -2.6579172  0.0545128   -48.758  &lt; 2e-16 ***\nD_HEX_ID1901 -1.7468210  0.0530670   -32.917  &lt; 2e-16 ***\nD_HEX_ID1903 -3.1325095  0.0518720   -60.389  &lt; 2e-16 ***\nD_HEX_ID1917 -1.7081465  0.0495843   -34.449  &lt; 2e-16 ***\nD_HEX_ID1918 -0.4319155  0.0490991    -8.797  &lt; 2e-16 ***\nD_HEX_ID1919 -0.3651498  0.0489080    -7.466 8.26e-14 ***\nD_HEX_ID1922 -0.5622568  0.0499147   -11.264  &lt; 2e-16 ***\nD_HEX_ID1924 -3.2310158  0.0529088   -61.068  &lt; 2e-16 ***\nD_HEX_ID1937 -1.2405237  0.0493972   -25.113  &lt; 2e-16 ***\nD_HEX_ID1938 -0.2889809  0.0488875    -5.911 3.40e-09 ***\nD_HEX_ID1939 -1.4140821  0.0494090   -28.620  &lt; 2e-16 ***\nD_HEX_ID1942 -1.9990901  0.0528855   -37.800  &lt; 2e-16 ***\nD_HEX_ID1959 -1.4916098  0.0496326   -30.053  &lt; 2e-16 ***\nD_HEX_ID1960  0.8896093  0.0487322    18.255  &lt; 2e-16 ***\nD_HEX_ID1961 -1.8668690  0.0498670   -37.437  &lt; 2e-16 ***\nD_HEX_ID1962 -0.9893137  0.0491144   -20.143  &lt; 2e-16 ***\nD_HEX_ID1964 -0.2977366  0.0501147    -5.941 2.83e-09 ***\nD_HEX_ID1979 -1.1640026  0.0494919   -23.519  &lt; 2e-16 ***\nD_HEX_ID1980 -1.3344232  0.0491663   -27.141  &lt; 2e-16 ***\nD_HEX_ID1981 -1.4723851  0.0492865   -29.874  &lt; 2e-16 ***\nD_HEX_ID1982 -1.8339760  0.0503131   -36.451  &lt; 2e-16 ***\nD_HEX_ID1983 -0.9760730  0.0490706   -19.891  &lt; 2e-16 ***\nD_HEX_ID1984 -0.9031101  0.0490988   -18.394  &lt; 2e-16 ***\nD_HEX_ID1985 -0.7408871  0.0490414   -15.107  &lt; 2e-16 ***\nD_HEX_ID2001 -1.0627747  0.0491647   -21.617  &lt; 2e-16 ***\nD_HEX_ID2002 -0.9245649  0.0489504   -18.888  &lt; 2e-16 ***\nD_HEX_ID2003 -0.3584415  0.0488775    -7.333 2.24e-13 ***\nD_HEX_ID2004 -0.5490610  0.0489355   -11.220  &lt; 2e-16 ***\nD_HEX_ID2005 -1.1705683  0.0491248   -23.828  &lt; 2e-16 ***\nD_HEX_ID2006 -0.2555223  0.0489084    -5.225 1.75e-07 ***\nD_HEX_ID2007 -3.6797757  0.0581171   -63.317  &lt; 2e-16 ***\nD_HEX_ID2022 -0.6199714  0.0491919   -12.603  &lt; 2e-16 ***\nD_HEX_ID2023 -0.5635044  0.0489213   -11.519  &lt; 2e-16 ***\nD_HEX_ID2024 -0.3257386  0.0488564    -6.667 2.61e-11 ***\nD_HEX_ID2025 -1.5178301  0.0491576   -30.877  &lt; 2e-16 ***\nD_HEX_ID2026 -2.1948889  0.0502044   -43.719  &lt; 2e-16 ***\nD_HEX_ID2027 -0.3167887  0.0489066    -6.477 9.33e-11 ***\nD_HEX_ID2043 -1.8674731  0.0500254   -37.330  &lt; 2e-16 ***\nD_HEX_ID2044 -1.0185787  0.0490549   -20.764  &lt; 2e-16 ***\nD_HEX_ID2045 -1.6265344  0.0501852   -32.411  &lt; 2e-16 ***\nD_HEX_ID2046 -0.2233200  0.0488149    -4.575 4.77e-06 ***\nD_HEX_ID2047 -2.0683048  0.0496532   -41.655  &lt; 2e-16 ***\nD_HEX_ID2048 -1.8245760  0.0494920   -36.866  &lt; 2e-16 ***\nD_HEX_ID2049 -3.5695596  0.0567058   -62.949  &lt; 2e-16 ***\nD_HEX_ID2064 -1.2315575  0.0492778   -24.992  &lt; 2e-16 ***\nD_HEX_ID2065 -1.4691029  0.0493313   -29.780  &lt; 2e-16 ***\nD_HEX_ID2066 -3.5814124  0.0609490   -58.761  &lt; 2e-16 ***\nD_HEX_ID2067  1.3106860  0.0487227    26.901  &lt; 2e-16 ***\nD_HEX_ID2068 -2.0632316  0.0505509   -40.815  &lt; 2e-16 ***\nD_HEX_ID2069 -1.5440716  0.0494290   -31.238  &lt; 2e-16 ***\nD_HEX_ID2085 -1.1520336  0.0493617   -23.339  &lt; 2e-16 ***\nD_HEX_ID2086  0.3559684  0.0488227     7.291 3.08e-13 ***\nD_HEX_ID2087  0.0142618  0.0488506     0.292 0.770327    \nD_HEX_ID2088 -1.2092927  0.0490480   -24.655  &lt; 2e-16 ***\nD_HEX_ID2089 -1.8401410  0.0496991   -37.026  &lt; 2e-16 ***\nD_HEX_ID2090  0.9904880  0.0487448    20.320  &lt; 2e-16 ***\nD_HEX_ID2091 -4.1820501  0.0792961   -52.740  &lt; 2e-16 ***\nD_HEX_ID2105 -2.2323421  0.0939888   -23.751  &lt; 2e-16 ***\nD_HEX_ID2106 -2.5410520  0.0511413   -49.687  &lt; 2e-16 ***\nD_HEX_ID2107 -0.2292253  0.0489033    -4.687 2.77e-06 ***\nD_HEX_ID2108 -0.1407184  0.0489146    -2.877 0.004017 ** \nD_HEX_ID2109 -1.4949828  0.0491506   -30.416  &lt; 2e-16 ***\nD_HEX_ID2110 -2.4078153  0.0503994   -47.775  &lt; 2e-16 ***\nD_HEX_ID2111 -3.3433329  0.0592796   -56.399  &lt; 2e-16 ***\nD_HEX_ID2128 -0.9954148  0.0495998   -20.069  &lt; 2e-16 ***\nD_HEX_ID2129 -1.4738489  0.0504264   -29.228  &lt; 2e-16 ***\nD_HEX_ID2130 -0.9896948  0.0490065   -20.195  &lt; 2e-16 ***\nD_HEX_ID2131 -1.0467360  0.0492722   -21.244  &lt; 2e-16 ***\nD_HEX_ID2132 -1.4819800  0.0492962   -30.063  &lt; 2e-16 ***\nD_HEX_ID2148 -1.4917206  0.0509681   -29.268  &lt; 2e-16 ***\nD_HEX_ID2149 -1.6259722  0.0500024   -32.518  &lt; 2e-16 ***\nD_HEX_ID2150 -1.2662895  0.0494314   -25.617  &lt; 2e-16 ***\nD_HEX_ID2151  0.3992181  0.0487783     8.184 2.74e-16 ***\nD_HEX_ID2152 -0.5613891  0.0489716   -11.464  &lt; 2e-16 ***\nD_HEX_ID2153 -1.8420838  0.0501032   -36.766  &lt; 2e-16 ***\nD_HEX_ID2171 -0.3214496  0.0489950    -6.561 5.35e-11 ***\nD_HEX_ID2172 -2.0615219  0.0500941   -41.153  &lt; 2e-16 ***\nD_HEX_ID2173 -1.6837863  0.0493205   -34.140  &lt; 2e-16 ***\nD_HEX_ID2174 -1.0667198  0.0492146   -21.675  &lt; 2e-16 ***\nD_HEX_ID2191 -0.0753166  0.0492854    -1.528 0.126470    \nD_HEX_ID2192 -1.5071010  0.0499580   -30.167  &lt; 2e-16 ***\nD_HEX_ID2193 -0.7089361  0.0490900   -14.442  &lt; 2e-16 ***\nD_HEX_ID2194 -0.8755443  0.0490531   -17.849  &lt; 2e-16 ***\nD_HEX_ID2195 -2.7042027  0.0612639   -44.140  &lt; 2e-16 ***\nD_HEX_ID2212 -0.1510300  0.0507302    -2.977 0.002910 ** \nD_HEX_ID2213 -0.4169806  0.0494223    -8.437  &lt; 2e-16 ***\nD_HEX_ID2214  0.3371415  0.0492630     6.844 7.72e-12 ***\nD_HEX_ID2215 -1.3778213  0.0496720   -27.738  &lt; 2e-16 ***\nD_HEX_ID2216 -0.5067726  0.0490702   -10.328  &lt; 2e-16 ***\nD_HEX_ID2233  0.2852271  0.0497685     5.731 9.98e-09 ***\nD_HEX_ID2234  0.8485415  0.0494590    17.156  &lt; 2e-16 ***\nD_HEX_ID2235 -0.5265210  0.0495860   -10.618  &lt; 2e-16 ***\nD_HEX_ID2236 -1.9968637  0.0507253   -39.366  &lt; 2e-16 ***\nD_HEX_ID2237 -0.4902544  0.0501585    -9.774  &lt; 2e-16 ***\nD_HEX_ID2256 -0.2718696  0.0503281    -5.402 6.59e-08 ***\nD_HEX_ID2257 -2.6721305  0.0561379   -47.599  &lt; 2e-16 ***\nD_HEX_ID2258 -0.7572970  0.0492822   -15.367  &lt; 2e-16 ***\nD_HEX_ID2259  0.3356369  0.0498646     6.731 1.69e-11 ***\nD_HEX_ID2277 -1.5908203  0.0557985   -28.510  &lt; 2e-16 ***\nD_HEX_ID2278 -1.2548461  0.0514823   -24.374  &lt; 2e-16 ***\nD_HEX_ID2279 -0.5066196  0.0493005   -10.276  &lt; 2e-16 ***\nD_HEX_ID2280 -1.7990565  0.0590036   -30.491  &lt; 2e-16 ***\nD_HEX_ID2297 -1.6435291  0.0519220   -31.654  &lt; 2e-16 ***\nD_HEX_ID2300 -1.5595961  0.0530363   -29.406  &lt; 2e-16 ***\nD_HEX_ID2301 -0.8315171  0.0497718   -16.707  &lt; 2e-16 ***\nD_HEX_ID2318  0.6024461  0.0490174    12.290  &lt; 2e-16 ***\nD_HEX_ID2319  0.6590548  0.0489654    13.460  &lt; 2e-16 ***\nD_HEX_ID2322 -0.3284388  0.0496064    -6.621 3.57e-11 ***\nD_HEX_ID2337  0.1127677  0.0523724     2.153 0.031304 *  \nD_HEX_ID2341  0.8530533  0.0489459    17.428  &lt; 2e-16 ***\nD_HEX_ID2343 -1.2707034  0.0504980   -25.163  &lt; 2e-16 ***\nD_HEX_ID2361 -0.4230124  0.0495629    -8.535  &lt; 2e-16 ***\nD_HEX_ID2364 -2.4139325  0.0583009   -41.405  &lt; 2e-16 ***\nD_HEX_ID2379 -1.3532864  0.0566858   -23.873  &lt; 2e-16 ***\nD_HEX_ID2384  0.6111392  0.0491558    12.433  &lt; 2e-16 ***\nD_HEX_ID2405  1.2445934  0.0489639    25.419  &lt; 2e-16 ***\nD_HEX_ID2406 -1.8856274  0.0553627   -34.060  &lt; 2e-16 ***\nD_HEX_ID2426  0.6976195  0.0500661    13.934  &lt; 2e-16 ***\nD_HEX_ID2427  0.9866200  0.0491968    20.055  &lt; 2e-16 ***\nD_HEX_ID2505  0.5694847  0.0527548    10.795  &lt; 2e-16 ***\nlog(dist)    -1.6143636  0.0003127 -5162.746  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 86464223  on 64127  degrees of freedom\nResidual deviance: 21556145  on 62493  degrees of freedom\nAIC: 21906623\n\nNumber of Fisher Scoring iterations: 9"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#performance-table",
    "href": "Take-home_Ex2/Take-home_Ex2.html#performance-table",
    "title": "Take-home_Ex2",
    "section": "10.1 Performance Table",
    "text": "10.1 Performance Table\n\n\nCode\nmodel_list &lt;- list(\n  Unconstrained = uncSIM,\n  Origin_Constrained = orcSIM,\n  Destination_Constrained = decSIM,\n  Doubly_Constrained = docSIM\n)\n\n# Compare performance with multiple metrics\ncompare_performance(model_list, metrics = c(\"AIC\", \"BIC\", \"RMSE\"))\n\n\n# Comparison of Model Performance Indices\n\nName                    | Model |   AIC (weights) |   BIC (weights) |     RMSE\n------------------------------------------------------------------------------\nUnconstrained           |   glm | 4.5e+07 (&lt;.001) | 4.5e+07 (&lt;.001) | 1473.058\nOrigin_Constrained      |   glm | 4.8e+07 (&lt;.001) | 4.8e+07 (&lt;.001) | 1516.515\nDestination_Constrained |   glm | 5.3e+07 (&lt;.001) | 5.3e+07 (&lt;.001) | 1539.518\nDoubly_Constrained      |   glm | 2.2e+07 (&gt;.999) | 2.2e+07 (&gt;.999) | 1043.199\n\n\nAIC (Akaike Information Criterion): - AIC is a measure of the relative quality of statistical models for a given set of data. Lower AIC values indicate a model is considered better because it achieves a good fit with fewer parameters. - The weights in parentheses suggest the probability that each model is the best among the set of models evaluated. A weight near 1 indicates a model is most likely to be the best, while a weight near 0 indicates it is less likely. - According to the AIC weights, the Doubly_Constrained model is overwhelmingly the preferred model (&gt;0.999 probability of being the best model). The other three models have weights less than 0.001, indicating they are less likely to be the best.\nBIC (Bayesian Information Criterion): - BIC is similar to AIC but includes a penalty term for the number of parameters in the model, which tends to favor simpler models. As with AIC, lower BIC values are better. - The weights here, like the AIC weights, indicate that the Doubly_Constrained model is far more likely to be the best model according to the BIC as well.\nRMSE (Root Mean Square Error): - RMSE measures the model’s prediction error, which is the square root of the average squared differences between the predicted and observed values. A lower RMSE value indicates a better fit. - The RMSE values reinforce the AIC and BIC findings, with the Doubly_Constrained model having a significantly lower RMSE (1043.199) than the other models. This means its predictions are, on average, closer to the observed data.\nInterpretation: - The Doubly_Constrained model outperforms the other models in terms of fit and complexity as measured by AIC and BIC. It is also the best model in terms of predictive accuracy, with the lowest RMSE. - The Origin_Constrained model is slightly better than the Unconstrained and Destination_Constrained models, but it still falls short when compared to the Doubly_Constrained model. - The similar performance of the Unconstrained and Destination_Constrained models, both with AIC and BIC weights of less than 0.001, suggests that they might be overfitting the data or including too many parameters that do not contribute to a better fit. - Overall, the analysis suggests that accounting for constraints on both the origin and destination of trips provides the most accurate and efficient model for predicting trip distribution in this context."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#visualization-of-fitted-values",
    "href": "Take-home_Ex2/Take-home_Ex2.html#visualization-of-fitted-values",
    "title": "Take-home_Ex2",
    "section": "10.2 Visualization of fitted values",
    "text": "10.2 Visualization of fitted values\n\n\nCode\n# Function to round fitted values and create a data frame\nround_and_rename &lt;- function(sim_data, sim_name) {\n  as.data.frame(sim_data$fitted.values) %&gt;%\n    round(digits = 0) %&gt;%\n    setNames(paste0(sim_name, \"_TRIPS\"))\n}\n\n# Round and rename fitted values for each simulation\n# Make sure the variables orcSIM, decSIM, etc. are correctly defined in your context\nuncSIM_fitted &lt;- round_and_rename(orcSIM, \"uncSIM\")\norcSIM_fitted &lt;- round_and_rename(orcSIM, \"orcSIM\")\ndecSIM_fitted &lt;- round_and_rename(decSIM, \"decSIM\")\ndocSIM_fitted &lt;- round_and_rename(docSIM, \"docSIM\")\n\n# Combine the rounded and renamed fitted values\n# Ensure final_df is defined and contains relevant data\nfinal_df_viz &lt;- final_df %&gt;%\n  cbind(uncSIM_fitted, orcSIM_fitted, decSIM_fitted, docSIM_fitted)\n\n# Create a function to generate a ggplot\ngenerate_ggplot &lt;- function(data, x_col, title) {\n  ggplot(data = data, aes_string(x = x_col, y = \"TRIPS\")) +\n    geom_point(\n      aes(size = TRIPS / 10000),\n      alpha = .6,\n      shape = 21\n    ) +\n    xlim(0, 50000) +\n    geom_smooth(\n      method = \"lm\",\n      se = TRUE,\n      color = \"blue\"\n    ) +\n    labs(title = title) +\n    theme(\n      plot.title = element_text(size = 10),\n      axis.text.x = element_blank(),\n      axis.ticks.x = element_blank(),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank(),\n      legend.position = \"none\"  # Hide the legend\n    )\n}\n\n# Generate ggplots for each simulation\np_unc &lt;- generate_ggplot(final_df_viz, \"uncSIM_TRIPS\", \"Unconstrained\")\np_orc &lt;- generate_ggplot(final_df_viz, \"orcSIM_TRIPS\", \"Origin-constrained\")\np_dec &lt;- generate_ggplot(final_df_viz, \"decSIM_TRIPS\", \"Destination-constrained\")\np_doc &lt;- generate_ggplot(final_df_viz, \"docSIM_TRIPS\", \"Doubly-constrained\")\n\n# Combine the plots using patchwork\ncombined_plot &lt;- p_unc + p_orc + p_dec + p_doc \n\n# Print the combined plot\nprint(combined_plot)\n\n\n\n\n\n\nUnconstrained Model:\n\nThis model shows a lot of variation with many points densely packed at the lower end of the uncSIM_TRIPS axis, suggesting a large number of trips with smaller values.\nThe spread of the points suggests that there’s no restriction on the flow of trips between origins and destinations, leading to a wide range of trip volumes.\n\nOrigin-constrained Model:\n\nThe points are densely concentrated at the lower end of the orcSIM_TRIPS axis, similar to the unconstrained model, which indicates a significant number of trips with lower volumes.\nThe points do not show a clear pattern, which suggests that even with the constraint on the origin, the trip volumes vary widely.\n\nDestination-constrained Model:\n\nLike the other two models above, there is a dense cluster of points at the lower end of the decSIM_TRIPS axis.\nThere’s a noticeable line of points extending up, which may suggest that for certain destinations, the number of trips increases with the trip volume. However, the overall pattern is still quite varied.\n\nDoubly-constrained Model:\n\nThis model exhibits a clearer pattern with points aligning along a trend line, represented by the blue line.\nThe size of the points, representing trip volume, is more varied and extends towards higher trip volumes along the trend line, indicating a more predictable relationship between the simulation’s inputs and the number of trips.\nThis pattern suggests that when both origin and destination constraints are applied, the trip volumes become more predictable, and there is a trend that can be modeled, which is reflected by the regression line.\n\n\nAdditional Insights:\n\nThe presence of many small circles, particularly in the unconstrained and origin-constrained models, indicates a large number of trips with smaller volumes.\nThe doubly-constrained model seems to fit the data best, as indicated by the alignment of the points with the trend line, suggesting that considering both origins and destinations constraints provides a more accurate representation of the trip distribution.\nThe unconstrained and origin-constrained models show that without destination constraints, there’s a wide distribution of trips, which could imply that destinations vary widely and some are much more popular than others."
  }
]