[
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "As urban infrastructures become increasingly digitized, data from sources like buses, taxis, and public utilities offer valuable insights into movement patterns over time and space. The widespread use of technologies like GPS and RFID in vehicles has generated massive datasets, including route and ridership data. Analyzing these datasets can reveal important patterns and characteristics of human movement in a city, benefiting urban management and transport service providers.\nThis study aims to leverage Exploratory Spatial Data Analysis (ESDA), specifically Local Indicators of Spatial Association (LISA) and Emerging Hot Spot Analysis (EHSA), to uncover spatial and spatio-temporal mobility patterns among public bus passengers in Singapore.\n\n\nThe R packages used for the analysis are as follows:\n\nsf: Analyzes and models spatial dependencies in data.\ntmap: Creates thematic maps for visualizing geospatial data.\ntidyverse: A collection of R packages with a unified approach for data manipulation and visualization.\nplotly: Enables interactive and dynamic data visualizations.\nzoo: Handles and analyzes time series data.\nKendall: Computes Kendall’s tau rank correlation coefficient for assessing rank-based associations.\nkableExtra: Enhances ‘knitr’ package’s ‘kable()’ function for styling HTML and LaTeX tables in R Markdown. It offers advanced formatting options like row/column customization, conditional styling, and captioning, elevating tables to publication quality.\nggrain: R-package that allows you to create Raincloud plots - following the ‘Grammar of Graphics’ (i.e., ggplot2)\nDT: Create interactive html tables\nggplot2: R package for creating complex and aesthetically pleasing data visualizations using a grammar of graphics.\ngridExtra: R package that provides functions for arranging multiple grid-based plots on a page, enhancing layout flexibility.\n\n\n\nCode\npacman::p_load(sf, sfdep, tmap, tidyverse, plotly, zoo, Kendall, kableExtra, ggrain, DT, ggplot2, gridExtra)\n\n\n\n\n\n\n\n\n\n\n\n\n\nImport BusOD\n\n\n\n\n\n\n\nCode\n# Load each csv file into R separately\nbus08 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\nbus09 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\nbus10 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n# Combine all rows into single dataframe\norigind &lt;- rbind(bus08, bus09, bus10)\n\nstr(origind)\n\n\nspc_tbl_ [17,118,005 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YEAR_MONTH         : chr [1:17118005] \"2023-08\" \"2023-08\" \"2023-08\" \"2023-08\" ...\n $ DAY_TYPE           : chr [1:17118005] \"WEEKDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKDAY\" ...\n $ TIME_PER_HOUR      : num [1:17118005] 16 16 14 14 17 17 17 17 7 17 ...\n $ PT_TYPE            : chr [1:17118005] \"BUS\" \"BUS\" \"BUS\" \"BUS\" ...\n $ ORIGIN_PT_CODE     : chr [1:17118005] \"04168\" \"04168\" \"80119\" \"80119\" ...\n $ DESTINATION_PT_CODE: chr [1:17118005] \"10051\" \"10051\" \"90079\" \"90079\" ...\n $ TOTAL_TRIPS        : num [1:17118005] 7 2 3 10 5 4 3 22 3 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YEAR_MONTH = col_character(),\n  ..   DAY_TYPE = col_character(),\n  ..   TIME_PER_HOUR = col_double(),\n  ..   PT_TYPE = col_character(),\n  ..   ORIGIN_PT_CODE = col_character(),\n  ..   DESTINATION_PT_CODE = col_character(),\n  ..   TOTAL_TRIPS = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n\n\n\n\n\n\n\nVariables\n\n\n\n\n\n\n\nCode\nhead(origind,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nYEAR_MONTH\nDAY_TYPE\nTIME_PER_HOUR\nPT_TYPE\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTOTAL_TRIPS\n\n\n\n\n2023-08\nWEEKDAY\n16\nBUS\n04168\n10051\n7\n\n\n2023-08\nWEEKENDS/HOLIDAY\n16\nBUS\n04168\n10051\n2\n\n\n2023-08\nWEEKENDS/HOLIDAY\n14\nBUS\n80119\n90079\n3\n\n\n2023-08\nWEEKDAY\n14\nBUS\n80119\n90079\n10\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n44069\n17229\n5\n\n\n2023-08\nWEEKDAY\n17\nBUS\n44069\n17229\n4\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n20281\n20141\n3\n\n\n2023-08\nWEEKDAY\n17\nBUS\n20281\n20141\n22\n\n\n2023-08\nWEEKDAY\n7\nBUS\n19051\n10017\n3\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n11169\n04219\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariables Description\n\n\n\n\n\n\nYEAR_MONTH: Data collection month in the format of YYYY-MM.\nDAY_TYPE: Weekday or Weekends/Holiday.\nTIME_PER_HOUR: Hour of the day in 24 hour format.\nPT_TYPE: Type of public transportation.\nORIGIN_PT_CODE: Identifier for the bus stop where the trip originated.\nDESTINATION_PT_CODE: Identifier for the bus stop where the trip ended.\nTOTAL_TRIPS: Total number of trips recorded for each origin-destination pair.\n\n\n\n\n\n\n\n\n\n\nSummary Statistics and EDA\n\n\n\n\n\n\n\nCode\nsummary(origind)\n\n\n  YEAR_MONTH          DAY_TYPE         TIME_PER_HOUR     PT_TYPE         \n Length:17118005    Length:17118005    Min.   : 0.00   Length:17118005   \n Class :character   Class :character   1st Qu.:10.00   Class :character  \n Mode  :character   Mode  :character   Median :14.00   Mode  :character  \n                                       Mean   :14.06                     \n                                       3rd Qu.:18.00                     \n                                       Max.   :23.00                     \n ORIGIN_PT_CODE     DESTINATION_PT_CODE  TOTAL_TRIPS      \n Length:17118005    Length:17118005     Min.   :    1.00  \n Class :character   Class :character    1st Qu.:    2.00  \n Mode  :character   Mode  :character    Median :    4.00  \n                                        Mean   :   20.46  \n                                        3rd Qu.:   12.00  \n                                        Max.   :36668.00  \n\n\n\n\nCode\n# Count unique values in ORIGIN_PT_CODE\nunique_origin_count &lt;- n_distinct(origind$ORIGIN_PT_CODE)\n\n# Count unique values in DESTINATION_PT_CODE\nunique_destination_count &lt;- n_distinct(origind$DESTINATION_PT_CODE)\n\n# Print the counts\nprint(paste(\"Unique origins:\", unique_origin_count))\n\n\n[1] \"Unique origins: 5075\"\n\n\nCode\nprint(paste(\"Unique destinations:\", unique_destination_count))\n\n\n[1] \"Unique destinations: 5079\"\n\n\n\n\nCode\n# Calculate the mean of TOTAL_TRIPS\nmean_total_trips &lt;- median(origind$TOTAL_TRIPS)\n\n# Count the number of rows where TOTAL_TRIPS is above the mean\nrows_above_mean &lt;- sum(origind$TOTAL_TRIPS &gt; mean_total_trips)\n\n# Print the count\nprint(rows_above_mean)\n\n\n[1] 7977626\n\n\n\n\nMost of the data types have a Class and Mode of “character”\nOver a three-month period, a total of 17,118,005 combinations of bus trips were recorded.\nThere are 5075 unique origin bus stops, and 5079 unique destination bus stops\nOn average, there are 20.46 trips for each bus route, but the highest recorded number of trips for a single route is an exceptional 36,668. This significant discrepancy suggests there might be outliers or anomalies in the data, warranting additional investigation.\nIn a dataset of 17 million trips, the low median of 4, high mean of 20.5, and a maximum of 38,000, along with over 7.9 million trips exceeding the median, indicate a right-skewed distribution. This suggests a concentration of lower-value trips with numerous higher-value outliers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImport BusStop\n\n\n\n\n\n\n\nCode\nbusstop &lt;- st_read(\n    dsn = \"data/geospatial\",\n    layer = \"BusStop\"\n  ) %&gt;%\n  mutate(\n    BUS_STOP_N = as.factor(BUS_STOP_N),\n    BUS_ROOF_N = as.factor(BUS_ROOF_N),\n    LOC_DESC = as.factor(LOC_DESC)\n  )\n\n\nReading layer `BusStop' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\nglimpse(busstop)\n\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;fct&gt; 22069, 32071, 44331, 96081, 11561, 66191, 23389, 54411, 285…\n$ BUS_ROOF_N &lt;fct&gt; B06, B23, B01, B05, B05, B03, B02A, B02, B09, B01, B16, B02…\n$ LOC_DESC   &lt;fct&gt; OPP CEVA LOGISTICS, AFT TRACK 13, BLK 239, GRACE INDEPENDEN…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\n\n\n\n\n\n\n\n\nCoordinate reference system\n\n\n\n\n\n\n\nCode\nst_crs(busstop)\n\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nThe EPSG.io database indicates that the coordinate system for Singapore is SVY21, associated with the EPSG code 3414. However, the ‘busstop’ dataset is currently projected using SVY21 with an EPSG code of 9001, highlighting a need to change to correct it to the EPSG code of 3414.\n\n\nCode\n# Setting the CRS for the busstop data to EPSG 3414\nbusstop &lt;- st_set_crs(busstop, 3414) %&gt;%\n  # Changing the column name for easier integration with main dataframe\n  mutate(\n    ORIGIN_PT_CODE = as.factor(BUS_STOP_N)\n  ) %&gt;%\n  # Keeping only necessary columns for further analysis\n  select(\n    ORIGIN_PT_CODE, \n    LOC_DESC,\n    geometry\n  )\n\n# Verifying the CRS assignment for busstop\nst_crs(busstop)\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#overview",
    "href": "Take-home_Ex1/Take-home_Ex1.html#overview",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "As urban infrastructures become increasingly digitized, data from sources like buses, taxis, and public utilities offer valuable insights into movement patterns over time and space. The widespread use of technologies like GPS and RFID in vehicles has generated massive datasets, including route and ridership data. Analyzing these datasets can reveal important patterns and characteristics of human movement in a city, benefiting urban management and transport service providers.\nThis study aims to leverage Exploratory Spatial Data Analysis (ESDA), specifically Local Indicators of Spatial Association (LISA) and Emerging Hot Spot Analysis (EHSA), to uncover spatial and spatio-temporal mobility patterns among public bus passengers in Singapore.\n\n\nThe R packages used for the analysis are as follows:\n\nsf: Analyzes and models spatial dependencies in data.\ntmap: Creates thematic maps for visualizing geospatial data.\ntidyverse: A collection of R packages with a unified approach for data manipulation and visualization.\nplotly: Enables interactive and dynamic data visualizations.\nzoo: Handles and analyzes time series data.\nKendall: Computes Kendall’s tau rank correlation coefficient for assessing rank-based associations.\nkableExtra: Enhances ‘knitr’ package’s ‘kable()’ function for styling HTML and LaTeX tables in R Markdown. It offers advanced formatting options like row/column customization, conditional styling, and captioning, elevating tables to publication quality.\nggrain: R-package that allows you to create Raincloud plots - following the ‘Grammar of Graphics’ (i.e., ggplot2)\nDT: Create interactive html tables\nggplot2: R package for creating complex and aesthetically pleasing data visualizations using a grammar of graphics.\ngridExtra: R package that provides functions for arranging multiple grid-based plots on a page, enhancing layout flexibility.\n\n\n\nCode\npacman::p_load(sf, sfdep, tmap, tidyverse, plotly, zoo, Kendall, kableExtra, ggrain, DT, ggplot2, gridExtra)\n\n\n\n\n\n\n\n\n\n\n\n\n\nImport BusOD\n\n\n\n\n\n\n\nCode\n# Load each csv file into R separately\nbus08 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\nbus09 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\nbus10 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\n# Combine all rows into single dataframe\norigind &lt;- rbind(bus08, bus09, bus10)\n\nstr(origind)\n\n\nspc_tbl_ [17,118,005 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YEAR_MONTH         : chr [1:17118005] \"2023-08\" \"2023-08\" \"2023-08\" \"2023-08\" ...\n $ DAY_TYPE           : chr [1:17118005] \"WEEKDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKENDS/HOLIDAY\" \"WEEKDAY\" ...\n $ TIME_PER_HOUR      : num [1:17118005] 16 16 14 14 17 17 17 17 7 17 ...\n $ PT_TYPE            : chr [1:17118005] \"BUS\" \"BUS\" \"BUS\" \"BUS\" ...\n $ ORIGIN_PT_CODE     : chr [1:17118005] \"04168\" \"04168\" \"80119\" \"80119\" ...\n $ DESTINATION_PT_CODE: chr [1:17118005] \"10051\" \"10051\" \"90079\" \"90079\" ...\n $ TOTAL_TRIPS        : num [1:17118005] 7 2 3 10 5 4 3 22 3 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YEAR_MONTH = col_character(),\n  ..   DAY_TYPE = col_character(),\n  ..   TIME_PER_HOUR = col_double(),\n  ..   PT_TYPE = col_character(),\n  ..   ORIGIN_PT_CODE = col_character(),\n  ..   DESTINATION_PT_CODE = col_character(),\n  ..   TOTAL_TRIPS = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n\n\n\n\n\n\n\nVariables\n\n\n\n\n\n\n\nCode\nhead(origind,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nYEAR_MONTH\nDAY_TYPE\nTIME_PER_HOUR\nPT_TYPE\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTOTAL_TRIPS\n\n\n\n\n2023-08\nWEEKDAY\n16\nBUS\n04168\n10051\n7\n\n\n2023-08\nWEEKENDS/HOLIDAY\n16\nBUS\n04168\n10051\n2\n\n\n2023-08\nWEEKENDS/HOLIDAY\n14\nBUS\n80119\n90079\n3\n\n\n2023-08\nWEEKDAY\n14\nBUS\n80119\n90079\n10\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n44069\n17229\n5\n\n\n2023-08\nWEEKDAY\n17\nBUS\n44069\n17229\n4\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n20281\n20141\n3\n\n\n2023-08\nWEEKDAY\n17\nBUS\n20281\n20141\n22\n\n\n2023-08\nWEEKDAY\n7\nBUS\n19051\n10017\n3\n\n\n2023-08\nWEEKENDS/HOLIDAY\n17\nBUS\n11169\n04219\n3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariables Description\n\n\n\n\n\n\nYEAR_MONTH: Data collection month in the format of YYYY-MM.\nDAY_TYPE: Weekday or Weekends/Holiday.\nTIME_PER_HOUR: Hour of the day in 24 hour format.\nPT_TYPE: Type of public transportation.\nORIGIN_PT_CODE: Identifier for the bus stop where the trip originated.\nDESTINATION_PT_CODE: Identifier for the bus stop where the trip ended.\nTOTAL_TRIPS: Total number of trips recorded for each origin-destination pair.\n\n\n\n\n\n\n\n\n\n\nSummary Statistics and EDA\n\n\n\n\n\n\n\nCode\nsummary(origind)\n\n\n  YEAR_MONTH          DAY_TYPE         TIME_PER_HOUR     PT_TYPE         \n Length:17118005    Length:17118005    Min.   : 0.00   Length:17118005   \n Class :character   Class :character   1st Qu.:10.00   Class :character  \n Mode  :character   Mode  :character   Median :14.00   Mode  :character  \n                                       Mean   :14.06                     \n                                       3rd Qu.:18.00                     \n                                       Max.   :23.00                     \n ORIGIN_PT_CODE     DESTINATION_PT_CODE  TOTAL_TRIPS      \n Length:17118005    Length:17118005     Min.   :    1.00  \n Class :character   Class :character    1st Qu.:    2.00  \n Mode  :character   Mode  :character    Median :    4.00  \n                                        Mean   :   20.46  \n                                        3rd Qu.:   12.00  \n                                        Max.   :36668.00  \n\n\n\n\nCode\n# Count unique values in ORIGIN_PT_CODE\nunique_origin_count &lt;- n_distinct(origind$ORIGIN_PT_CODE)\n\n# Count unique values in DESTINATION_PT_CODE\nunique_destination_count &lt;- n_distinct(origind$DESTINATION_PT_CODE)\n\n# Print the counts\nprint(paste(\"Unique origins:\", unique_origin_count))\n\n\n[1] \"Unique origins: 5075\"\n\n\nCode\nprint(paste(\"Unique destinations:\", unique_destination_count))\n\n\n[1] \"Unique destinations: 5079\"\n\n\n\n\nCode\n# Calculate the mean of TOTAL_TRIPS\nmean_total_trips &lt;- median(origind$TOTAL_TRIPS)\n\n# Count the number of rows where TOTAL_TRIPS is above the mean\nrows_above_mean &lt;- sum(origind$TOTAL_TRIPS &gt; mean_total_trips)\n\n# Print the count\nprint(rows_above_mean)\n\n\n[1] 7977626\n\n\n\n\nMost of the data types have a Class and Mode of “character”\nOver a three-month period, a total of 17,118,005 combinations of bus trips were recorded.\nThere are 5075 unique origin bus stops, and 5079 unique destination bus stops\nOn average, there are 20.46 trips for each bus route, but the highest recorded number of trips for a single route is an exceptional 36,668. This significant discrepancy suggests there might be outliers or anomalies in the data, warranting additional investigation.\nIn a dataset of 17 million trips, the low median of 4, high mean of 20.5, and a maximum of 38,000, along with over 7.9 million trips exceeding the median, indicate a right-skewed distribution. This suggests a concentration of lower-value trips with numerous higher-value outliers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImport BusStop\n\n\n\n\n\n\n\nCode\nbusstop &lt;- st_read(\n    dsn = \"data/geospatial\",\n    layer = \"BusStop\"\n  ) %&gt;%\n  mutate(\n    BUS_STOP_N = as.factor(BUS_STOP_N),\n    BUS_ROOF_N = as.factor(BUS_ROOF_N),\n    LOC_DESC = as.factor(LOC_DESC)\n  )\n\n\nReading layer `BusStop' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\nglimpse(busstop)\n\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;fct&gt; 22069, 32071, 44331, 96081, 11561, 66191, 23389, 54411, 285…\n$ BUS_ROOF_N &lt;fct&gt; B06, B23, B01, B05, B05, B03, B02A, B02, B09, B01, B16, B02…\n$ LOC_DESC   &lt;fct&gt; OPP CEVA LOGISTICS, AFT TRACK 13, BLK 239, GRACE INDEPENDEN…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\n\n\n\n\n\n\n\n\nCoordinate reference system\n\n\n\n\n\n\n\nCode\nst_crs(busstop)\n\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nThe EPSG.io database indicates that the coordinate system for Singapore is SVY21, associated with the EPSG code 3414. However, the ‘busstop’ dataset is currently projected using SVY21 with an EPSG code of 9001, highlighting a need to change to correct it to the EPSG code of 3414.\n\n\nCode\n# Setting the CRS for the busstop data to EPSG 3414\nbusstop &lt;- st_set_crs(busstop, 3414) %&gt;%\n  # Changing the column name for easier integration with main dataframe\n  mutate(\n    ORIGIN_PT_CODE = as.factor(BUS_STOP_N)\n  ) %&gt;%\n  # Keeping only necessary columns for further analysis\n  select(\n    ORIGIN_PT_CODE, \n    LOC_DESC,\n    geometry\n  )\n\n# Verifying the CRS assignment for busstop\nst_crs(busstop)\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#data-preparation",
    "href": "Take-home_Ex1/Take-home_Ex1.html#data-preparation",
    "title": "Take-home_Ex1",
    "section": "2 Data Preparation",
    "text": "2 Data Preparation\n\n2.1 Aspatial Data\nThe task specified in this particular project requires the computation of passenger trips at the following specific timeframes.\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\n\n2.1.1 Data Type Edit2.1.2 Categorizing DataPreview\n\n\n\n\nCode\norigind &lt;- origind %&gt;%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n\n\nAs mentioned before, ORIGIN_PT_CODE and DESTINATION_PT_CODE’s data type are in character format. Because they represent busstop locations, they should be transformed into factors (categorical data type) for further analysis\n\n\n\n\n\nCode\norigind_agg &lt;- origind %&gt;%\n  # Classify trips into specific time periods based on day type and hour\n  mutate(period = ifelse(DAY_TYPE == \"WEEKDAY\" & \n                         TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9, \n                         \"Weekday morning peak\",\n                    ifelse(DAY_TYPE == \"WEEKDAY\" & \n                           TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20,\n                           \"Weekday evening peak\",\n                      ifelse(DAY_TYPE == \"WEEKENDS/HOLIDAY\" &\n                             TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14,\n                              \"Weekend/PH morning peak\",\n                        ifelse(DAY_TYPE == \"WEEKENDS/HOLIDAY\" & \n                              TIME_PER_HOUR &gt;= 16 & TIME_PER_HOUR &lt;= 19,\n                               \"Weekend/PH evening peak\",\n                    \"Others\"))))\n  ) %&gt;%\n  # Exclude data outside the specified periods for focused analysis\n  filter(\n    period != \"Others\"\n  ) %&gt;%\n  # Aggregate the total number of trips by origin bus stop and month for each classified period\n  group_by(\n    YEAR_MONTH,\n    period,\n    ORIGIN_PT_CODE\n  ) %&gt;%\n  summarise(\n    num_trips = sum(TOTAL_TRIPS)\n  ) %&gt;%\n  ungroup()\n\n\n\nWe categorize and preprocess the data into the time frames as shown above\n\n\n\n\n\nCode\nlist(origind_agg)\n\n\n[[1]]\n# A tibble: 60,168 × 4\n   YEAR_MONTH period               ORIGIN_PT_CODE num_trips\n   &lt;chr&gt;      &lt;chr&gt;                &lt;fct&gt;              &lt;dbl&gt;\n 1 2023-08    Weekday evening peak 01012               8448\n 2 2023-08    Weekday evening peak 01013               7328\n 3 2023-08    Weekday evening peak 01019               3608\n 4 2023-08    Weekday evening peak 01029               9317\n 5 2023-08    Weekday evening peak 01039              12937\n 6 2023-08    Weekday evening peak 01059               2133\n 7 2023-08    Weekday evening peak 01109                322\n 8 2023-08    Weekday evening peak 01112              45010\n 9 2023-08    Weekday evening peak 01113              27233\n10 2023-08    Weekday evening peak 01119               9323\n# ℹ 60,158 more rows\n\n\n\n\n\n\n\n2.2 Data Checks and wrangling\n\n2.2.1 Aspatial Check for duplicates2.2.2 Aspatial Check for Null\n\n\n\n\nCode\n# Count of dupes\ncount_duplicate_rows &lt;- function(df, df_name) {\n  df %&gt;%\n    group_by_all() %&gt;%\n    filter(n() &gt; 1) %&gt;%\n    ungroup() %&gt;%\n    summarise(df_name = df_name, row_count = n())\n}\n\nduplicate1 &lt;- count_duplicate_rows(bus08, \"bus08\")\nduplicate2 &lt;- count_duplicate_rows(bus09, \"bus09\")\nduplicate3 &lt;- count_duplicate_rows(bus10, \"bus10\")\n\nall_duplicates &lt;- bind_rows(duplicate1, duplicate2, duplicate3)\n\n# Output the combined counts\nprint(all_duplicates)\n\n\n# A tibble: 3 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 bus08           0\n2 bus09           0\n3 bus10           0\n\n\n\nThere no duplicates which could adversely impact any join functions in the latter part of the project\n\n\n\n\n\nCode\n# Function to count the number of rows containing null values\ncount_null_rows &lt;- function(df, df_name) {\n  df %&gt;%\n    filter(if_any(everything(), is.na)) %&gt;%\n    summarise(df_name = df_name, row_count = n())\n}\n\n# Apply the function to each dataframe to count rows with nulls\nnulls1 &lt;- count_null_rows(bus08, \"bus08\")\nnulls2 &lt;- count_null_rows(bus09, \"bus09\")\nnulls3 &lt;- count_null_rows(bus10, \"bus10\")\n\n# Combine the results\nall_nulls &lt;- bind_rows(nulls1, nulls2, nulls3)\n\n# Print the counts of rows with nulls\nprint(all_nulls)\n\n\n# A tibble: 3 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 bus08           0\n2 bus09           0\n3 bus10           0\n\n\n\nThere no nulls which could adversely impact any join functions in the latter part of the project"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#data-exploration",
    "href": "Take-home_Ex1/Take-home_Ex1.html#data-exploration",
    "title": "Take-home_Ex1",
    "section": "3 Data Exploration",
    "text": "3 Data Exploration\nUnderstanding daily passenger trip distribution is crucial for urban traffic management and congestion relief, with geospatial analysis providing insights into areas of dense commuter traffic and patterns.\nAs a start, we will look at the distribution of passenger trips for different periods in September 2023\n\n\nCode\n# Generate scatter plots for September 2023 bus passenger data\nbus09_scatter &lt;- origind_agg %&gt;%\n  filter(YEAR_MONTH == \"2023-09\") %&gt;%  # Focus on September 2023\n  ggplot(aes(x = num_trips, y = period, fill = period, color = period)) +  # Set plot aesthetics\n  geom_point(size = 3, alpha = 0.7) +  # Create scatter plot\n  scale_x_continuous(  # Configure x-axis scale\n    labels = scales::number_format(accuracy = 1), \n    breaks = scales::pretty_breaks(n = 5)) +\n  scale_fill_brewer(palette = \"Set2\") +  # Use a Brewer color palette\n  labs(\n    title = \"September 2023: Peak Passenger Volumes in Weekday Mornings\",\n    subtitle = \"Variability during weekdays suggests potential congestion\") + \n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_blank()  # Remove x-axis labels for clarity\n  )  # Adjust plot theme for a clean appearance\n\n# Display the plot\nbus09_scatter\n\n\n\n\n\n\nPassenger counts are notably higher during peak weekday hours as opposed to weekend or public holiday peaks.\nEach peak hour time frame exhibits a distribution skewed toward higher values (right), indicating sporadic instances of unusually high passenger numbers.\nSuch patterns may point to congestion at the Central Business District (CBD), bus stops near the highways, where passengers frequent to change buses, or Bus interchanges.\nSubsequent investigation could ascertain if these occurrences are geographically clustered, helping to identify probable congestion focal points.\n\nNext we explore if the distribution changes across different months (i.e. August to October 2023)\n\n\nCode\n# Generate scatter plots for bus passenger data\norigind_scatter &lt;- origind_agg %&gt;%\n  ggplot(aes(x = period, y = num_trips, fill = period, color = period)) +\n  geom_violin(position = position_nudge(x = 0, y = .2), alpha = 0.5) +  # Create violin plots\n  geom_point(aes(y = num_trips, color = period), \n             position = position_jitter(height = .15), size = .5, alpha = 0.8) +  # Add jittered points\n  facet_wrap(~YEAR_MONTH, nrow = 1) +  # Facet by YEAR_MONTH for comparison\n  scale_y_continuous(labels = scales::number_format(accuracy = 1), \n                     breaks = scales::pretty_breaks(n = 3)) +  # Adjust y-axis scale\n  labs(title = \"Passenger Volume Distribution: Aug - Oct 2023\") +  # Add a descriptive title\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_blank(),\n    axis.text.x = element_blank()  # Remove x-axis labels for clarity\n  )  \n\n# Display the plot\norigind_scatter\n\n\n\n\n\nThe scatter plots indicate a consistent trip distribution across three months, suggesting the presence of bus stops with high passenger volumes, particularly during weekday evenings. This consistency hints at potential congestion hot spots, particularly if these stops are clustered. Consequently, focused Geospatial analysis on September 2023 data will be used to identify these areas."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#spatial-polygon-preparation",
    "href": "Take-home_Ex1/Take-home_Ex1.html#spatial-polygon-preparation",
    "title": "Take-home_Ex1",
    "section": "4 Spatial Polygon preparation",
    "text": "4 Spatial Polygon preparation\n\n4.1 Month- Data Extraction\nextract September 2023 data\n\n\nCode\n# Isolate September 2023 data for focused analysis\norigind09 &lt;- origind_agg %&gt;%\n  filter(YEAR_MONTH == \"2023-09\") %&gt;%  # Targeting September 2023\n  pivot_wider(  # Transform data to wide format for easier analysis\n    names_from = period,\n    values_from = num_trips\n  ) %&gt;%\n  select(-YEAR_MONTH)  # Exclude YEAR_MONTH column from the final output\n\n# Create a datatable visualization for the transformed data\nDT::datatable(origind09,\n              options = list(pageLength = 5, autoWidth = TRUE),\n              rownames = FALSE)  # Configure table display options\n\n\n\n\n\n\n\n\n\n4.2 Left Join to create dataframe\n\n\nCode\norigind09_sf &lt;- left_join(busstop, origind09, by = \"ORIGIN_PT_CODE\")\n\norigind09_sf\n\n\nSimple feature collection with 5161 features and 6 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   ORIGIN_PT_CODE             LOC_DESC Weekday evening peak\n1           22069   OPP CEVA LOGISTICS                   44\n2           32071         AFT TRACK 13                   NA\n3           44331              BLK 239                 1524\n4           96081 GRACE INDEPENDENT CH                  274\n5           11561              BLK 166                  134\n6           66191         AFT CORFE PL                  325\n7           23389              PEC LTD                  388\n8           54411              BLK 527                 1204\n9           28531              BLK 536                 3529\n10          96139              BLK 148                 1152\n   Weekday morning peak Weekend/PH evening peak Weekend/PH morning peak\n1                    13                       2                      20\n2                    NA                       1                      NA\n3                  1701                     630                     707\n4                   286                      99                     114\n5                   152                      79                      77\n6                   386                     193                     234\n7                    49                      81                      18\n8                  2764                     649                    1612\n9                  8000                    2222                    2373\n10                 4406                     735                     997\n                    geometry\n1  POINT (13576.31 32883.65)\n2  POINT (13228.59 44206.38)\n3   POINT (21045.1 40242.08)\n4  POINT (41603.76 35413.11)\n5  POINT (24568.74 30391.85)\n6  POINT (30951.58 38079.61)\n7    POINT (12476.9 32211.6)\n8  POINT (30329.45 39373.92)\n9  POINT (14993.31 36905.61)\n10  POINT (41642.81 36513.9)\n\n\n\n\n4.3 Creating Hexagon Spatial Grid\norigind09_sf , being a dataframe containing spatial points, isn’t ideal for spatial autocorrelation studies that necessitate ‘areas’ to be depicted as polygons. The code that follows will reorganize these bus stop points into a hexagonal lattice for better spatial analysis.\n\n\nCode\norigind09_hx &lt;- st_make_grid(\n    origind09_sf,\n    cellsize = 500,\n    square = FALSE\n  ) %&gt;%\n  st_sf() %&gt;%\n  rowid_to_column(\"hex_id\")\n\n\nThe code above does the following:\n\nThe cellsize parameter is measured in the same units as the origind09_sf dataframe’s coordinate system. Since origind09_sf uses EPSG:3414 projection, which has units in meters, this cellsize defines the hexagon’s width, here chosen to be 500 meters.\nEach hexagon is given a unique hex_id as the primary key.\n\n\n\n4.4 Generate Attribute Dataframe using Hexagon Identifiers\nThe hexagonal grid is designed to contain multiple bus stops, with each hexagon’s hex_id acting as the key for compiling data. The following steps detail the process for structuring attributes based on hex_id:\n\nApply st_join() with the st_within join condition to match bus stop points to their respective hexagons.\nUse st_set_geometry(NULL) to remove the spatial aspect, shifting the focus to attribute consolidation.\nImplement group_by() to consolidate data under a distinct hex_id.\nDeploy summarise() to tally the number of bus stops and to sum up trips for each peak period by hexagon.\nConvert any NA entries to 0 with replace(is.na(.), 0) to clean the dataset. #This is just a precaution although we already did the checks prior\n\n\n\nCode\n# Joining bus stops with hexagonal areas and summarizing data\norigind09_stops &lt;- origind09_sf %&gt;%\n  st_join(origind09_hx, join = st_within) %&gt;%  # Associate bus stops with hexagons\n  group_by(hex_id) %&gt;%  # Group by hexagon ID\n  summarise(\n    total_busstops = n(),  # Count bus stops per hexagon\n    busstop_ids = str_c(ORIGIN_PT_CODE, collapse = \", \"),  # Combine bus stop codes\n        loc_descriptions = str_c(LOC_DESC, collapse = \"; \"),  # Combine location descriptions\n    peak_weekday_morning = sum(`Weekday morning peak`),  # Sum for weekday morning peak\n    peak_weekday_evening = sum(`Weekday evening peak`),  # Sum for weekday evening peak\n    peak_weekend_morning = sum(`Weekend/PH morning peak`),  # Sum for weekend morning peak\n    peak_weekend_evening = sum(`Weekend/PH evening peak`)   # Sum for weekend evening peak\n  ) %&gt;%\n  st_set_geometry(NULL) %&gt;%  # Remove spatial component\n  replace_na(list(peak_weekday_morning = 0, peak_weekday_evening = 0,  # Replace NA with 0\n                  peak_weekend_morning = 0, peak_weekend_evening = 0)) %&gt;%\n  ungroup()  # Remove grouping\n\n# Display the processed data\norigind09_stops\n\n\n# A tibble: 1,524 × 8\n   hex_id total_busstops busstop_ids  loc_descriptions      peak_weekday_morning\n    &lt;int&gt;          &lt;int&gt; &lt;chr&gt;        &lt;chr&gt;                                &lt;dbl&gt;\n 1     34              1 25059        AFT TUAS STH BLVD                       91\n 2     65              1 25751        BEF TUAS STH AVE 14                     41\n 3     99              1 26379        YONG NAM                                50\n 4    127              1 25761        OPP REC S'PORE                         129\n 5    129              2 25719, 26389 THE INDEX; BEF TUAS …                 1104\n 6    130              1 26369        SEE HUP SENG                            34\n 7    131              1 26299        BEF TUAS STH AVE 6                      41\n 8    159              1 25741        HALLIBURTON                             66\n 9    160              1 25711        OPP THE INDEX                          204\n10    161              2 25701, 25709 GLAXOSMITHKLINE; EDG…                  842\n# ℹ 1,514 more rows\n# ℹ 3 more variables: peak_weekday_evening &lt;dbl&gt;, peak_weekend_morning &lt;dbl&gt;,\n#   peak_weekend_evening &lt;dbl&gt;\n\n\n\n\n4.5 Create Spatial Polygon dataframe\n\n\nCode\norigind09_hx &lt;- origind09_hx %&gt;%\n  left_join(origind09_stops,\n            by = \"hex_id\"\n  ) %&gt;%\n  replace(is.na(.), 0)\n\nbus_traffic_09 &lt;- filter(origind09_hx,\n                       total_busstops &gt; 0)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#visualization-and-sense-making",
    "href": "Take-home_Ex1/Take-home_Ex1.html#visualization-and-sense-making",
    "title": "Take-home_Ex1",
    "section": "5 5.0 Visualization and Sense Making",
    "text": "5 5.0 Visualization and Sense Making\nThis sections aims to conduct visualization and sense making of the current data before embarking on more complex methodologies such as Local Indicators of Spatial Association (LISA)\n\n\nCode\n# Switch to tmap interactive viewing mode\ntmap_mode(\"plot\")\n\n# Creating an interactive map of bus traffic\nbus_traffic_09_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +  # Connecting tm_shape directly to tm_fill\n  tm_fill(\n    col = \"total_busstops\",  # Color based on the number of bus stops\n    palette = \"YlGnBu\",  # Using the YlGnBu color palette\n    style = \"cont\",  # Continuous color style\n    id = \"loc_descriptions\",  # Identify hexagons by hex_id\n    popup.vars = c(\"Bus Stops Count\" = \"total_busstops\",\n                   \"Stop Codes\" = \"busstop_ids\"),  # Popup information\n    title = \"Number of Bus Stops\"  # Title for the color legend\n  ) +\n  tm_layout(\n    legend.show = TRUE)  \n\n# Display the interactive map\nbus_traffic_09_map\n\n\n\n\n\nThe map indicates that the central area, which likely includes the Business Districts, the likes of the Central Business districts or One North Business parks, as well as highly populated residential zones areas like Seng Kang, have a higher concentration of bus stops. These areas are known for their high human traffic which necessitates the need for a more conducive and extensive public transportation network to facilitate the daily travel needs of its patrons.\n\nIn contrast, the more unvisited areas of the island, such as Lim Chu Kang, an area marked for more agricultural activities, are marked by lighter shades, highlighting a sparser presence of bus stops.\nThese regions, which are less urbanized or more industrialized typically see lower human traffic.\n\nThe distribution of bus stops in Singapore as seen in the map emulates Singapore’s Land Transport Authority (LTA)’s strategic approach to provide an efficient bus serivice, focusing on providing efficient access and use of resources, as well as connectivity, especially in areas with high human traffic where public transport demand is higher.\n\n\n5.1 Peak Period Analysis\n\n\nCode\nsummary(origind09_sf)\n\n\n ORIGIN_PT_CODE                LOC_DESC    Weekday evening peak\n 11009  :   2   BLK 1              :   6   Min.   :     1      \n 22501  :   2   BLK 25             :   6   1st Qu.:   639      \n 43709  :   2   AFT YIO CHU KANG RD:   5   Median :  1797      \n 47201  :   2   BLK 101            :   5   Mean   :  4464      \n 51071  :   2   BLK 109            :   5   3rd Qu.:  4080      \n 52059  :   2   (Other)            :5126   Max.   :481495      \n (Other):5149   NA's               :   8   NA's   :170         \n Weekday morning peak Weekend/PH evening peak Weekend/PH morning peak\n Min.   :     1       Min.   :     1.0        Min.   :     1         \n 1st Qu.:   414       1st Qu.:   228.5        1st Qu.:   207         \n Median :  1946       Median :   715.0        Median :   742         \n Mean   :  4560       Mean   :  1707.7        Mean   :  1689         \n 3rd Qu.:  5430       3rd Qu.:  1666.0        3rd Qu.:  1889         \n Max.   :328545       Max.   :158693.0        Max.   :112330         \n NA's   :176          NA's   :202             NA's   :180            \n          geometry   \n POINT        :5161  \n epsg:3414    :   0  \n +proj=tmer...:   0  \n                     \n                     \n                     \n                     \n\n\nReinforcing the statements above, the summary has concluded that the data is indeed right skewed, as such the breaks for the following maps will be adjusted to better illustrate the comparisons between peak hour time frames\n\n\nCode\npeak_weekday_morning_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +\n  tm_fill(\n    col = \"peak_weekday_morning\",\n    palette = \"YlGnBu\",\n    title = \"Peak Weekday Morning Traffic\",\n    id = \"loc_descriptions\",\n    showNA = FALSE,\n    alpha = 0.6,\n    breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n  ) +\n  tm_borders() +\n  tm_layout(\n    legend.show = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    legend.width = 0.2,\n    legend.height = 0.5\n  )\n\npeak_weekday_morning_map\n\n\n\n\n\n\n\nCode\npeak_weekday_evening_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +\n  tm_fill(\n    col = \"peak_weekday_evening\",\n    palette = \"YlOrRd\",\n    title = \"Peak Weekday Evening Traffic\",\n    id = \"loc_descriptions\",\n    showNA = FALSE,\n    alpha = 0.6,\n    breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n  ) +\n  tm_borders() +\n  tm_layout(\n    legend.show = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    legend.width = 0.2,\n    legend.height = 0.5\n  )\n\npeak_weekday_evening_map\n\n\n\n\n\n\n\nCode\npeak_weekend_evening_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +  # Added '+' here\n  tm_fill(\n    col = \"peak_weekend_evening\",\n    palette = \"RdPu\",\n    title = \"Peak Weekend Evening Traffic\",\n    id = \"loc_descriptions\",\n    showNA = FALSE,\n    alpha = 0.6,\n    breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n  ) +\n  tm_borders() +\n  tm_layout(\n    legend.show = TRUE,\n    legend.position = c(\"right\", \"top\"),\n    legend.width = 0.2,\n    legend.height = 0.5\n  )\n\npeak_weekend_evening_map\n\n\n\n\n\n\n\nCode\n# Creating a static map of peak weekend evening bus traffic\npeak_weekend_evening_map &lt;- tm_basemap(\"CartoDB.Positron\") +\n  tm_shape(bus_traffic_09) +\n  tm_fill(\n    col = \"peak_weekend_evening\",\n    palette = \"Blues\",\n    title = \"Peak Weekend Evening Traffic\",\n    id = \"loc_descriptions\",\n    showNA = FALSE,\n    alpha = 0.6,\n    breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n  ) +\n  tm_borders() +\n  tm_layout(legend.show = TRUE)\n\n# Display the map\npeak_weekend_evening_map\n\n\n\n\n\nUnsurprisingly, the weekdays’ trip volumes surpass that of the weekends/holidays, most plausibly due to the working crowd. Nonetheless, the areas regardless of the peak hour time frames, the areas which see higher human traffic remains unchanged, highlighting the efficacy of the Singapore bus network in serving the needs of the commuters.\n\n\n\nCode\n# Function to create a scatter plot\ncreate_scatter_plot &lt;- function(data, y_column_name, title, color = \"blue\") {\n  ggplot(data, aes_string(x = \"total_busstops\", y = y_column_name)) +\n    geom_point(alpha = 0.7, color = color) +\n    ylim(0, 500000) +\n    scale_y_continuous(breaks = scales::pretty_breaks(n = 6)) +\n    labs(title = title, x = \"Number of Bus Stops\", y = \"\") +\n    theme(panel.grid = element_blank())  # Removed axis.text.y = element_blank()\n}\n\n# Creating individual scatter plots\nmorning_peak_weekday &lt;- create_scatter_plot(bus_traffic_09, \"peak_weekday_morning\", \"Weekday Morning Peak\", \"blue\")\nevening_peak_weekday &lt;- create_scatter_plot(bus_traffic_09, \"peak_weekday_evening\", \"Weekday Evening Peak\", \"blue\")\nmorning_peak_weekend &lt;- create_scatter_plot(bus_traffic_09, \"peak_weekend_morning\", \"Weekend/PH Morning Peak\", \"green\")\nevening_peak_weekend &lt;- create_scatter_plot(bus_traffic_09, \"peak_weekend_evening\", \"Weekend/PH Evening Peak\", \"green\")\n\n# Combining the plots using grid.arrange\ncombined_plot &lt;- grid.arrange(morning_peak_weekday, evening_peak_weekday, morning_peak_weekend, evening_peak_weekend, ncol = 2, nrow = 2)\n\n\n\n\n\nThe volume of passenger trips appears to be greatest in regions having 4 to 8 bus stops. Contrarily, areas with the most bus stops, ranging from 9 to 11, did not experience the highest levels of passenger traffic during any peak times.\n\nThis indicates the possibility of an ideal number of bus stops within each 500m-wide area that could help in alleviating congestion, measures taken could be to look into replanning bus stops placements so as to not have diminishing returns."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#local-indicators-of-spatial-association",
    "href": "Take-home_Ex1/Take-home_Ex1.html#local-indicators-of-spatial-association",
    "title": "Take-home_Ex1",
    "section": "6 Local Indicators of Spatial Association",
    "text": "6 Local Indicators of Spatial Association\nIn preparing for spatial autocorrelation analysis, we first establish a spatial weights matrix to map the interconnections between hexagonal spatial units by their distance. Key to this setup is ensuring that each unit has at least one, but not all, other units as neighbors to reflect diverse spatial relationships accurately.\nGiven our dataset’s skewed distribution, we’ve chosen to assign 10 neighbors per feature, exceeding the suggested minimum of eight. This approach enhances the robustness of our spatial connectivity analysis.\nOur study area, marked by unevenly distributed bus stops and zones with low residential or business density, leads us to prefer distance-based methods over contiguity-based ones. This choice aligns better with our data’s spatial characteristics.\nWe adopt the Adaptive Distance-Based method, with a fixed number of neighbors, to accommodate our dataset’s right-skewed distribution. This method ensures each hexagon connects with exactly 10 neighbors. We employ the st_knn function to identify neighbors and st_weights to create row-standardized spatial weights, setting a solid foundation for our spatial autocorrelation analysis.\n\n6.1 Global Spatial Association Globally with Global Moran’s I\n\n\nCode\n# Adjusting bus_traffic_09 data with spatial weights\nweightmat_all &lt;- bus_traffic_09 %&gt;%\n  mutate(\n    knn = st_knn(geometry, k = 10),  # Calculating 10 nearest neighbors\n    weight_type = st_weights(knn, style = 'W'),  # Generating weights\n    .before = 1  # Placing the new columns at the beginning\n  )\n\n\n# check the output\nkable(head(weightmat_all))\n\n\n\n\n\nknn\nweight_type\nhex_id\ntotal_busstops\nbusstop_ids\nloc_descriptions\npeak_weekday_morning\npeak_weekday_evening\npeak_weekend_morning\npeak_weekend_evening\ngeometry\n\n\n\n\n2, 4, 5, 8, 9, 12, 16, 22, 23, 38\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n34\n1\n25059\nAFT TUAS STH BLVD\n91\n348\n0\n96\nPOLYGON ((3970.122 27925.48...\n\n\n1, 4, 5, 8, 9, 12, 16, 22, 23, 38\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n65\n1\n25751\nBEF TUAS STH AVE 14\n41\n131\n38\n40\nPOLYGON ((4220.122 28358.49...\n\n\n5, 6, 9, 10, 13, 14, 16, 17, 24, 25\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n99\n1\n26379\nYONG NAM\n50\n278\n78\n84\nPOLYGON ((4470.122 30523.55...\n\n\n1, 2, 8, 9, 12, 16, 22, 23, 38, 39\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n127\n1\n25761\nOPP REC S'PORE\n129\n1689\n246\n454\nPOLYGON ((4720.122 28358.49...\n\n\n3, 6, 9, 10, 12, 13, 14, 16, 17, 24\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n129\n2\n25719, 26389\nTHE INDEX; BEF TUAS STH AVE 5\n1104\n2608\n503\n646\nPOLYGON ((4720.122 30090.54...\n\n\n3, 5, 7, 9, 10, 13, 14, 17, 18, 25\n0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n130\n1\n26369\nSEE HUP SENG\n34\n185\n117\n27\nPOLYGON ((4720.122 30956.57...\n\n\n\n\n\n\n\n\n\nCode\n# Ensure consistent results\nset.seed(5555)\n\n# Assuming 'bus_traffic_09' is a spatial dataset with a 'geometry' column\n# List of columns for peak traffic analysis\nbus_traffic_columns &lt;- c(\"peak_weekday_morning\", \"peak_weekday_evening\", \"peak_weekend_morning\", \"peak_weekend_evening\")\n\n# Function to calculate global Moran's I\ncalculate_moran_i &lt;- function(dataset, column_name, neighbors) {\n  # Validate that the dataset is properly structured as a spatial data frame\n  if (!(\"geometry\" %in% names(dataset))) {\n    stop(\"The dataset does not have a geometry column.\")\n  }\n\n  # Validate that the column_name exists in the dataset\n  if (!(column_name %in% names(dataset))) {\n    stop(paste(\"Column\", column_name, \"not found in the dataset.\"))\n  }\n\n  # Establishing spatial relationships\n  neighbors_list &lt;- st_knn(dataset$geometry, k = neighbors)\n  weights &lt;- st_weights(neighbors_list, style = 'W')\n\n  # Executing Moran's I calculation\n  moran_test_result &lt;- global_moran_perm(dataset[[column_name]], neighbors_list, weights, nsim = 99)\n  \n  # Organizing the output\n  output &lt;- list(\n    column = column_name,\n    moran_i = moran_test_result\n  )\n  \n  return(output)\n}\n\n# Running the Moran's I calculation for each traffic time slot\nmoran_i_results &lt;- lapply(bus_traffic_columns, function(column) calculate_moran_i(bus_traffic_09, column, 10))\n\n# Displaying the calculated results\nprint(moran_i_results)\n\n\n[[1]]\n[[1]]$column\n[1] \"peak_weekday_morning\"\n\n[[1]]$moran_i\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.21341, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[2]]\n[[2]]$column\n[1] \"peak_weekday_evening\"\n\n[[2]]$moran_i\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.061867, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[3]]\n[[3]]$column\n[1] \"peak_weekend_morning\"\n\n[[3]]$moran_i\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15841, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[4]]\n[[4]]$column\n[1] \"peak_weekend_evening\"\n\n[[4]]$moran_i\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.11109, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nFor each of the four time slots, the p-values associated with the Global Moran’s I test are less than 0.05, indicating a rejection of the null hypothesis, which suggests randomness in spatial patterns.\n\nAdditionally, the positive values of the Moran’s I statistics imply a tendency towards clustering in the spatial distribution across all time intervals.\n\n\n6.2 LISA assessment\nInvestigating spatial patterns at a detailed level, we utilize the Local Moran’s I analysis to identify specific areas with strong or weak spatial associations. The methodology categorizes regions based on clustering types like high-high or low-low, revealing areas of similar or contrasting characteristics. We apply the local_moran function from the sfdep package for examining passenger trips at a hexagonal level, which calculates neighbors and weights automatically and uses simulated data for precision.\n\n\nCode\n# Create a function to perform local Moran's I analysis\nget_lisa &lt;- function(weightmat_all, bus_traffic_column, k) {\n  # Check if the bus_traffic_column is valid\n  if (nchar(bus_traffic_column) == 0) {\n    stop(\"The column name provided is empty.\")\n  }\n\n  # Compute spatial weights\n  nb &lt;- st_knn(weightmat_all$geometry, k = k)\n  wt &lt;- st_weights(nb, style = 'W')\n\n  # Perform local Moran's I analysis and create a new data frame\n  result &lt;- weightmat_all %&gt;% \n    mutate(\n      local_moran = local_moran(.data[[bus_traffic_column]], nb, wt, nsim = 99),\n      .before = 1\n    ) %&gt;%\n    unnest(local_moran)\n  \n  return(result)\n}\n\n# Assuming bus_traffic_columns is a vector of column names\nbus_traffic_columns &lt;- c(\"peak_weekday_morning\", \"peak_weekday_evening\", \"peak_weekend_morning\", \"peak_weekend_evening\")\n\n# Initialize a list to store results for each bus_traffic_column\nlisa_results &lt;- list()\n\n# Apply the function for each bus traffic time interval and store results in the list\nfor (btc in bus_traffic_columns) {\n  lisa_results[[btc]] &lt;- get_lisa(weightmat_all, btc, k = 10)\n  \n  # Remove columns that don't belong to the specific time interval\n  unwanted_columns &lt;- setdiff(bus_traffic_columns, btc)\n  lisa_results[[btc]] &lt;- lisa_results[[btc]][, !(names(lisa_results[[btc]]) %in% unwanted_columns)]\n}\n\n# Show sample output in an interactive table\ndatatable(lisa_results[[\"peak_weekday_morning\"]], \n          class = 'cell-border stripe', \n          options = list(pageLength = 5))\n\n\n\n\n\n\n\nWe now utilize the tmap package to generate choropleth maps that display Local Moran’s I values and corresponding p-values for four time intervals. The maps will highlight only significant Local Moran’s I values at a 5% significance level. The existing code is specifically used to extract these key Local Moran’s I values for map creation.\n\n\nCode\nget_sig_lmi_map &lt;- function(lisa_table, title) {\n  \n  sig_lisa_table &lt;- lisa_table %&gt;%\n    filter(p_ii_sim &lt; 0.05)\n  \n  result &lt;- tm_shape(lisa_table) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(sig_lisa_table) +\n    tm_fill(\"ii\", palette = \"Reds\") + \n    tm_borders(alpha = 0.4) +\n    tm_layout(\n      main.title = title,\n      main.title.size = 1.3\n    )\n  \n  return(result)\n  \n}\n# Applying the function to create maps for different peak intervals\n\nsig_lmi_1 &lt;- get_sig_lmi_map(lisa_results[[\"peak_weekday_morning\"]], \"Weekday Morning\" )\nsig_lmi_2 &lt;- get_sig_lmi_map(lisa_results[[\"peak_weekday_evening\"]], \"Weekday Afternoon\" )\nsig_lmi_3 &lt;- get_sig_lmi_map(lisa_results[[\"peak_weekend_morning\"]], \"Weekend Morning\" )\nsig_lmi_4 &lt;- get_sig_lmi_map(lisa_results[[\"peak_weekend_evening\"]], \"Weekend Afternoon\" )\n\ntmap_mode('plot')\n\ntmap_arrange(\n  sig_lmi_1,\n  sig_lmi_2,\n  sig_lmi_3,\n  sig_lmi_4,\n  asp = 2,\n  nrow = 2,\n  ncol = 2\n)\n\n\n\n\n\nNow we zoom into an analysis of which α = 5% for Local Indicators of Spatial Association (LISA)\n\n\nCode\n# Function for constructing thematic maps based on significant Local Moran's I data\ngenerate_thematic_lisa_maps &lt;- function(lisa_data_set, chart_title) {\n  \n  # Filtering for significant Local Moran's I values\n  significant_lisa_data &lt;- lisa_data_set %&gt;%\n    filter(p_ii_sim  &lt; 0.05)\n  \n  # Building the map visualization\n  thematic_map_output &lt;- tm_shape(lisa_data_set) +\n        tm_polygons(alpha = 0.5) +\n        tm_borders(alpha = 0.5) +\n        tm_shape(significant_lisa_data) +\n        tm_fill(\"median\",  \n                id = \"loc_desc\",  \n                palette = c(\"deepskyblue\", \"salmon\", \"green\", \"darkred\"),\n                alpha = 0.7) +\n        tm_borders(alpha = 0.4) +\n        tm_layout(\n            main.title = chart_title,\n            main.title.size = 1.5,\n            legend.position = c(\"left\", \"top\")\n        )\n\n    return(thematic_map_output)\n}\n\n# Creating maps for different time intervals\nlisa_map_morning_peak &lt;- generate_thematic_lisa_maps(lisa_results[[\"peak_weekday_morning\"]], \"Significant LISA - Weekday Morning\")\nlisa_map_evening_peak &lt;- generate_thematic_lisa_maps(lisa_results[[\"peak_weekday_evening\"]], \"Significant LISA - Weekday Evening\")\nlisa_map_weekend_morning &lt;- generate_thematic_lisa_maps(lisa_results[[\"peak_weekend_morning\"]], \"Significant LISA - Weekend Morning\")\nlisa_map_weekend_evening &lt;- generate_thematic_lisa_maps(lisa_results[[\"peak_weekend_evening\"]], \"Significant LISA - Weekend Evening\")\n\n\n\n\nCode\ntmap_mode('plot')\nlisa_map_morning_peak\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nlisa_map_evening_peak\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nlisa_map_weekend_morning\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nlisa_map_weekend_evening\n\n\n\n\n\n\nDeep Sky Blue Areas (Low-Low Clusters): These zones are characterized by fewer trips at bus stops, which are also surrounded by other areas with low trip frequencies, forming a cluster of less busy locations.\nGreen Areas (Low-High Outliers): These areas show unique patterns where bus stops have fewer trips in contrast to neighboring areas, indicating isolated spots of lower activity amidst busier surroundings.\nSalmon Areas (High-Low Outliers): These regions are marked by bus stops with notably higher trip counts than their neighboring areas, highlighting them as exceptional spots of increased activity within less active zones.\nDark Red Areas (High-High Clusters): Here, bus stops see a higher volume of trips, and are in proximity to areas with similarly high activity, suggesting a concentration of busy locations.\n\n\n\n6.3 Findings\n\nHigh-High\n\nWeekday morning vs evening, generally see the high-high clusters in the same areas (Business Districts/ Residential areas, however it is noticed that the clusters generally shrink in size when compared from morning to evening. which could be due to the following reasons:\n\nMorning Peak: Bus use spikes in the morning due to simultaneous commutes to work and schools, creating distinct high-usage clusters.\nEvening Spread: Evening could be seeing a staggered exodus from business hubs to varied locations, diffusing the earlier high-usage patterns.\nShift in Activities: Daytime high traffic in business and industrial zones transitions to residential and leisure areas at night, altering usage patterns.1.\nVaried Destinations: Evening trips are more dispersed as people head to homes, dining, or leisure spots, reducing reliance on main transit hubs.\nDiverse Evening Travel: With more unpredictable routes and choices for non-commuting travel in the evening, the uniform high-usage clusters dissipate.\n\nWeekend mornings see concentrated bus travel to areas busy with shopping and leisure, forming high-high clusters. By evening, these clusters diminish as daytime activities cease and the commuters might have returned home in a staggered fashion outside of the peak hours\n\n\n\nLow-Low\n\nBus trips are less frequent in the industrial western sectors of Singapore, indicating lower public transport usage, possibly due to a sparse population or alternative transport options. These patterns showcase the area’s distinct travel dynamics.\nComparing the maps for weekday mornings and evenings or weekend mornings and evenings, one may notice changes in the size and distribution of low-low clusters. These changes can provide insights into how public transportation demand varies throughout the day and week.\nNotably, you can see some areas such as Woodlands Waterfront Park and West Coast park see their Low-Low cluster shrinking during the weekday evening\nSimilar to the weekday, the low low clusters for the weekend are typically in the industrial areas in the west for both morning and evening"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html",
    "href": "In-class_Ex5/In-class_Ex5.html",
    "title": "In-class_Ex5",
    "section": "",
    "text": "We opt to install the git version directly from GitHub instead of using the one available on (CRAN).\n\n\nCode\ndevtools::install_github(\"LukeCe/spflow\")\n\n\nWe proceed to load spflow along with other necessary R packages into the R environment for use.\n\n\nCode\npacman::p_load(tmap, sf, spdep, sp, Matrix, spflow, reshape2, knitr, tidyverse)\n\n\nTo calibrate Spatial Econometric Interaction Models using the spflow package, we need three datasets: spatial weights, a tibble data frame , destinations, flows, and distances, and a data frame of explanatory variables.\nShapefile will be imported into R environment as a sf tibble data.frame called mpsz\n\n\nCode\nmpsz &lt;- st_read(dsn = \"./data/geospatial\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs=3414)  %&gt;%\n  mutate(\n    SUBZONE_N = as.factor(SUBZONE_N),\n    SUBZONE_C = as.factor(SUBZONE_C),\n    PLN_AREA_N = as.factor(PLN_AREA_N),\n    PLN_AREA_C = as.factor(PLN_AREA_C),\n    REGION_N = as.factor(REGION_N),\n    REGION_C = as.factor(REGION_C),\n  )\n\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Zackkoh94\\ISSS624\\In-class_Ex5\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\n# check the output\nglimpse(mpsz)\n\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;fct&gt; MARINA EAST, INSTITUTION HILL, ROBERTSON QUAY, JURONG ISLAN…\n$ SUBZONE_C  &lt;fct&gt; MESZ01, RVSZ05, SRSZ01, WISZ01, MUSZ02, MPSZ05, WISZ03, WIS…\n$ PLN_AREA_N &lt;fct&gt; MARINA EAST, RIVER VALLEY, SINGAPORE RIVER, WESTERN ISLANDS…\n$ PLN_AREA_C &lt;fct&gt; ME, RV, SR, WI, MU, MP, WI, WI, SI, SI, BM, DT, SV, BM, BM,…\n$ REGION_N   &lt;fct&gt; CENTRAL REGION, CENTRAL REGION, CENTRAL REGION, WEST REGION…\n$ REGION_C   &lt;fct&gt; CR, CR, CR, WR, CR, CR, WR, WR, CR, CR, CR, CR, CR, CR, CR,…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29..., MULTIPOLYGON (…\n\n\n\n\nCode\nbusstop &lt;- st_read(dsn = \"./data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `BusStop' from data source \n  `C:\\Zackkoh94\\ISSS624\\In-class_Ex5\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48280.78 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\n# check the data\nglimpse(busstop)\n\n\nRows: 5,159\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\nIn this study our analysis will be focused on planning subzone with bus stop. In view of this, the code chunk below will be used to perform Point-in-Polygon count analysis.\n\n\nCode\ncentroids &lt;- suppressWarnings({\nst_point_on_surface(st_geometry(mpsz_busstop))\n})\n\nmpsz_nb &lt;- list(\n  \"by_contiguity\" = poly2nb(mpsz_busstop),\n  \"by_distance\" = dnearneigh(centroids, d1 = 0, d2 = 5000),\n  \"by_knn\" = knn2nb(knearneigh(centroids,3))\n  )\n\n\n\n\nCode\nmpsz_nb\n\n\n\n\n\n\nCode\nschools &lt;- read_rds(\"./data/rds/schools.rds\")\n\n\n\n\nCode\nmpsz_nb &lt;- read_rds(\"./data/rds/mpsz_nb.rds\")\nmpsz_flow &lt;- read_rds(\"./data/rds/mpsz_flow.rds\")\nmpsz_var &lt;- read_rds(\"./data/rds/mpsz_var.rds\")\n\n\n\n\nCode\nglimpse(mpsz_nb)\n\n\nList of 3\n $ by_contiguity:List of 313\n  ..$ : int [1:4] 2 3 66 69\n  ..$ : int [1:7] 1 3 32 37 38 69 80\n  ..$ : int [1:7] 1 2 38 65 66 67 71\n  ..$ : int [1:4] 47 75 87 281\n  ..$ : int [1:2] 6 9\n  ..$ : int [1:8] 5 7 8 9 10 12 16 19\n  ..$ : int [1:5] 6 11 12 19 23\n  ..$ : int [1:4] 6 19 28 31\n  ..$ : int [1:7] 5 6 10 13 17 18 70\n  ..$ : int [1:5] 6 9 12 13 16\n  ..$ : int [1:5] 7 14 15 19 23\n  ..$ : int [1:6] 6 7 10 16 20 23\n  ..$ : int [1:6] 9 10 16 17 21 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:5] 11 14 19 23 25\n  ..$ : int [1:9] 6 10 12 13 20 22 27 29 34\n  ..$ : int [1:5] 9 13 18 21 41\n  ..$ : int [1:5] 9 17 39 41 70\n  ..$ : int [1:9] 6 7 8 11 15 25 28 30 31\n  ..$ : int [1:6] 12 16 23 27 32 280\n  ..$ : int [1:6] 13 17 22 36 40 41\n  ..$ : int [1:7] 13 16 21 29 34 35 36\n  ..$ : int [1:10] 7 11 12 14 15 20 25 26 32 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:8] 15 19 23 24 26 30 33 67\n  ..$ : int [1:6] 23 24 25 32 33 38\n  ..$ : int [1:5] 16 20 29 32 37\n  ..$ : int [1:5] 8 19 30 31 64\n  ..$ : int [1:5] 16 22 27 34 37\n  ..$ : int [1:5] 19 25 28 64 67\n  ..$ : int [1:4] 8 19 28 64\n  ..$ : int [1:9] 2 20 23 26 27 33 37 38 280\n  ..$ : int [1:6] 24 25 26 32 38 67\n  ..$ : int [1:6] 16 22 29 35 37 42\n  ..$ : int [1:5] 22 34 36 42 85\n  ..$ : int [1:8] 21 22 35 40 41 42 68 85\n  ..$ : int [1:7] 2 27 29 32 34 42 80\n  ..$ : int [1:6] 2 3 26 32 33 67\n  ..$ : int [1:6] 18 41 51 54 70 76\n  ..$ : int [1:6] 21 36 41 43 46 68\n  ..$ : int [1:8] 17 18 21 36 39 40 46 76\n  ..$ : int [1:6] 34 35 36 37 80 85\n  ..$ : int [1:6] 40 46 48 68 85 278\n  ..$ : int [1:4] 61 82 110 121\n  ..$ : int [1:5] 62 73 79 83 116\n  ..$ : int [1:8] 40 41 43 49 68 76 115 278\n  ..$ : int [1:5] 4 58 84 281 282\n  ..$ : int [1:5] 43 68 85 136 278\n  ..$ : int [1:5] 46 54 76 115 119\n  ..$ : int [1:7] 80 85 86 125 126 131 136\n  ..$ : int [1:6] 39 54 70 118 120 127\n  ..$ : int [1:5] 61 78 111 121 132\n  ..$ : int [1:4] 75 87 128 134\n  ..$ : int [1:7] 39 49 51 76 119 120 135\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:4] 112 118 138 139\n  ..$ : int [1:3] 60 117 126\n  ..$ : int [1:7] 47 84 116 122 123 266 282\n  ..$ : int [1:4] 87 134 137 281\n  ..$ : int [1:8] 57 69 74 77 78 86 117 126\n  ..$ : int [1:5] 44 52 71 78 121\n  ..$ : int [1:6] 45 73 79 82 110 116\n  ..$ : int [1:4] 55 114 129 130\n  ..$ : int [1:5] 28 30 31 67 84\n  ..$ : int [1:5] 3 67 71 73 79\n  ..$ : int [1:5] 1 3 69 71 78\n  ..$ : int [1:11] 3 25 30 33 38 64 65 72 73 81 ...\n  ..$ : int [1:6] 36 40 43 46 48 85\n  ..$ : int [1:8] 1 2 60 66 74 77 78 80\n  ..$ : int [1:5] 9 18 39 51 118\n  ..$ : int [1:7] 3 61 65 66 78 79 82\n  ..$ : int [1:5] 67 73 81 83 84\n  ..$ : int [1:7] 45 62 65 67 72 79 83\n  ..$ : int [1:5] 60 69 77 78 80\n  ..$ : int [1:4] 4 53 87 281\n  ..$ : int [1:5] 39 41 46 49 54\n  ..$ : int [1:5] 60 69 74 80 86\n  ..$ : int [1:7] 52 60 61 66 69 71 74\n  ..$ : int [1:7] 45 62 65 71 73 82 110\n  ..$ : int [1:9] 2 37 42 50 69 74 77 85 86\n  ..$ : int [1:5] 67 72 83 84 266\n  ..$ : int [1:5] 44 62 71 79 110\n  ..$ : int [1:6] 45 72 73 81 116 266\n  ..$ : int [1:7] 47 58 64 67 72 81 266\n  ..$ : int [1:9] 35 36 42 43 48 50 68 80 136\n  ..$ : int [1:5] 50 60 77 80 126\n  ..$ : int [1:6] 4 53 59 75 134 281\n  ..$ : int [1:9] 91 105 108 109 129 130 133 203 287\n  ..$ : int [1:6] 96 103 122 140 178 282\n  ..$ : int [1:7] 100 127 138 141 175 181 271\n  ..$ : int [1:7] 88 108 129 133 139 179 185\n  ..$ : int [1:6] 101 125 131 136 177 194\n  ..$ : int [1:6] 98 102 134 137 188 192\n  ..$ : int [1:5] 126 131 142 176 177\n  ..$ : int [1:7] 101 119 124 135 175 190 193\n  ..$ : int [1:7] 89 102 103 137 178 202 282\n  ..$ : int [1:6] 99 104 106 107 144 145\n  ..$ : int [1:7] 93 134 143 149 188 192 196\n  ..$ : int [1:7] 97 107 142 145 176 182 187\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language poly2nb(pl = mpsz_busstop)\n  ..- attr(*, \"type\")= chr \"queen\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_distance  :List of 313\n  ..$ : int [1:91] 2 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:91] 1 2 4 6 7 8 9 10 11 12 ...\n  ..$ : int [1:56] 3 6 7 8 11 14 15 19 23 24 ...\n  ..$ : int [1:34] 1 2 6 7 8 9 10 11 12 13 ...\n  ..$ : int [1:62] 1 2 3 4 5 7 8 9 10 11 ...\n  ..$ : int [1:74] 1 2 3 4 5 6 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 4 5 6 7 10 11 12 ...\n  ..$ : int [1:53] 1 2 3 5 6 7 10 11 12 13 ...\n  ..$ : int [1:74] 1 2 3 5 6 7 8 9 11 12 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:44] 2 9 10 12 13 16 17 20 21 22 ...\n  ..$ : int [1:73] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:80] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:72] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:82] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:79] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:82] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:78] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:67] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:87] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:75] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:89] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:41] 9 10 13 17 18 21 22 29 34 35 ...\n  ..$ : int [1:59] 1 2 9 10 12 13 16 17 18 20 ...\n  ..$ : int [1:49] 2 9 10 13 16 17 18 20 21 22 ...\n  ..$ : int [1:89] 1 2 3 6 7 9 10 11 12 13 ...\n  ..$ : int [1:63] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:97] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:54] 9 10 13 16 17 18 21 22 29 34 ...\n  ..$ : int [1:71] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:65] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:43] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:87] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:38] 18 39 40 41 43 46 48 49 54 56 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 10 11 12 13 ...\n  ..$ : int [1:16] 59 75 87 93 98 102 128 134 137 143 ...\n  ..$ : int [1:41] 18 36 39 40 41 43 46 48 49 50 ...\n  ..$ : int [1:12] 63 88 105 109 113 114 129 130 146 203 ...\n  ..$ : int [1:30] 49 51 54 70 76 90 91 95 100 112 ...\n  ..$ : int [1:96] 1 2 3 7 10 11 12 13 14 15 ...\n  ..$ : int [1:84] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:35] 4 31 47 53 58 64 75 81 83 84 ...\n  ..$ : int [1:101] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:13] 55 88 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:66] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:24] 17 18 39 40 41 43 46 48 49 51 ...\n  ..$ : int [1:96] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:89] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:100] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:21] 4 47 53 58 59 87 89 93 96 98 ...\n  ..$ : int [1:39] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:88] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:74] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:93] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:27] 4 47 53 58 59 75 84 89 93 96 ...\n  ..$ : int [1:21] 55 63 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:68] 3 4 44 45 47 52 58 59 61 62 ...\n  ..$ : int [1:45] 49 51 54 56 76 91 95 100 101 112 ...\n  ..$ : int [1:32] 56 63 88 90 100 108 109 112 113 114 ...\n  ..$ : int [1:51] 35 36 39 40 41 42 43 46 48 49 ...\n  ..$ : int [1:27] 53 59 75 87 89 96 98 102 103 128 ...\n  ..$ : int [1:71] 1 2 3 22 27 29 34 35 36 37 ...\n  ..$ : int [1:47] 39 43 46 48 49 51 54 56 76 85 ...\n  ..$ : int [1:59] 4 44 45 47 58 59 62 64 72 73 ...\n  ..$ : int [1:82] 1 3 33 38 44 45 47 52 57 58 ...\n  ..$ : int [1:23] 53 59 75 87 93 102 128 134 137 143 ...\n  ..$ : int [1:79] 1 2 3 38 44 45 50 52 57 58 ...\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language dnearneigh(x = centroids, d1 = 0, d2 = 5000)\n  ..- attr(*, \"dnn\")= num [1:2] 0 5000\n  ..- attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n  ..- attr(*, \"nbtype\")= chr \"distance\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_knn       :List of 313\n  ..$ : int [1:3] 2 66 69\n  ..$ : int [1:3] 1 37 69\n  ..$ : int [1:3] 38 65 71\n  ..$ : int [1:3] 31 47 281\n  ..$ : int [1:3] 6 7 12\n  ..$ : int [1:3] 7 8 19\n  ..$ : int [1:3] 11 14 23\n  ..$ : int [1:3] 19 28 31\n  ..$ : int [1:3] 10 13 17\n  ..$ : int [1:3] 13 16 22\n  ..$ : int [1:3] 7 14 15\n  ..$ : int [1:3] 7 20 23\n  ..$ : int [1:3] 10 16 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:3] 11 14 25\n  ..$ : int [1:3] 10 13 29\n  ..$ : int [1:3] 9 21 36\n  ..$ : int [1:3] 17 40 41\n  ..$ : int [1:3] 8 11 15\n  ..$ : int [1:3] 12 27 280\n  ..$ : int [1:3] 17 35 36\n  ..$ : int [1:3] 13 34 35\n  ..$ : int [1:3] 11 14 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:3] 24 26 30\n  ..$ : int [1:3] 24 25 33\n  ..$ : int [1:3] 20 29 37\n  ..$ : int [1:3] 25 30 31\n  ..$ : int [1:3] 16 27 34\n  ..$ : int [1:3] 24 25 28\n  ..$ : int [1:3] 8 28 30\n  ..$ : int [1:3] 23 38 280\n  ..$ : int [1:3] 24 26 38\n  ..$ : int [1:3] 22 29 35\n  ..$ : int [1:3] 22 34 42\n  ..$ : int [1:3] 21 35 68\n  ..$ : int [1:3] 2 27 29\n  ..$ : int [1:3] 3 26 33\n  ..$ : int [1:3] 41 46 76\n  ..$ : int [1:3] 36 41 68\n  ..$ : int [1:3] 18 39 40\n  ..$ : int [1:3] 34 35 80\n  ..$ : int [1:3] 46 48 85\n  ..$ : int [1:3] 61 82 110\n  ..$ : int [1:3] 62 81 83\n  ..$ : int [1:3] 43 48 278\n  ..$ : int [1:3] 4 58 266\n  ..$ : int [1:3] 43 85 278\n  ..$ : int [1:3] 54 76 119\n  ..$ : int [1:3] 80 85 131\n  ..$ : int [1:3] 54 118 120\n  ..$ : int [1:3] 61 78 111\n  ..$ : int [1:3] 75 93 134\n  ..$ : int [1:3] 51 76 120\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:3] 112 138 139\n  ..$ : int [1:3] 60 86 117\n  ..$ : int [1:3] 122 123 266\n  ..$ : int [1:3] 75 87 137\n  ..$ : int [1:3] 57 74 86\n  ..$ : int [1:3] 44 52 82\n  ..$ : int [1:3] 45 83 110\n  ..$ : int [1:3] 55 114 130\n  ..$ : int [1:3] 67 72 84\n  ..$ : int [1:3] 3 67 73\n  ..$ : int [1:3] 1 71 78\n  ..$ : int [1:3] 33 65 73\n  ..$ : int [1:3] 40 43 85\n  ..$ : int [1:3] 1 74 78\n  ..$ : int [1:3] 39 51 76\n  ..$ : int [1:3] 3 66 82\n  ..$ : int [1:3] 73 81 83\n  ..$ : int [1:3] 72 79 82\n  ..$ : int [1:3] 60 69 77\n  ..$ : int [1:3] 59 87 281\n  ..$ : int [1:3] 39 49 54\n  ..$ : int [1:3] 74 80 86\n  ..$ : int [1:3] 52 66 69\n  ..$ : int [1:3] 44 73 82\n  ..$ : int [1:3] 42 77 86\n  ..$ : int [1:3] 72 83 266\n  ..$ : int [1:3] 44 73 79\n  ..$ : int [1:3] 45 62 81\n  ..$ : int [1:3] 72 81 266\n  ..$ : int [1:3] 43 48 68\n  ..$ : int [1:3] 60 74 77\n  ..$ : int [1:3] 59 75 281\n  ..$ : int [1:3] 109 129 130\n  ..$ : int [1:3] 96 103 140\n  ..$ : int [1:3] 100 141 181\n  ..$ : int [1:3] 108 133 179\n  ..$ : int [1:3] 125 136 177\n  ..$ : int [1:3] 134 188 192\n  ..$ : int [1:3] 126 142 176\n  ..$ : int [1:3] 135 141 193\n  ..$ : int [1:3] 89 102 178\n  ..$ : int [1:3] 104 106 107\n  ..$ : int [1:3] 143 149 192\n  ..$ : int [1:3] 107 182 187\n  .. [list output truncated]\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language knearneigh(x = centroids, k = 3)\n  ..- attr(*, \"sym\")= logi FALSE\n  ..- attr(*, \"type\")= chr \"knn\"\n  ..- attr(*, \"knn-k\")= num 3\n  ..- attr(*, \"class\")= chr \"nb\"\n\n\n\n\nCode\nglimpse(mpsz_flow)\n\n\nRows: 97,969\nColumns: 4\n$ ORIGIN_SZ &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ17\", …\n$ DESTIN_SZ &lt;chr&gt; \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", …\n$ DISTANCE  &lt;dbl&gt; 0.0000, 305.7370, 951.8314, 5254.0664, 4975.0021, 3176.1592,…\n$ TRIPS     &lt;dbl&gt; 67, 549, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, …\n\n\n\n\nCode\nglimpse(mpsz_var)\n\n\nRows: 313\nColumns: 14\n$ SZ_NAME        &lt;chr&gt; \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"FORT CANNING\", \"…\n$ SZ_CODE        &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ…\n$ BUSSTOP_COUNT  &lt;int&gt; 2, 10, 6, 2, 1, 10, 5, 4, 21, 11, 2, 9, 6, 1, 4, 7, 24,…\n$ AGE7_12        &lt;dbl&gt; 330, 320, 0, 0, 200, 0, 0, 0, 350, 470, 0, 300, 390, 0,…\n$ AGE13_24       &lt;dbl&gt; 360, 350, 10, 0, 260, 0, 0, 0, 460, 1160, 0, 760, 890, …\n$ AGE25_64       &lt;dbl&gt; 2260, 2200, 30, 0, 1440, 0, 0, 0, 2600, 6260, 630, 4350…\n$ geometry       &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((28481.45 30..., MULTIPOLYG…\n$ SCHOOL_COUNT   &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 0…\n$ BUSINESS_COUNT &lt;int&gt; 6, 4, 7, 0, 1, 11, 15, 1, 10, 1, 17, 6, 0, 0, 51, 2, 3,…\n$ RETAILS_COUNT  &lt;int&gt; 26, 207, 17, 0, 84, 14, 52, 0, 460, 34, 263, 55, 37, 1,…\n$ FINSERV_COUNT  &lt;int&gt; 3, 18, 0, 0, 29, 4, 6, 0, 34, 4, 26, 4, 3, 6, 59, 3, 8,…\n$ ENTERTN_COUNT  &lt;int&gt; 0, 6, 3, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0…\n$ FB_COUNT       &lt;int&gt; 4, 38, 4, 0, 38, 15, 5, 0, 20, 0, 9, 25, 0, 0, 9, 1, 3,…\n$ LR_COUNT       &lt;int&gt; 3, 11, 7, 0, 20, 0, 0, 0, 19, 2, 4, 4, 1, 1, 13, 0, 17,…"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex5/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/FinServ.html",
    "href": "In-class_Ex5/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/entertn.html",
    "href": "In-class_Ex5/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "",
    "text": "In this hands-on exercise, the class learnt how to import and wrangle Geospatial data using the appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#overview",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#overview",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "",
    "text": "In this hands-on exercise, the class learnt how to import and wrangle Geospatial data using the appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#learning-outcomes",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#learning-outcomes",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "Learning Outcomes:",
    "text": "Learning Outcomes:\n\nInstall and load the sf and tidyverse packages in R.\nImport geospatial and non-geospatial data using appropriate functions.\nExplore and manipulate data frames using Base R and sf functions.\nAssign or transform coordinate systems using sf functions.\nConvert data into an sf data frame using the sf package.\nPerform geospatial operations using sf functions.\nConduct data wrangling tasks using the dplyr package.\nPerform Exploratory Data Analysis (EDA) using ggplot2 functions.”"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#getting-started",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#getting-started",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "Getting started",
    "text": "Getting started\nThe code chunk below install and load sf and tidyverse packages into R environment\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#importing-geospatial-data",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#importing-geospatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "Importing Geospatial Data:",
    "text": "Importing Geospatial Data:\n\nThe data used for the exercise are as follow:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\n\n\nImporting feature data\nA utility known as st_read is used in the data import procedure. This function reads many map formats and extensions, including.shp,.dbf,.prj, and.shx. The following parameters are used by the function:\n\nThe dsn Parameter, specifies the location of which where we map our files.\nThe layer parameter in this section emphasizes specific map feature\nLastly, we note that extensions such as .shp, .dbf, .prj and .shx are not necessary.\n\n\nImporting polygon feature dataImporting Polylines feature dataImporting GIS feature data\n\n\n\nmpsz = st_read(dsn = \"data/geospatial\",layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Zackkoh94\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nShapefiles are a common format for storing geospatial vector data, representing various geographic features like points, lines, and polygons. The “MP14_SUBZONE_WEB_PL” refers to a specific layer within a shapefile which contains polygon features. These polygons may represent subzones within a geographic region, such as those outlined in the Master Plan 2014 Subzone Boundary (Web) data.\nThe dataset serves as a forward-looking plan for Singapore’s development over the next 10 to 15 years, known as the Development Master Plan 2014. Subzones typically revolve around key focal points, like neighborhood centers or activity nodes, and a Planning Area can consist of more than 10 subzones. The data is sourced from the Singapore Government.\n\n\n\n\ncyclingpath &lt;- st_read(dsn = \"/Zackkoh94/ISSS624/Hands-on_Ex1/data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Zackkoh94\\ISSS624\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\nThis code imports data representing polylines from a shapefile. Polylines are used to depict linear features like roads, rivers, or cycling paths, consisting of connected straight lines. In this instance, the data represents a cycling path within Singapore, excluding park connectors. The source of this data is the Land Transport Authority.\n\n\n\n\npreschool &lt;- st_read(dsn = \"/Zackkoh94/ISSS624/Hands-on_Ex1/data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Zackkoh94\\ISSS624\\Hands-on_Ex1\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nThis code imports geospatial data in KML format, which is commonly used for annotating and visualizing geographic information on maps and Earth browsers. Specifically, it imports data about the locations of pre-schools in Singapore from a KML file. The source of this data is the Singapore Government."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "Hands-on_Ex1/Hands-on_Ex1_Data_Wrangling_With_R.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "Checking the Content of A Simple Feature Data Frame",
    "text": "Checking the Content of A Simple Feature Data Frame\nThe following codes are for retrieve information related to the content of a simple feature data frame:\n\nWorking with st_geometry()\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303..."
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Business.html",
    "href": "In-class_Ex5/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/F&B.html",
    "href": "In-class_Ex5/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Liesure&Recreation.html",
    "href": "In-class_Ex5/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "In-class_Ex5/data/geospatial/Retails.html",
    "href": "In-class_Ex5/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Geospatial Analytics (ISSS624)",
    "section": "",
    "text": "Salutations,\nWelcome to ISSS624: Geospatial Analytics Applications. I am delighted to provide an insightful overview of my five-week educational journey in the realm of Geospatial Analytics, masterfully instructed by Professor Kam Tin Seong at Singapore Management University. For those seeking additional information regarding ISSS624, please peruse the dedicated journal section on this website.\nSincerely,\nZack"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#preparing-the-spatial-weight",
    "href": "In-class_Ex5/In-class_Ex5.html#preparing-the-spatial-weight",
    "title": "In-class_Ex5",
    "section": "",
    "text": "Code\nschools &lt;- read_rds(\"./data/rds/schools.rds\")\n\n\n\n\nCode\nmpsz_nb &lt;- read_rds(\"./data/rds/mpsz_nb.rds\")\nmpsz_flow &lt;- read_rds(\"./data/rds/mpsz_flow.rds\")\nmpsz_var &lt;- read_rds(\"./data/rds/mpsz_var.rds\")\n\n\n\n\nCode\nglimpse(mpsz_nb)\n\n\nList of 3\n $ by_contiguity:List of 313\n  ..$ : int [1:4] 2 3 66 69\n  ..$ : int [1:7] 1 3 32 37 38 69 80\n  ..$ : int [1:7] 1 2 38 65 66 67 71\n  ..$ : int [1:4] 47 75 87 281\n  ..$ : int [1:2] 6 9\n  ..$ : int [1:8] 5 7 8 9 10 12 16 19\n  ..$ : int [1:5] 6 11 12 19 23\n  ..$ : int [1:4] 6 19 28 31\n  ..$ : int [1:7] 5 6 10 13 17 18 70\n  ..$ : int [1:5] 6 9 12 13 16\n  ..$ : int [1:5] 7 14 15 19 23\n  ..$ : int [1:6] 6 7 10 16 20 23\n  ..$ : int [1:6] 9 10 16 17 21 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:5] 11 14 19 23 25\n  ..$ : int [1:9] 6 10 12 13 20 22 27 29 34\n  ..$ : int [1:5] 9 13 18 21 41\n  ..$ : int [1:5] 9 17 39 41 70\n  ..$ : int [1:9] 6 7 8 11 15 25 28 30 31\n  ..$ : int [1:6] 12 16 23 27 32 280\n  ..$ : int [1:6] 13 17 22 36 40 41\n  ..$ : int [1:7] 13 16 21 29 34 35 36\n  ..$ : int [1:10] 7 11 12 14 15 20 25 26 32 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:8] 15 19 23 24 26 30 33 67\n  ..$ : int [1:6] 23 24 25 32 33 38\n  ..$ : int [1:5] 16 20 29 32 37\n  ..$ : int [1:5] 8 19 30 31 64\n  ..$ : int [1:5] 16 22 27 34 37\n  ..$ : int [1:5] 19 25 28 64 67\n  ..$ : int [1:4] 8 19 28 64\n  ..$ : int [1:9] 2 20 23 26 27 33 37 38 280\n  ..$ : int [1:6] 24 25 26 32 38 67\n  ..$ : int [1:6] 16 22 29 35 37 42\n  ..$ : int [1:5] 22 34 36 42 85\n  ..$ : int [1:8] 21 22 35 40 41 42 68 85\n  ..$ : int [1:7] 2 27 29 32 34 42 80\n  ..$ : int [1:6] 2 3 26 32 33 67\n  ..$ : int [1:6] 18 41 51 54 70 76\n  ..$ : int [1:6] 21 36 41 43 46 68\n  ..$ : int [1:8] 17 18 21 36 39 40 46 76\n  ..$ : int [1:6] 34 35 36 37 80 85\n  ..$ : int [1:6] 40 46 48 68 85 278\n  ..$ : int [1:4] 61 82 110 121\n  ..$ : int [1:5] 62 73 79 83 116\n  ..$ : int [1:8] 40 41 43 49 68 76 115 278\n  ..$ : int [1:5] 4 58 84 281 282\n  ..$ : int [1:5] 43 68 85 136 278\n  ..$ : int [1:5] 46 54 76 115 119\n  ..$ : int [1:7] 80 85 86 125 126 131 136\n  ..$ : int [1:6] 39 54 70 118 120 127\n  ..$ : int [1:5] 61 78 111 121 132\n  ..$ : int [1:4] 75 87 128 134\n  ..$ : int [1:7] 39 49 51 76 119 120 135\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:4] 112 118 138 139\n  ..$ : int [1:3] 60 117 126\n  ..$ : int [1:7] 47 84 116 122 123 266 282\n  ..$ : int [1:4] 87 134 137 281\n  ..$ : int [1:8] 57 69 74 77 78 86 117 126\n  ..$ : int [1:5] 44 52 71 78 121\n  ..$ : int [1:6] 45 73 79 82 110 116\n  ..$ : int [1:4] 55 114 129 130\n  ..$ : int [1:5] 28 30 31 67 84\n  ..$ : int [1:5] 3 67 71 73 79\n  ..$ : int [1:5] 1 3 69 71 78\n  ..$ : int [1:11] 3 25 30 33 38 64 65 72 73 81 ...\n  ..$ : int [1:6] 36 40 43 46 48 85\n  ..$ : int [1:8] 1 2 60 66 74 77 78 80\n  ..$ : int [1:5] 9 18 39 51 118\n  ..$ : int [1:7] 3 61 65 66 78 79 82\n  ..$ : int [1:5] 67 73 81 83 84\n  ..$ : int [1:7] 45 62 65 67 72 79 83\n  ..$ : int [1:5] 60 69 77 78 80\n  ..$ : int [1:4] 4 53 87 281\n  ..$ : int [1:5] 39 41 46 49 54\n  ..$ : int [1:5] 60 69 74 80 86\n  ..$ : int [1:7] 52 60 61 66 69 71 74\n  ..$ : int [1:7] 45 62 65 71 73 82 110\n  ..$ : int [1:9] 2 37 42 50 69 74 77 85 86\n  ..$ : int [1:5] 67 72 83 84 266\n  ..$ : int [1:5] 44 62 71 79 110\n  ..$ : int [1:6] 45 72 73 81 116 266\n  ..$ : int [1:7] 47 58 64 67 72 81 266\n  ..$ : int [1:9] 35 36 42 43 48 50 68 80 136\n  ..$ : int [1:5] 50 60 77 80 126\n  ..$ : int [1:6] 4 53 59 75 134 281\n  ..$ : int [1:9] 91 105 108 109 129 130 133 203 287\n  ..$ : int [1:6] 96 103 122 140 178 282\n  ..$ : int [1:7] 100 127 138 141 175 181 271\n  ..$ : int [1:7] 88 108 129 133 139 179 185\n  ..$ : int [1:6] 101 125 131 136 177 194\n  ..$ : int [1:6] 98 102 134 137 188 192\n  ..$ : int [1:5] 126 131 142 176 177\n  ..$ : int [1:7] 101 119 124 135 175 190 193\n  ..$ : int [1:7] 89 102 103 137 178 202 282\n  ..$ : int [1:6] 99 104 106 107 144 145\n  ..$ : int [1:7] 93 134 143 149 188 192 196\n  ..$ : int [1:7] 97 107 142 145 176 182 187\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language poly2nb(pl = mpsz_busstop)\n  ..- attr(*, \"type\")= chr \"queen\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_distance  :List of 313\n  ..$ : int [1:91] 2 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:91] 1 2 4 6 7 8 9 10 11 12 ...\n  ..$ : int [1:56] 3 6 7 8 11 14 15 19 23 24 ...\n  ..$ : int [1:34] 1 2 6 7 8 9 10 11 12 13 ...\n  ..$ : int [1:62] 1 2 3 4 5 7 8 9 10 11 ...\n  ..$ : int [1:74] 1 2 3 4 5 6 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 4 5 6 7 10 11 12 ...\n  ..$ : int [1:53] 1 2 3 5 6 7 10 11 12 13 ...\n  ..$ : int [1:74] 1 2 3 5 6 7 8 9 11 12 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:44] 2 9 10 12 13 16 17 20 21 22 ...\n  ..$ : int [1:73] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:80] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:72] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:82] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:79] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:82] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:78] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:67] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:87] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:75] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:89] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:41] 9 10 13 17 18 21 22 29 34 35 ...\n  ..$ : int [1:59] 1 2 9 10 12 13 16 17 18 20 ...\n  ..$ : int [1:49] 2 9 10 13 16 17 18 20 21 22 ...\n  ..$ : int [1:89] 1 2 3 6 7 9 10 11 12 13 ...\n  ..$ : int [1:63] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:97] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:54] 9 10 13 16 17 18 21 22 29 34 ...\n  ..$ : int [1:71] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:65] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:43] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:87] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:38] 18 39 40 41 43 46 48 49 54 56 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 10 11 12 13 ...\n  ..$ : int [1:16] 59 75 87 93 98 102 128 134 137 143 ...\n  ..$ : int [1:41] 18 36 39 40 41 43 46 48 49 50 ...\n  ..$ : int [1:12] 63 88 105 109 113 114 129 130 146 203 ...\n  ..$ : int [1:30] 49 51 54 70 76 90 91 95 100 112 ...\n  ..$ : int [1:96] 1 2 3 7 10 11 12 13 14 15 ...\n  ..$ : int [1:84] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:35] 4 31 47 53 58 64 75 81 83 84 ...\n  ..$ : int [1:101] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:13] 55 88 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:66] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:24] 17 18 39 40 41 43 46 48 49 51 ...\n  ..$ : int [1:96] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:89] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:100] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:21] 4 47 53 58 59 87 89 93 96 98 ...\n  ..$ : int [1:39] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:88] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:74] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:93] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:27] 4 47 53 58 59 75 84 89 93 96 ...\n  ..$ : int [1:21] 55 63 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:68] 3 4 44 45 47 52 58 59 61 62 ...\n  ..$ : int [1:45] 49 51 54 56 76 91 95 100 101 112 ...\n  ..$ : int [1:32] 56 63 88 90 100 108 109 112 113 114 ...\n  ..$ : int [1:51] 35 36 39 40 41 42 43 46 48 49 ...\n  ..$ : int [1:27] 53 59 75 87 89 96 98 102 103 128 ...\n  ..$ : int [1:71] 1 2 3 22 27 29 34 35 36 37 ...\n  ..$ : int [1:47] 39 43 46 48 49 51 54 56 76 85 ...\n  ..$ : int [1:59] 4 44 45 47 58 59 62 64 72 73 ...\n  ..$ : int [1:82] 1 3 33 38 44 45 47 52 57 58 ...\n  ..$ : int [1:23] 53 59 75 87 93 102 128 134 137 143 ...\n  ..$ : int [1:79] 1 2 3 38 44 45 50 52 57 58 ...\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language dnearneigh(x = centroids, d1 = 0, d2 = 5000)\n  ..- attr(*, \"dnn\")= num [1:2] 0 5000\n  ..- attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n  ..- attr(*, \"nbtype\")= chr \"distance\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_knn       :List of 313\n  ..$ : int [1:3] 2 66 69\n  ..$ : int [1:3] 1 37 69\n  ..$ : int [1:3] 38 65 71\n  ..$ : int [1:3] 31 47 281\n  ..$ : int [1:3] 6 7 12\n  ..$ : int [1:3] 7 8 19\n  ..$ : int [1:3] 11 14 23\n  ..$ : int [1:3] 19 28 31\n  ..$ : int [1:3] 10 13 17\n  ..$ : int [1:3] 13 16 22\n  ..$ : int [1:3] 7 14 15\n  ..$ : int [1:3] 7 20 23\n  ..$ : int [1:3] 10 16 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:3] 11 14 25\n  ..$ : int [1:3] 10 13 29\n  ..$ : int [1:3] 9 21 36\n  ..$ : int [1:3] 17 40 41\n  ..$ : int [1:3] 8 11 15\n  ..$ : int [1:3] 12 27 280\n  ..$ : int [1:3] 17 35 36\n  ..$ : int [1:3] 13 34 35\n  ..$ : int [1:3] 11 14 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:3] 24 26 30\n  ..$ : int [1:3] 24 25 33\n  ..$ : int [1:3] 20 29 37\n  ..$ : int [1:3] 25 30 31\n  ..$ : int [1:3] 16 27 34\n  ..$ : int [1:3] 24 25 28\n  ..$ : int [1:3] 8 28 30\n  ..$ : int [1:3] 23 38 280\n  ..$ : int [1:3] 24 26 38\n  ..$ : int [1:3] 22 29 35\n  ..$ : int [1:3] 22 34 42\n  ..$ : int [1:3] 21 35 68\n  ..$ : int [1:3] 2 27 29\n  ..$ : int [1:3] 3 26 33\n  ..$ : int [1:3] 41 46 76\n  ..$ : int [1:3] 36 41 68\n  ..$ : int [1:3] 18 39 40\n  ..$ : int [1:3] 34 35 80\n  ..$ : int [1:3] 46 48 85\n  ..$ : int [1:3] 61 82 110\n  ..$ : int [1:3] 62 81 83\n  ..$ : int [1:3] 43 48 278\n  ..$ : int [1:3] 4 58 266\n  ..$ : int [1:3] 43 85 278\n  ..$ : int [1:3] 54 76 119\n  ..$ : int [1:3] 80 85 131\n  ..$ : int [1:3] 54 118 120\n  ..$ : int [1:3] 61 78 111\n  ..$ : int [1:3] 75 93 134\n  ..$ : int [1:3] 51 76 120\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:3] 112 138 139\n  ..$ : int [1:3] 60 86 117\n  ..$ : int [1:3] 122 123 266\n  ..$ : int [1:3] 75 87 137\n  ..$ : int [1:3] 57 74 86\n  ..$ : int [1:3] 44 52 82\n  ..$ : int [1:3] 45 83 110\n  ..$ : int [1:3] 55 114 130\n  ..$ : int [1:3] 67 72 84\n  ..$ : int [1:3] 3 67 73\n  ..$ : int [1:3] 1 71 78\n  ..$ : int [1:3] 33 65 73\n  ..$ : int [1:3] 40 43 85\n  ..$ : int [1:3] 1 74 78\n  ..$ : int [1:3] 39 51 76\n  ..$ : int [1:3] 3 66 82\n  ..$ : int [1:3] 73 81 83\n  ..$ : int [1:3] 72 79 82\n  ..$ : int [1:3] 60 69 77\n  ..$ : int [1:3] 59 87 281\n  ..$ : int [1:3] 39 49 54\n  ..$ : int [1:3] 74 80 86\n  ..$ : int [1:3] 52 66 69\n  ..$ : int [1:3] 44 73 82\n  ..$ : int [1:3] 42 77 86\n  ..$ : int [1:3] 72 83 266\n  ..$ : int [1:3] 44 73 79\n  ..$ : int [1:3] 45 62 81\n  ..$ : int [1:3] 72 81 266\n  ..$ : int [1:3] 43 48 68\n  ..$ : int [1:3] 60 74 77\n  ..$ : int [1:3] 59 75 281\n  ..$ : int [1:3] 109 129 130\n  ..$ : int [1:3] 96 103 140\n  ..$ : int [1:3] 100 141 181\n  ..$ : int [1:3] 108 133 179\n  ..$ : int [1:3] 125 136 177\n  ..$ : int [1:3] 134 188 192\n  ..$ : int [1:3] 126 142 176\n  ..$ : int [1:3] 135 141 193\n  ..$ : int [1:3] 89 102 178\n  ..$ : int [1:3] 104 106 107\n  ..$ : int [1:3] 143 149 192\n  ..$ : int [1:3] 107 182 187\n  .. [list output truncated]\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language knearneigh(x = centroids, k = 3)\n  ..- attr(*, \"sym\")= logi FALSE\n  ..- attr(*, \"type\")= chr \"knn\"\n  ..- attr(*, \"knn-k\")= num 3\n  ..- attr(*, \"class\")= chr \"nb\"\n\n\n\n\nCode\nglimpse(mpsz_flow)\n\n\nRows: 97,969\nColumns: 4\n$ ORIGIN_SZ &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ17\", …\n$ DESTIN_SZ &lt;chr&gt; \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", …\n$ DISTANCE  &lt;dbl&gt; 0.0000, 305.7370, 951.8314, 5254.0664, 4975.0021, 3176.1592,…\n$ TRIPS     &lt;dbl&gt; 67, 549, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, …\n\n\n\n\nCode\nglimpse(mpsz_var)\n\n\nRows: 313\nColumns: 14\n$ SZ_NAME        &lt;chr&gt; \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"FORT CANNING\", \"…\n$ SZ_CODE        &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ…\n$ BUSSTOP_COUNT  &lt;int&gt; 2, 10, 6, 2, 1, 10, 5, 4, 21, 11, 2, 9, 6, 1, 4, 7, 24,…\n$ AGE7_12        &lt;dbl&gt; 330, 320, 0, 0, 200, 0, 0, 0, 350, 470, 0, 300, 390, 0,…\n$ AGE13_24       &lt;dbl&gt; 360, 350, 10, 0, 260, 0, 0, 0, 460, 1160, 0, 760, 890, …\n$ AGE25_64       &lt;dbl&gt; 2260, 2200, 30, 0, 1440, 0, 0, 0, 2600, 6260, 630, 4350…\n$ geometry       &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((28481.45 30..., MULTIPOLYG…\n$ SCHOOL_COUNT   &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 0…\n$ BUSINESS_COUNT &lt;int&gt; 6, 4, 7, 0, 1, 11, 15, 1, 10, 1, 17, 6, 0, 0, 51, 2, 3,…\n$ RETAILS_COUNT  &lt;int&gt; 26, 207, 17, 0, 84, 14, 52, 0, 460, 34, 263, 55, 37, 1,…\n$ FINSERV_COUNT  &lt;int&gt; 3, 18, 0, 0, 29, 4, 6, 0, 34, 4, 26, 4, 3, 6, 59, 3, 8,…\n$ ENTERTN_COUNT  &lt;int&gt; 0, 6, 3, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0…\n$ FB_COUNT       &lt;int&gt; 4, 38, 4, 0, 38, 15, 5, 0, 20, 0, 9, 25, 0, 0, 9, 1, 3,…\n$ LR_COUNT       &lt;int&gt; 3, 11, 7, 0, 20, 0, 0, 0, 19, 2, 4, 4, 1, 1, 13, 0, 17,…"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#the-base-model",
    "href": "In-class_Ex5/In-class_Ex5.html#the-base-model",
    "title": "In-class_Ex5",
    "section": "3.1 The Base Model",
    "text": "3.1 The Base Model\n\n\nCode\nbase_model &lt;- spflow(\n  spflow_formula = log(1 + TRIPS) ~\n    O_(BUSSTOP_COUNT +\n         AGE25_64) +\n    D_(SCHOOL_COUNT +\n         BUSINESS_COUNT +\n         RETAILS_COUNT +\n         FINSERV_COUNT) +\n         P_(log(DISTANCE + 1)),\n       spflow_networks = mpsz_multi_net)\n  \nbase_model\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: MLE  \nSpatial correlation structure: SDM (model_9)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd   t.stat  p.val\nrho_d                   0.680  0.004  192.554  0.000\nrho_o                   0.678  0.004  187.732  0.000\nrho_w                  -0.396  0.006  -65.591  0.000\n(Intercept)             0.410  0.065    6.266  0.000\n(Intra)                 1.313  0.081   16.263  0.000\nD_SCHOOL_COUNT          0.017  0.002    7.885  0.000\nD_SCHOOL_COUNT.lag1     0.002  0.004    0.551  0.581\nD_BUSINESS_COUNT        0.000  0.000    3.015  0.003\nD_BUSINESS_COUNT.lag1   0.000  0.000   -0.249  0.804\nD_RETAILS_COUNT         0.000  0.000   -0.306  0.759\nD_RETAILS_COUNT.lag1    0.000  0.000    0.152  0.880\nD_FINSERV_COUNT         0.002  0.000    6.787  0.000\nD_FINSERV_COUNT.lag1   -0.002  0.001   -3.767  0.000\nO_BUSSTOP_COUNT         0.002  0.000    6.806  0.000\nO_BUSSTOP_COUNT.lag1   -0.001  0.000   -2.364  0.018\nO_AGE25_64              0.000  0.000    7.336  0.000\nO_AGE25_64.lag1         0.000  0.000   -2.797  0.005\nP_log(DISTANCE + 1)    -0.050  0.007   -6.793  0.000\n\n--------------------------------------------------\nR2_corr: 0.6942945  \nObservations: 97969  \nModel coherence: Validated\n\n\n\nnote that many of the lag1 are statistically significant. this signifies that neighboring area can actually affect the number of trips as well.\n\n\n\nCode\nold_par &lt;- par(mfrow = c(1, 3),\n               mar = c(2,2,2,2))\nspflow_moran_plots(base_model)\n\n\n\n\n\nCode\npar(old_par)\n\n\n\n\nCode\ncorr_residual &lt;- pair_cor(base_model)\ncolnames(corr_residual) &lt;- substr(colnames(corr_residual), 1,3)\ncor_image(corr_residual)"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#working-with-model-control",
    "href": "In-class_Ex5/In-class_Ex5.html#working-with-model-control",
    "title": "In-class_Ex5",
    "section": "3.2 Working with model control",
    "text": "3.2 Working with model control\noriginal code for model_8\n\n\nCode\nspflow_formula &lt;- log(1 + TRIPS) ~\n  O_(BUSSTOP_COUNT +\n         AGE25_64) +\n  D_(SCHOOL_COUNT +\n       BUSINESS_COUNT +\n       RETAILS_COUNT +\n       FINSERV_COUNT) +\n  P_(log(DISTANCE + 1))\n\nmodel_control &lt;- spflow_control(\n  estimation_method = \"mle\",\n  model = \"model_8\")\n  \nmle_model8 &lt;- spflow(\n  spflow_formula,\n  spflow_networks = mpsz_multi_net,\n  estimation_control = model_control)\n\nmle_model8\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: MLE  \nSpatial correlation structure: SDM (model_8)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd    t.stat  p.val\nrho_d                   0.689  0.003   196.832  0.000\nrho_o                   0.687  0.004   192.214  0.000\nrho_w                  -0.473  0.003  -142.469  0.000\n(Intercept)             1.086  0.049    22.275  0.000\n(Intra)                 0.840  0.075    11.255  0.000\nD_SCHOOL_COUNT          0.019  0.002     8.896  0.000\nD_SCHOOL_COUNT.lag1     0.019  0.004     5.130  0.000\nD_BUSINESS_COUNT        0.000  0.000     3.328  0.001\nD_BUSINESS_COUNT.lag1   0.000  0.000     1.664  0.096\nD_RETAILS_COUNT         0.000  0.000    -0.414  0.679\nD_RETAILS_COUNT.lag1    0.000  0.000    -0.171  0.864\nD_FINSERV_COUNT         0.002  0.000     6.150  0.000\nD_FINSERV_COUNT.lag1   -0.003  0.001    -4.601  0.000\nO_BUSSTOP_COUNT         0.003  0.000     7.676  0.000\nO_BUSSTOP_COUNT.lag1    0.000  0.000     0.552  0.581\nO_AGE25_64              0.000  0.000     6.870  0.000\nO_AGE25_64.lag1         0.000  0.000    -0.462  0.644\nP_log(DISTANCE + 1)    -0.125  0.005   -22.865  0.000\n\n--------------------------------------------------\nR2_corr: 0.6965974  \nObservations: 97969  \nModel coherence: Validated\n\n\nmodel_1\n\n\nCode\nspflow_formula &lt;- log(1 + TRIPS) ~\n  O_(BUSSTOP_COUNT +\n         AGE25_64) +\n  D_(SCHOOL_COUNT +\n       BUSINESS_COUNT +\n       RETAILS_COUNT +\n       FINSERV_COUNT) +\n  P_(log(DISTANCE + 1))\n\nmodel_control &lt;- spflow_control(\n  estimation_method = \"mle\",\n  model = \"model_1\")\n  \nmle_model1 &lt;- spflow(\n  spflow_formula,\n  spflow_networks = mpsz_multi_net,\n  estimation_control = model_control)\n\nmle_model1\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: OLS  \nSpatial correlation structure: SLX (model_1)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd    t.stat  p.val\n(Intercept)            11.384  0.069   164.255  0.000\n(Intra)                -6.006  0.112   -53.393  0.000\nD_SCHOOL_COUNT          0.093  0.003    28.599  0.000\nD_SCHOOL_COUNT.lag1     0.255  0.006    44.905  0.000\nD_BUSINESS_COUNT        0.001  0.000    10.036  0.000\nD_BUSINESS_COUNT.lag1   0.003  0.000    18.274  0.000\nD_RETAILS_COUNT         0.000  0.000    -1.940  0.052\nD_RETAILS_COUNT.lag1    0.000  0.000    -2.581  0.010\nD_FINSERV_COUNT         0.005  0.000    10.979  0.000\nD_FINSERV_COUNT.lag1   -0.016  0.001   -17.134  0.000\nO_BUSSTOP_COUNT         0.014  0.001    25.865  0.000\nO_BUSSTOP_COUNT.lag1    0.015  0.001    21.728  0.000\nO_AGE25_64              0.000  0.000    14.479  0.000\nO_AGE25_64.lag1         0.000  0.000    14.452  0.000\nP_log(DISTANCE + 1)    -1.281  0.008  -165.327  0.000\n\n--------------------------------------------------\nR2_corr: 0.2831458  \nObservations: 97969  \nModel coherence: Validated"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html",
    "href": "Take-home_Ex2/Take-home_Ex2.html",
    "title": "Take-home_Ex2",
    "section": "",
    "text": "Transport operators and urban managers face challenges in addressing urban mobility questions. Traditionally, commuter surveys have been employed, but they are expensive, time-consuming, and labor-intensive. Often, by the time these surveys are processed, the data is outdated.\nWith the digitization of urban infrastructure, including public buses, mass transit, and other utilities, a wealth of real-time data is now available. Technologies like GPS in vehicles and smart cards for commuters contribute to this data pool, allowing for the tracking of movement patterns in space and time.\nHowever, the rapid accumulation of geospatial data has exceeded planners’ capacity to effectively process and convert it into actionable insights, negatively affecting the return on investment in data collection and management."
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/MPSZ-2019.html",
    "href": "Take-home_Ex2/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/FinServ.html",
    "href": "Take-home_Ex2/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/entertn.html",
    "href": "Take-home_Ex2/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Business.html",
    "href": "Take-home_Ex2/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/F&B.html",
    "href": "Take-home_Ex2/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Liesure&Recreation.html",
    "href": "Take-home_Ex2/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Retails.html",
    "href": "Take-home_Ex2/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#aspatial-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#aspatial-data",
    "title": "Take-home_Ex2",
    "section": "6.1 Aspatial Data",
    "text": "6.1 Aspatial Data\nLoad the dataset ‘Passenger Volume by Origin Destination Bus Stops’ obtained from LTA Datamall into your environment using the read_csv() function from the readr package.\n\n\nCode\nbus09 &lt;- read_csv(\"data/aspatial/origin_destination_bus_202309.csv\")\n\n\nhead(bus09,10) %&gt;%\nkbl() %&gt;%\nkable_styling(\nfull_width = F,\nbootstrap_options = c(“condensed”, “responsive”))\n\n\nCode\nhead(bus09,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nYEAR_MONTH\nDAY_TYPE\nTIME_PER_HOUR\nPT_TYPE\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTOTAL_TRIPS\n\n\n\n\n2023-09\nWEEKENDS/HOLIDAY\n17\nBUS\n24499\n22221\n1\n\n\n2023-09\nWEEKENDS/HOLIDAY\n10\nBUS\n65239\n65159\n9\n\n\n2023-09\nWEEKDAY\n10\nBUS\n65239\n65159\n2\n\n\n2023-09\nWEEKDAY\n7\nBUS\n23519\n23311\n6\n\n\n2023-09\nWEEKENDS/HOLIDAY\n7\nBUS\n23519\n23311\n1\n\n\n2023-09\nWEEKENDS/HOLIDAY\n11\nBUS\n52509\n42041\n2\n\n\n2023-09\nWEEKDAY\n16\nBUS\n03151\n11161\n18\n\n\n2023-09\nWEEKDAY\n16\nBUS\n54349\n53241\n3\n\n\n2023-09\nWEEKENDS/HOLIDAY\n16\nBUS\n54349\n53241\n2\n\n\n2023-09\nWEEKENDS/HOLIDAY\n20\nBUS\n43371\n14139\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariables Description\n\n\n\n\n\n\nYEAR_MONTH: Data collection month in the format of YYYY-MM.\nDAY_TYPE: Weekday or Weekends/Holiday.\nTIME_PER_HOUR: Hour of the day in 24 hour format.\nPT_TYPE: Type of public transportation.\nORIGIN_PT_CODE: Identifier for the bus stop where the trip originated.\n\n\n\nDESTINATION_PT_CODE: Identifier for the bus stop where the trip ended.\nTOTAL_TRIPS: Total number of trips recorded for each origin-destination pair.\n\n\n\n\n\n\nCode\nglimpse(bus09)\n\n\nRows: 5,714,196\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-09\", \"2023-09\", \"2023-09\", \"2023-09\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 17, 10, 10, 7, 7, 11, 16, 16, 16, 20, 7, 11, 11, 1…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"24499\", \"65239\", \"65239\", \"23519\", \"23519\", \"5250…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"22221\", \"65159\", \"65159\", \"23311\", \"23311\", \"4204…\n$ TOTAL_TRIPS         &lt;dbl&gt; 1, 9, 2, 6, 1, 2, 18, 3, 2, 1, 2, 5, 3, 5, 5, 19, …\n\n\n\nData preparation\n\n\nCode\nbus09 &lt;- bus09 %&gt;%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n\nAs mentioned before, ORIGIN_PT_CODE and DESTINATION_PT_CODE’s data type are in character format. Because they represent bus stop locations, they should be transformed into factors (categorical data type) for further analysis.\n\n\nData Hygiene\n\n\nCode\ncount_duplicate_rows &lt;- function(df, df_name) {\n  df %&gt;%     \n    group_by_all() %&gt;%     \n    filter(n() &gt; 1) %&gt;%     \n    ungroup() %&gt;%     \n    summarise(df_name = df_name, row_count = n()) }  \nbus09_dupes  &lt;- count_duplicate_rows(bus09, \"bus09\")\nprint(bus09_dupes)\n\n\n# A tibble: 1 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 bus09           0\n\n\n\n\nCode\ncount_null_rows &lt;- function(df, df_name) {\n  df %&gt;%\n    filter(if_any(everything(), is.na)) %&gt;%\n    summarise(df_name = df_name, row_count = n())\n}\n\nbus09_nulls &lt;- count_null_rows(bus09, \"bus09\")\n\nprint(bus09_nulls)\n\n\n# A tibble: 1 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 bus09           0\n\n\nThere are no nulls or duplicates in the data, it shows good hygiene\n\n\nData Filtration\nFollowing the findings from Take-home_Ex1 as well, we concur that the Weekday Morning peak period (6am-9am) is the peak period that sees the most High-High following the LISA analysis, hence will be made the target for the purpose of our task. This is done in the code block below.\n\n\nCode\nget_origin_dest &lt;- function(data, daytype, timeinterval) {\n  result &lt;- data %&gt;%\n    filter(DAY_TYPE == daytype) %&gt;%\n    filter(TIME_PER_HOUR &gt;= timeinterval[1] & TIME_PER_HOUR &lt;= timeinterval[2]) %&gt;%\n    group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n    summarise(TRIPS = sum(TOTAL_TRIPS)) %&gt;%\n    ungroup() # Ungroup for further operations if needed\n\n  return(result)\n}\n\n# Get the data for 'WEEKDAY' between 6am and 8am\nwd_morning &lt;- get_origin_dest(bus09, 'WEEKDAY', c(6, 9))\n\n\n\n\nCode\nhead(wd_morning,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nORIGIN_PT_CODE\nDESTINATION_PT_CODE\nTRIPS\n\n\n\n\n01012\n01112\n208\n\n\n01012\n01113\n112\n\n\n01012\n01121\n63\n\n\n01012\n01211\n118\n\n\n01012\n01311\n195\n\n\n01012\n01621\n3\n\n\n01012\n01639\n1\n\n\n01012\n07371\n10\n\n\n01012\n60011\n30\n\n\n01012\n60021\n18\n\n\n\n\n\n\n\n\n\n\nCode\nwd_morning_num_rows &lt;- nrow(wd_morning)\nprint(wd_morning_num_rows)\n\n\n[1] 238511"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#geospatial-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#geospatial-data",
    "title": "Take-home_Ex2",
    "section": "6.2 Geospatial Data",
    "text": "6.2 Geospatial Data\nLike in Take-home_Ex1, we’ll be loading the Bus Stop Location shapefiles into R, resulting in an sf point object that contains 5161 points and 3 fields. Initially in the WSG84 geographical coordinate system, this data will be transformed to the EPSG 3414 projected coordinate system, which is specific to Singapore.\n\n\n\nCode\nbusstop &lt;- st_read(dsn=\"data/geospatial\", layer = \"BusStop\") %&gt;% \n  st_transform(crs = 3414)\n\n\nReading layer `BusStop' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\n\nCode\nbusstop_num_rows &lt;- nrow(busstop)\nprint(busstop_num_rows)\n\n\n[1] 5161\n\n\n\nData Hygiene\n\n\nCode\ncount_null_rows &lt;- function(df, df_name, columns) {\n  # Temporarily drop the geometry column\n  df_no_geom &lt;- df %&gt;% \n    st_set_geometry(NULL) %&gt;%\n    select(all_of(columns))\n\n  # Counting null rows\n  null_counts &lt;- df_no_geom %&gt;%\n    filter(if_any(everything(), is.na)) %&gt;%\n    summarise(df_name = df_name, row_count = n())\n\n  return(null_counts)\n}\n\n# Apply function to 'busstop' dataframe for 'BUS_STOP_N' column\nbusstop_nulls &lt;- count_null_rows(busstop, \"busstop\", c(\"BUS_STOP_N\"))\n\nprint(busstop_nulls)\n\n\n  df_name row_count\n1 busstop         0\n\n\n\n\nCode\nbusstop %&gt;% \n  st_drop_geometry() %&gt;% \n  group_by(BUS_STOP_N) %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup() %&gt;% \n  arrange(BUS_STOP_N)\n\n\n# A tibble: 32 × 3\n   BUS_STOP_N BUS_ROOF_N LOC_DESC            \n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;               \n 1 11009      B04        Ghim Moh Ter        \n 2 11009      B04-TMNL   GHIM MOH TER        \n 3 22501      B02        Blk 662A            \n 4 22501      B02        BLK 662A            \n 5 43709      B06        BLK 644             \n 6 43709      B06        BLK 644             \n 7 47201      UNK        &lt;NA&gt;                \n 8 47201      NIL        W'LANDS NTH STN     \n 9 51071      B21        MACRITCHIE RESERVOIR\n10 51071      B21        MACRITCHIE RESERVOIR\n# ℹ 22 more rows\n\n\nThere are no nulls in the BUS_STOP_N column, indicating that the primary key of the data at the very least is sound.\n\nNext we look at duplicates, it can be seen that there are indeed duplicates in the Geospatial data set. Upon investigation we can see for each corresponding BUS_STOP_N, the LOC_DESC column is mostly duplicated, which could be a result of temporary bus stops or bus stop reconstruction which results in a shift to a location in the vicinity of the original bus stop.\nThis however is not the case for BUS_STOP_N 47201 which sees the LOC_DESC possessing a NA value, as well as 52059, 77329 which sees that the LOC_DESC indicating a different bus stop for their duplicated BUS_STOP_N.\nWe then look to Transitlink’s website to verify the information of the identified BUS_STOP_N and will process the duplicates in the code blocks below\n\n\nCode\n# Overwrite the busstop dataframe with the filtered results\nbusstop &lt;- busstop %&gt;%\n  filter(\n    !(BUS_STOP_N == '47201' & is.na(LOC_DESC)) & \n    !(BUS_STOP_N == '52059' & LOC_DESC == 'OPP BLK 65') & \n    !(BUS_STOP_N == '77329' & LOC_DESC == 'Pasir Ris Central')\n  )\n\n\n\n\nCode\nbusstop &lt;- busstop %&gt;%\n  filter(!duplicated(BUS_STOP_N))\n\n\n\n\nCode\nbusstop %&gt;% \n  st_drop_geometry() %&gt;% \n  group_by(BUS_STOP_N) %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup() %&gt;% \n  arrange(BUS_STOP_N)\n\n\n# A tibble: 0 × 3\n# ℹ 3 variables: BUS_STOP_N &lt;chr&gt;, BUS_ROOF_N &lt;chr&gt;, LOC_DESC &lt;chr&gt;\n\n\nWe have processed the anomalies and dropped the duplicated as per the code output above."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#multipolygon",
    "href": "Take-home_Ex2/Take-home_Ex2.html#multipolygon",
    "title": "Take-home_Ex2",
    "section": "6.3 Multipolygon ",
    "text": "6.3 Multipolygon \n\n\nCode\nmpsz19 &lt;- st_read(dsn='data/geospatial/',\n                layer='MPSZ-2019') %&gt;% \n  st_transform(crs=3414)\n\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Zackkoh94\\ISSS624\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\nCode\nhead(mpsz19,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nSUBZONE_N\nSUBZONE_C\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\ngeometry\n\n\n\n\nMARINA EAST\nMESZ01\nMARINA EAST\nME\nCENTRAL REGION\nCR\nMULTIPOLYGON (((33222.98 29...\n\n\nINSTITUTION HILL\nRVSZ05\nRIVER VALLEY\nRV\nCENTRAL REGION\nCR\nMULTIPOLYGON (((28481.45 30...\n\n\nROBERTSON QUAY\nSRSZ01\nSINGAPORE RIVER\nSR\nCENTRAL REGION\nCR\nMULTIPOLYGON (((28087.34 30...\n\n\nJURONG ISLAND AND BUKOM\nWISZ01\nWESTERN ISLANDS\nWI\nWEST REGION\nWR\nMULTIPOLYGON (((14557.7 304...\n\n\nFORT CANNING\nMUSZ02\nMUSEUM\nMU\nCENTRAL REGION\nCR\nMULTIPOLYGON (((29542.53 31...\n\n\nMARINA EAST (MP)\nMPSZ05\nMARINE PARADE\nMP\nCENTRAL REGION\nCR\nMULTIPOLYGON (((35279.55 30...\n\n\nSUDONG\nWISZ03\nWESTERN ISLANDS\nWI\nWEST REGION\nWR\nMULTIPOLYGON (((15772.59 21...\n\n\nSEMAKAU\nWISZ02\nWESTERN ISLANDS\nWI\nWEST REGION\nWR\nMULTIPOLYGON (((19843.41 21...\n\n\nSOUTHERN GROUP\nSISZ02\nSOUTHERN ISLANDS\nSI\nCENTRAL REGION\nCR\nMULTIPOLYGON (((30870.53 22...\n\n\nSENTOSA\nSISZ01\nSOUTHERN ISLANDS\nSI\nCENTRAL REGION\nCR\nMULTIPOLYGON (((26879.04 26..."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#hexagon-layer",
    "href": "Take-home_Ex2/Take-home_Ex2.html#hexagon-layer",
    "title": "Take-home_Ex2",
    "section": "6.4 Hexagon Layer",
    "text": "6.4 Hexagon Layer\n\n\nCode\nhx_grid = st_make_grid(busstop, cellsize = 750, what = \"polygons\", square = FALSE)\n\nhx_grid_sf = st_sf(hx_grid) %&gt;%\n  rowid_to_column(\"hex_id\")\n\nhx_grid_sf$count_busstop = lengths(st_intersects(hx_grid_sf, busstop))\n\ncount_busstop = filter(hx_grid_sf, count_busstop &gt; 0)\n\ncount_busstop\n\n\nSimple feature collection with 834 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3595.122 ymin: 26049.09 xmax: 48595.12 ymax: 53545.39\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   hex_id                        hx_grid count_busstop\n1      23 POLYGON ((3970.122 27348.13...             1\n2      44 POLYGON ((4345.122 27997.65...             1\n3      46 POLYGON ((4345.122 30595.72...             2\n4      66 POLYGON ((4720.122 28647.16...             1\n5      67 POLYGON ((4720.122 29946.2,...             4\n6      68 POLYGON ((4720.122 31245.24...             1\n7      86 POLYGON ((5095.122 27997.65...             1\n8      87 POLYGON ((5095.122 29296.68...             1\n9      88 POLYGON ((5095.122 30595.72...             4\n10     89 POLYGON ((5095.122 31894.76...             2\n\n\n\nData Hygiene\n\n\nCode\nbusstop_hx &lt;- st_intersection(busstop, count_busstop) %&gt;% \n  select(BUS_STOP_N, LOC_DESC,hex_id, count_busstop)\n\nbusstop_hx\n\n\nSimple feature collection with 5145 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     BUS_STOP_N            LOC_DESC hex_id count_busstop\n3259      25059   AFT TUAS STH BLVD     23             1\n2564      25751 BEF TUAS STH AVE 14     44             1\n254       26379            YONG NAM     46             2\n2397      26369        SEE HUP SENG     46             2\n2822      25741         HALLIBURTON     66             1\n1713      26399  AFT TUAS VIEW CRES     67             4\n2820      25719           THE INDEX     67             4\n2821      25711       OPP THE INDEX     67             4\n4188      26389  BEF TUAS STH AVE 5     67             4\n1563      26299  BEF TUAS STH AVE 6     68             1\n                      geometry\n3259 POINT (3970.122 28063.28)\n2564 POINT (4427.939 28758.67)\n254  POINT (4473.292 30681.57)\n2397 POINT (4604.363 31212.96)\n2822  POINT (5060.733 29212.4)\n1713  POINT (5079.51 30214.42)\n2820 POINT (4799.476 30158.46)\n2821 POINT (4831.438 30132.43)\n4188 POINT (4776.694 30324.88)\n1563 POINT (4879.489 31948.93)\n\n\n\n\nCode\nbusstop_hx_test &lt;- busstop_hx\nbusstop_hx &lt;- busstop_hx  %&gt;% \n  st_drop_geometry()\n\ndatatable(busstop_hx, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\nThe outcomes indicated above reveal that each bus stop is positioned within at least one of the hexagonal grids."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#pivot-to-table",
    "href": "Take-home_Ex2/Take-home_Ex2.html#pivot-to-table",
    "title": "Take-home_Ex2",
    "section": "7.2 Pivot to Table",
    "text": "7.2 Pivot to Table\n\nNext, we pviot the distance matrix (wide) to form a table (long).\nFor this task, the melt() function from the reshape2 package will be employed. To do so, the function creates a dataframe where each row corresponds to a unique combination of row and column indices from the matrix, along with their respective values.\n\n\nCode\ndist_pairs &lt;- reshape2::melt(dist) %&gt;%\n  rename(dist = value)\nhead(dist_pairs, 10)\n\n\n   Var1 Var2     dist\n1    23   23    0.000\n2    44   23  750.000\n3    46   23 3269.174\n4    66   23 1500.000\n5    67   23 2704.163\n6    68   23 3968.627\n7    86   23 1299.038\n8    87   23 2250.000\n9    88   23 3436.932\n10   89   23 4683.748\n\n\n\n\nCode\nhead(dist_pairs,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nVar1\nVar2\ndist\n\n\n\n\n23\n23\n0.000\n\n\n44\n23\n750.000\n\n\n46\n23\n3269.174\n\n\n66\n23\n1500.000\n\n\n67\n23\n2704.163\n\n\n68\n23\n3968.627\n\n\n86\n23\n1299.038\n\n\n87\n23\n2250.000\n\n\n88\n23\n3436.932\n\n\n89\n23\n4683.748\n\n\n\n\n\n\n\n\n\n\nCode\ndist_pairs_num_rows &lt;- nrow(dist_pairs)\nprint(dist_pairs_num_rows)\n\n\n[1] 695556\n\n\nFootnote: 695,556 is derived from the original 834 rows squared, which is the max number of permutations.\n\n\nCode\n# Check if there are any rows where dist equals 0 and count them\nany_zero_distances &lt;- any(dist_pairs $dist == 0)\ncount_zero_distances &lt;- sum(dist_pairs $dist == 0)\n\n# Print the results\nprint(paste(\"Any zero distances:\", any_zero_distances))\n\n\n[1] \"Any zero distances: TRUE\"\n\n\nCode\nprint(paste(\"Count of zero distances:\", count_zero_distances))\n\n\n[1] \"Count of zero distances: 834\"\n\n\nWe will filter out data where dist_pairs = 0, as those values will not reap any meaningful insights at all.\n\n\nCode\ndist_pairs %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n\n      Var1           Var2           dist      \n Min.   :  23   Min.   :  23   Min.   :  750  \n 1st Qu.: 871   1st Qu.: 871   1st Qu.: 8352  \n Median :1324   Median :1324   Median :13332  \n Mean   :1269   Mean   :1269   Mean   :14162  \n 3rd Qu.:1688   3rd Qu.:1688   3rd Qu.:18929  \n Max.   :2505   Max.   :2505   Max.   :44680  \n\n\n\n\nCode\ndist_pairs$dist &lt;- ifelse(dist_pairs$dist == 0,\n                        325, dist_pairs$dist)\n\ndist_pairs &lt;- dist_pairs %&gt;%\n  rename(O_HEX_ID = Var1,\n         D_HEX_ID = Var2)\n\nhead(dist_pairs,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nO_HEX_ID\nD_HEX_ID\ndist\n\n\n\n\n23\n23\n325.000\n\n\n44\n23\n750.000\n\n\n46\n23\n3269.174\n\n\n66\n23\n1500.000\n\n\n67\n23\n2704.163\n\n\n68\n23\n3968.627\n\n\n86\n23\n1299.038\n\n\n87\n23\n2250.000\n\n\n88\n23\n3436.932\n\n\n89\n23\n4683.748\n\n\n\n\n\n\n\n\nFootnote: We set the intra-zonal distance to be apothem of 325 apothem\n\n\nCode\nglimpse(dist_pairs)\n\n\nRows: 695,556\nColumns: 3\n$ O_HEX_ID &lt;int&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, 109, 110, 111, 11…\n$ D_HEX_ID &lt;int&gt; 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 2…\n$ dist     &lt;dbl&gt; 325.000, 750.000, 3269.174, 1500.000, 2704.163, 3968.627, 129…"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#distance-matrix",
    "href": "Take-home_Ex2/Take-home_Ex2.html#distance-matrix",
    "title": "Take-home_Ex2",
    "section": "7.1 Distance Matrix",
    "text": "7.1 Distance Matrix\nThe as.Spatial() function is first employed to transform the count_busstop dataframe, which is currently a sf (simple features) tibble, into a SpatialPolygonsDataFrame (an object type from the sp package). This package is utilized because it is more efficient in computing the distance matrix than the sf package. Subsequently, the spDists() function from the sp package will be utilized to calculate the Euclidean distances between the center points of each hexagon. Lastly, we will\n\n\nCode\ncount_busstop_sp &lt;- as(count_busstop, \"Spatial\")\n\n\n\n\nCode\ndist &lt;- sp::spDists(count_busstop_sp, \n                longlat = FALSE)\nhead(dist, n=c(4, 4))\n\n\n         [,1]     [,2]     [,3]     [,4]\n[1,]    0.000  750.000 3269.174 1500.000\n[2,]  750.000    0.000 2598.076  750.000\n[3,] 3269.174 2598.076    0.000 1984.313\n[4,] 1500.000  750.000 1984.313    0.000\n\n\n\n\nCode\n#rename to attach hex_id for future steps\nhex_id_rename &lt;- count_busstop$hex_id\n\ncolnames(dist) &lt;- paste0(hex_id_rename)\nrownames(dist) &lt;- paste0(hex_id_rename)\ndist[1:4,1:4]\n\n\n         23       44       46       66\n23    0.000  750.000 3269.174 1500.000\n44  750.000    0.000 2598.076  750.000\n46 3269.174 2598.076    0.000 1984.313\n66 1500.000  750.000 1984.313    0.000"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#flow-data-preparation",
    "href": "Take-home_Ex2/Take-home_Ex2.html#flow-data-preparation",
    "title": "Take-home_Ex2",
    "section": "7.3 Flow Data Preparation",
    "text": "7.3 Flow Data Preparation\nIn this section, we aim to create a dataframe that includes the count of TRIPS and the corresponding distances for each pair of origin and destination grid IDs.\n\n\nCode\nflow_data &lt;- odmat %&gt;%\n  group_by(O_HEX_ID, D_HEX_ID) %&gt;% \n  summarize(TRIPS = sum(WD_MORNING)) \n\nhead(flow_data,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nO_HEX_ID\nD_HEX_ID\nTRIPS\n\n\n\n\n23\n67\n3\n\n\n23\n86\n1\n\n\n23\n88\n1\n\n\n23\n128\n15\n\n\n23\n132\n1\n\n\n23\n154\n3\n\n\n23\n155\n1\n\n\n23\n175\n65\n\n\n23\n176\n1\n\n\n44\n88\n6\n\n\n\n\n\n\n\n\n\n\nCode\nflow_data$NoIntra &lt;- ifelse(\n  flow_data$O_HEX_ID == flow_data$D_HEX_ID, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$O_HEX_ID == flow_data$D_HEX_ID, \n  0.000001, 1)\ninter_flow &lt;- flow_data %&gt;% \n  filter(NoIntra &gt;0)\nglimpse(inter_flow)\n\n\nRows: 64,128\nColumns: 5\nGroups: O_HEX_ID [816]\n$ O_HEX_ID &lt;int&gt; 23, 23, 23, 23, 23, 23, 23, 23, 23, 44, 44, 44, 44, 44, 46, 4…\n$ D_HEX_ID &lt;int&gt; 67, 86, 88, 128, 132, 154, 155, 175, 176, 88, 128, 154, 155, …\n$ TRIPS    &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54, …\n$ NoIntra  &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54, …\n$ offset   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n\n\nWe will filter out data where distance= 0, as those values will not reap any meaningful insights at all.\n\nLeft Join passenger volume data (inter-zone) with distance value\n\n\nCode\ninter_flow$O_HEX_ID  &lt;- as.factor(inter_flow$O_HEX_ID)\ninter_flow$D_HEX_ID  &lt;- as.factor(inter_flow$D_HEX_ID )\ndist_pairs$O_HEX_ID  &lt;- as.factor(dist_pairs$O_HEX_ID)\ndist_pairs$D_HEX_ID  &lt;- as.factor(dist_pairs$D_HEX_ID )\nFD1 &lt;- inter_flow %&gt;%\n  left_join (dist_pairs,\n             by = c(\"O_HEX_ID\" = \"O_HEX_ID\",\n                    \"D_HEX_ID\" = \"D_HEX_ID\"))\n\nglimpse(FD1)\n\n\nRows: 64,128\nColumns: 6\nGroups: O_HEX_ID [816]\n$ O_HEX_ID &lt;fct&gt; 23, 23, 23, 23, 23, 23, 23, 23, 23, 44, 44, 44, 44, 44, 46, 4…\n$ D_HEX_ID &lt;fct&gt; 67, 86, 88, 128, 132, 154, 155, 175, 176, 88, 128, 154, 155, …\n$ TRIPS    &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54, …\n$ NoIntra  &lt;dbl&gt; 3, 1, 1, 15, 1, 3, 1, 65, 1, 6, 2, 1, 1, 31, 2, 2, 2, 1, 54, …\n$ offset   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dist     &lt;dbl&gt; 2704.163, 1299.038, 3436.932, 1984.313, 6139.015, 6873.864, 8…\n\n\n\n\nCode\nhead(FD1,10) %&gt;%\n  kbl() %&gt;%\n  kable_styling(\n    full_width = F, \n    bootstrap_options = c(\"condensed\", \"responsive\"))\n\n\n\n\n\n\nO_HEX_ID\nD_HEX_ID\nTRIPS\nNoIntra\noffset\ndist\n\n\n\n\n23\n67\n3\n3\n1\n2704.163\n\n\n23\n86\n1\n1\n1\n1299.038\n\n\n23\n88\n1\n1\n1\n3436.932\n\n\n23\n128\n15\n15\n1\n1984.313\n\n\n23\n132\n1\n1\n1\n6139.015\n\n\n23\n154\n3\n3\n1\n6873.864\n\n\n23\n155\n1\n1\n1\n8112.490\n\n\n23\n175\n65\n65\n1\n7611.669\n\n\n23\n176\n1\n1\n1\n8842.370\n\n\n44\n88\n6\n6\n1\n2704.163"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-o-d-flows",
    "href": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-o-d-flows",
    "title": "Take-home_Ex2",
    "section": "7.4 Visualising the O-D flows",
    "text": "7.4 Visualising the O-D flows\nEliminating intra-zonal flows as mentioned before as it bears no meaningful insights\n\n\nCode\nodm1 &lt;- odmat[odmat$O_HEX_ID!=odmat$D_HEX_ID    ,]\n\n\n\n\nCode\nflowLine &lt;- od2line(flow=FD1,\n                    zones= count_busstop,\n                    zone_code= 'hex_id')\n\n\n\n\nCode\nodm1$O_HEX_ID &lt;- as.factor(odm1$O_HEX_ID)\nodm1$D_HEX_ID &lt;- as.factor(odm1$D_HEX_ID)\n\nflowLine &lt;- left_join(flowLine, odm1,\n                      by = c('O_HEX_ID' = 'O_HEX_ID',\n                             'D_HEX_ID' = 'D_HEX_ID')) %&gt;% \n  select(-c(WD_MORNING))\n\n\n\n\nCode\nsummary(flowLine$TRIPS)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    1.0     7.0    34.0   334.4   157.0 87493.0 \n\n\n\n\nCode\nquantile(flowLine$TRIPS, probs = seq(0, 1, 0.01), na.rm = TRUE)\n\n\n      0%       1%       2%       3%       4%       5%       6%       7% \n    1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00 \n      8%       9%      10%      11%      12%      13%      14%      15% \n    1.00     2.00     2.00     2.00     2.00     2.00     3.00     3.00 \n     16%      17%      18%      19%      20%      21%      22%      23% \n    3.00     4.00     4.00     4.00     5.00     5.00     5.00     6.00 \n     24%      25%      26%      27%      28%      29%      30%      31% \n    6.00     7.00     7.00     8.00     9.00     9.00    10.00    11.00 \n     32%      33%      34%      35%      36%      37%      38%      39% \n   12.00    12.00    13.00    14.00    15.00    16.00    17.00    18.00 \n     40%      41%      42%      43%      44%      45%      46%      47% \n   19.00    20.00    22.00    23.00    24.00    26.00    27.00    29.00 \n     48%      49%      50%      51%      52%      53%      54%      55% \n   30.00    32.00    34.00    36.00    38.00    41.00    43.00    45.00 \n     56%      57%      58%      59%      60%      61%      62%      63% \n   48.00    51.00    54.00    58.00    61.00    65.00    68.00    73.00 \n     64%      65%      66%      67%      68%      69%      70%      71% \n   77.00    82.00    87.00    93.00    99.00   105.00   113.00   119.17 \n     72%      73%      74%      75%      76%      77%      78%      79% \n  128.00   137.00   146.00   157.00   169.00   181.00   195.00   211.00 \n     80%      81%      82%      83%      84%      85%      86%      87% \n  227.00   246.00   266.00   290.00   319.00   348.00   381.00   422.00 \n     88%      89%      90%      91%      92%      93%      94%      95% \n  469.00   522.00   589.00   665.00   757.84   877.00  1037.00  1249.65 \n     96%      97%      98%      99%     100% \n 1573.92  2062.38  2990.68  5446.92 87493.00 \n\n\nWe now attempt to visualize for the 3rd Quantile and up\n\n\nCode\ntmap_mode('plot')\n\nq3q4_flowLine &lt;- flowLine %&gt;%\n  filter(TRIPS &gt;= 157)\n\ncount_busstop_filtered &lt;- count_busstop %&gt;%\n  filter(hex_id %in% c(q3q4_flowLine$O_HEX_ID, q3q4_flowLine$D_HEX_ID))\n\ntm_shape(mpsz19) +\n  tm_polygons(alpha=0.3)+\n              #col='black') +\n#tm_shape(count_busstop_filtered) +\n  #tm_polygons(alpha=0.3) +\n  \n  q3q4_flowLine %&gt;%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.3,\n           col='red') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.position = \"center\",\n            main.title.size = 2.0,\n            main.title.fontface = 'bold') +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\nAs shown the map is illegible and it is hard to distinguish or intepret from the map. Hence we now attempt to scale this down by filtering from the 99th percentile: 5446.92\n\n\nCode\ntmap_mode('plot')\n\nq3q4_flowLine &lt;- flowLine %&gt;%\n  filter(TRIPS &gt;= 5446.92)\n\ncount_busstop_filtered &lt;- count_busstop %&gt;%\n  filter(hex_id %in% c(q3q4_flowLine$O_HEX_ID, q3q4_flowLine$D_HEX_ID))\n\ntm_shape(mpsz19) +\n  tm_polygons(alpha=0.3)+\n              #col='black') +\n#tm_shape(count_busstop_filtered) +\n  #tm_polygons(alpha=0.3) +\n  \n  q3q4_flowLine %&gt;%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.3,\n           col='red') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.position = \"center\",\n            main.title.size = 2.0,\n            main.title.fontface = 'bold') +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()"
  }
]